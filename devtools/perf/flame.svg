<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>syscall.Syscall (2 samples, 0.09%)</title><rect x="840.8" y="197" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="843.77" y="207.5" ></text>
</g>
<g >
<title>github.com/jackc/puddle/v2.(*Pool[go.shape.*uint8]).acquire (22 samples, 0.97%)</title><rect x="590.1" y="341" width="11.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="593.14" y="351.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (2 samples, 0.09%)</title><rect x="132.5" y="549" width="1.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="135.46" y="559.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.04%)</title><rect x="285.0" y="501" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="288.02" y="511.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (1 samples, 0.04%)</title><rect x="67.1" y="485" width="0.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="70.08" y="495.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (9 samples, 0.40%)</title><rect x="990.2" y="485" width="4.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="993.22" y="495.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="43.7" y="485" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="46.73" y="495.5" ></text>
</g>
<g >
<title>net/http.newBufioWriterSize (2 samples, 0.09%)</title><rect x="131.4" y="581" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="134.42" y="591.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (1 samples, 0.04%)</title><rect x="1085.7" y="517" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1088.70" y="527.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgtype.(*Map).PlanEncode (5 samples, 0.22%)</title><rect x="615.6" y="261" width="2.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="618.57" y="271.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).SendBind (6 samples, 0.26%)</title><rect x="578.2" y="325" width="3.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="581.21" y="335.5" ></text>
</g>
<g >
<title>runtime.pcvalue (8 samples, 0.35%)</title><rect x="990.7" y="469" width="4.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="993.74" y="479.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*counter).Inc (1 samples, 0.04%)</title><rect x="761.9" y="309" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="764.90" y="319.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (3 samples, 0.13%)</title><rect x="838.7" y="165" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.70" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="865.2" y="325" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="868.16" y="335.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).Add (1 samples, 0.04%)</title><rect x="445.9" y="197" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="448.88" y="207.5" ></text>
</g>
<g >
<title>github.com/zsais/go-gin-prometheus.(*Prometheus).Use.(*Prometheus).HandlerFunc.func1 (951 samples, 41.82%)</title><rect x="400.2" y="501" width="493.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="403.22" y="511.5" >github.com/zsais/go-gin-prometheus.(*Prometheus).Use.(*Prometheus)...</text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="833.0" y="261" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="835.99" y="271.5" ></text>
</g>
<g >
<title>runtime.gcStart (1 samples, 0.04%)</title><rect x="139.7" y="501" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="142.73" y="511.5" ></text>
</g>
<g >
<title>runtime.getitab (3 samples, 0.13%)</title><rect x="874.0" y="405" width="1.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="876.98" y="415.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Flush (1 samples, 0.04%)</title><rect x="838.2" y="277" width="0.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="841.18" y="287.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).execExtendedSuffix (1 samples, 0.04%)</title><rect x="838.2" y="309" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="841.18" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.04%)</title><rect x="868.3" y="293" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="871.28" y="303.5" ></text>
</g>
<g >
<title>runtime.futex (19 samples, 0.84%)</title><rect x="1036.9" y="501" width="9.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1039.92" y="511.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.04%)</title><rect x="114.8" y="533" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="117.82" y="543.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.04%)</title><rect x="865.7" y="293" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="868.68" y="303.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (1 samples, 0.04%)</title><rect x="944.6" y="453" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="947.56" y="463.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).peekMessage (1 samples, 0.04%)</title><rect x="759.3" y="277" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="762.31" y="287.5" ></text>
</g>
<g >
<title>runtime.rawstring (3 samples, 0.13%)</title><rect x="116.9" y="549" width="1.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="119.90" y="559.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="66.0" y="485" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="69.04" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/puddle/v2.(*Resource[go.shape.*uint8]).Value (1 samples, 0.04%)</title><rect x="603.6" y="389" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="606.63" y="399.5" ></text>
</g>
<g >
<title>runtime.makemap_small (73 samples, 3.21%)</title><rect x="796.1" y="389" width="37.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="799.15" y="399.5" >run..</text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.04%)</title><rect x="394.5" y="565" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="397.51" y="575.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Peek (1 samples, 0.04%)</title><rect x="159.4" y="533" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="162.45" y="543.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.04%)</title><rect x="65.5" y="469" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="68.52" y="479.5" ></text>
</g>
<g >
<title>runtime.casgstatus (3 samples, 0.13%)</title><rect x="799.8" y="309" width="1.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="802.78" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="168.3" y="517" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="171.27" y="527.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.04%)</title><rect x="884.4" y="357" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="887.36" y="367.5" ></text>
</g>
<g >
<title>unicode/utf8.RuneCountInString (1 samples, 0.04%)</title><rect x="933.7" y="421" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="936.66" y="431.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (5 samples, 0.22%)</title><rect x="802.4" y="277" width="2.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="805.37" y="287.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="1063.4" y="565" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1066.39" y="575.5" ></text>
</g>
<g >
<title>runtime.write1 (2 samples, 0.09%)</title><rect x="1151.6" y="517" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1154.60" y="527.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (2 samples, 0.09%)</title><rect x="129.3" y="581" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="132.35" y="591.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*chunkReader).Next (1 samples, 0.04%)</title><rect x="764.5" y="261" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="767.49" y="271.5" ></text>
</g>
<g >
<title>net/http.newTextprotoReader (2 samples, 0.09%)</title><rect x="132.5" y="565" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="135.46" y="575.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.04%)</title><rect x="103.4" y="469" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="106.40" y="479.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (2 samples, 0.09%)</title><rect x="859.5" y="357" width="1.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="862.45" y="367.5" ></text>
</g>
<g >
<title>net/http.newBufioWriterSize (1 samples, 0.04%)</title><rect x="395.0" y="597" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="398.03" y="607.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="741.1" y="293" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="744.14" y="303.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).init (1 samples, 0.04%)</title><rect x="987.1" y="517" width="0.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="990.11" y="527.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).enterPotentialWriteReadDeadlock (1 samples, 0.04%)</title><rect x="840.3" y="293" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="843.26" y="303.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (3 samples, 0.13%)</title><rect x="704.8" y="149" width="1.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="707.82" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="1063.9" y="549" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1066.91" y="559.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.04%)</title><rect x="558.5" y="101" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="561.49" y="111.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="88.4" y="565" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="91.36" y="575.5" ></text>
</g>
<g >
<title>runtime.procresize (1 samples, 0.04%)</title><rect x="984.5" y="517" width="0.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="987.51" y="527.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.04%)</title><rect x="792.0" y="293" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="795.00" y="303.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/servers.UsePrometheusMiddleware.func2 (27 samples, 1.19%)</title><rect x="403.3" y="469" width="14.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="406.33" y="479.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (2 samples, 0.09%)</title><rect x="781.6" y="309" width="1.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="784.62" y="319.5" ></text>
</g>
<g >
<title>syscall.Read (39 samples, 1.72%)</title><rect x="706.9" y="181" width="20.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="709.90" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="978.3" y="549" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="981.28" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.13%)</title><rect x="412.7" y="421" width="1.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="415.67" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.13%)</title><rect x="949.2" y="501" width="1.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="952.23" y="511.5" ></text>
</g>
<g >
<title>runtime.getempty (1 samples, 0.04%)</title><rect x="1003.7" y="453" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1006.71" y="463.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.hashAdd (1 samples, 0.04%)</title><rect x="407.5" y="389" width="0.5" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="410.48" y="399.5" ></text>
</g>
<g >
<title>runtime.readvarint (1 samples, 0.04%)</title><rect x="998.0" y="437" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1001.00" y="447.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.validateLabelValues (1 samples, 0.04%)</title><rect x="408.0" y="389" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="411.00" y="399.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="462.5" y="261" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="465.49" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.22%)</title><rect x="62.4" y="501" width="2.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="65.41" y="511.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="591.7" y="293" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="594.70" y="303.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (4 samples, 0.18%)</title><rect x="92.0" y="469" width="2.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="94.99" y="479.5" ></text>
</g>
<g >
<title>sync.(*copyChecker).check (1 samples, 0.04%)</title><rect x="153.7" y="485" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="156.74" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).flushWithPotentialWriteReadDeadlock (164 samples, 7.21%)</title><rect x="463.5" y="309" width="85.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="466.53" y="319.5" >github.com..</text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Execute).Encode (1 samples, 0.04%)</title><rect x="577.7" y="293" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="580.69" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.04%)</title><rect x="963.8" y="549" width="0.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="966.76" y="559.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.04%)</title><rect x="1029.1" y="501" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1032.14" y="511.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.04%)</title><rect x="74.3" y="437" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="77.34" y="447.5" ></text>
</g>
<g >
<title>syscall.read (11 samples, 0.48%)</title><rect x="972.1" y="549" width="5.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="975.06" y="559.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.(*ReactionsStorage).advLock (5 samples, 0.22%)</title><rect x="840.3" y="421" width="2.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="843.26" y="431.5" ></text>
</g>
<g >
<title>syscall.Syscall (33 samples, 1.45%)</title><rect x="558.0" y="149" width="17.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="560.97" y="159.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).execPrepared (4 samples, 0.18%)</title><rect x="840.3" y="341" width="2.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="843.26" y="351.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (2 samples, 0.09%)</title><rect x="746.9" y="341" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="749.85" y="351.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (9 samples, 0.40%)</title><rect x="68.1" y="469" width="4.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="71.12" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocManual (2 samples, 0.09%)</title><rect x="832.0" y="245" width="1.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="834.95" y="255.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).flushWithPotentialWriteReadDeadlock (3 samples, 0.13%)</title><rect x="838.7" y="293" width="1.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="841.70" y="303.5" ></text>
</g>
<g >
<title>runtime.mput (1 samples, 0.04%)</title><rect x="1169.8" y="533" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1172.76" y="543.5" ></text>
</g>
<g >
<title>fmt.(*fmt).padString (1 samples, 0.04%)</title><rect x="933.7" y="437" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="936.66" y="447.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.04%)</title><rect x="167.7" y="533" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="170.75" y="543.5" ></text>
</g>
<g >
<title>syscall.Read (11 samples, 0.48%)</title><rect x="972.1" y="565" width="5.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="975.06" y="575.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*histogram).observe (1 samples, 0.04%)</title><rect x="762.4" y="293" width="0.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="765.42" y="303.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (10 samples, 0.44%)</title><rect x="74.9" y="453" width="5.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="77.86" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.18%)</title><rect x="111.7" y="565" width="2.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="114.71" y="575.5" ></text>
</g>
<g >
<title>container/list.(*List).remove (1 samples, 0.04%)</title><rect x="435.0" y="277" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="437.99" y="287.5" ></text>
</g>
<g >
<title>runtime.wakep (16 samples, 0.70%)</title><rect x="772.3" y="197" width="8.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="775.28" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.18%)</title><rect x="890.1" y="453" width="2.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="893.07" y="463.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (2 samples, 0.09%)</title><rect x="984.0" y="581" width="1.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="986.99" y="591.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.04%)</title><rect x="601.0" y="325" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="604.04" y="335.5" ></text>
</g>
<g >
<title>container/list.(*List).insertValue (3 samples, 0.13%)</title><rect x="590.7" y="325" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="593.66" y="335.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Tx).Exec (5 samples, 0.22%)</title><rect x="840.3" y="405" width="2.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="843.26" y="415.5" ></text>
</g>
<g >
<title>runtime.newobject (73 samples, 3.21%)</title><rect x="796.1" y="373" width="37.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="799.15" y="383.5" >run..</text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.09%)</title><rect x="1064.4" y="549" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1067.42" y="559.5" ></text>
</g>
<g >
<title>runtime.mapiternext (3 samples, 0.13%)</title><rect x="866.7" y="341" width="1.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="869.72" y="351.5" ></text>
</g>
<g >
<title>runtime.gcResetMarkState (1 samples, 0.04%)</title><rect x="139.7" y="469" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="142.73" y="479.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).getRows (5 samples, 0.22%)</title><rect x="611.4" y="341" width="2.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="614.42" y="351.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*ExtendedQueryBuilder).appendParam (5 samples, 0.22%)</title><rect x="454.7" y="309" width="2.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="457.71" y="319.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*poolRows).Close (34 samples, 1.50%)</title><rect x="431.4" y="357" width="17.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="434.35" y="367.5" ></text>
</g>
<g >
<title>reflect.Value.Field (1 samples, 0.04%)</title><rect x="854.3" y="309" width="0.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="857.27" y="319.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (2 samples, 0.09%)</title><rect x="16.2" y="437" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="19.23" y="447.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).makeCommandTag (2 samples, 0.09%)</title><rect x="429.8" y="325" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="432.80" y="335.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.04%)</title><rect x="840.3" y="181" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="843.26" y="191.5" ></text>
</g>
<g >
<title>syscall.Write (159 samples, 6.99%)</title><rect x="466.1" y="245" width="82.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="469.12" y="255.5" >syscall.W..</text>
</g>
<g >
<title>runtime.pollWork (3 samples, 0.13%)</title><rect x="1006.3" y="549" width="1.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1009.31" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.04%)</title><rect x="875.5" y="389" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="878.54" y="399.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (13 samples, 0.57%)</title><rect x="848.6" y="325" width="6.7" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="851.56" y="335.5" ></text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (2 samples, 0.09%)</title><rect x="781.6" y="293" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="784.62" y="303.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Tx).Query (1 samples, 0.04%)</title><rect x="838.2" y="373" width="0.5" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="841.18" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="429.8" y="293" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="432.80" y="303.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (13 samples, 0.57%)</title><rect x="819.0" y="261" width="6.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="821.98" y="271.5" ></text>
</g>
<g >
<title>runtime.siftupTimer (2 samples, 0.09%)</title><rect x="623.4" y="229" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="626.35" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.04%)</title><rect x="1064.9" y="485" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1067.94" y="495.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (2 samples, 0.09%)</title><rect x="856.3" y="309" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="859.34" y="319.5" ></text>
</g>
<g >
<title>net/http.(*body).Close (1 samples, 0.04%)</title><rect x="383.1" y="581" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="386.10" y="591.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.04%)</title><rect x="1033.3" y="565" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1036.29" y="575.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/internal/anynil.NormalizeSlice (2 samples, 0.09%)</title><rect x="588.6" y="357" width="1.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="591.58" y="367.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve.func1 (166 samples, 7.30%)</title><rect x="174.0" y="597" width="86.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="176.98" y="607.5" >net/http.(..</text>
</g>
<g >
<title>runtime.selectgo (7 samples, 0.31%)</title><rect x="752.0" y="309" width="3.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="755.04" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).init (27 samples, 1.19%)</title><rect x="48.4" y="501" width="14.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="51.40" y="511.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (2 samples, 0.09%)</title><rect x="15.2" y="389" width="1.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="18.19" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="868.3" y="357" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="871.28" y="367.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Conn).Query (271 samples, 11.92%)</title><rect x="449.0" y="373" width="140.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="452.00" y="383.5" >github.com/Deimvi..</text>
</g>
<g >
<title>fmt.(*fmt).fmtS (3 samples, 0.13%)</title><rect x="932.6" y="453" width="1.6" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="935.62" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="582.9" y="293" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="585.88" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gList).empty (1 samples, 0.04%)</title><rect x="88.9" y="501" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="91.87" y="511.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Reset (1 samples, 0.04%)</title><rect x="256.5" y="549" width="0.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="259.48" y="559.5" ></text>
</g>
<g >
<title>runtime.futex (8 samples, 0.35%)</title><rect x="559.0" y="37" width="4.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="562.01" y="47.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="576.1" y="245" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="579.13" y="255.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).flushWithPotentialWriteReadDeadlock (1 samples, 0.04%)</title><rect x="838.2" y="293" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="841.18" y="303.5" ></text>
</g>
<g >
<title>runtime.runqget (1 samples, 0.04%)</title><rect x="1181.7" y="565" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1184.70" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="451.1" y="309" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="454.07" y="319.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollOpen (25 samples, 1.10%)</title><rect x="48.4" y="485" width="13.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="51.40" y="495.5" ></text>
</g>
<g >
<title>runtime.assertI2I (1 samples, 0.04%)</title><rect x="882.3" y="453" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="885.29" y="463.5" ></text>
</g>
<g >
<title>runtime.duffzero (1 samples, 0.04%)</title><rect x="14.2" y="469" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="17.15" y="479.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.04%)</title><rect x="844.9" y="197" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="847.93" y="207.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*histogramCounts).observe (2 samples, 0.09%)</title><rect x="427.2" y="277" width="1.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="430.20" y="287.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (42 samples, 1.85%)</title><rect x="898.9" y="437" width="21.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="901.89" y="447.5" >r..</text>
</g>
<g >
<title>runtime.mapassign_faststr (2 samples, 0.09%)</title><rect x="793.0" y="373" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="796.03" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.04%)</title><rect x="751.5" y="261" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="754.52" y="271.5" ></text>
</g>
<g >
<title>syscall.setsockopt (9 samples, 0.40%)</title><rect x="68.1" y="485" width="4.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="71.12" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*ExtendedQueryBuilder).appendParam (9 samples, 0.40%)</title><rect x="615.6" y="309" width="4.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="618.57" y="319.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (174 samples, 7.65%)</title><rect x="292.3" y="453" width="90.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="295.29" y="463.5" >runtime/in..</text>
</g>
<g >
<title>memeqbody (2 samples, 0.09%)</title><rect x="880.7" y="389" width="1.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="883.73" y="399.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Flush (2 samples, 0.09%)</title><rect x="840.8" y="277" width="1.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="843.77" y="287.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.04%)</title><rect x="43.2" y="405" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="46.21" y="415.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (1 samples, 0.04%)</title><rect x="390.9" y="549" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="393.88" y="559.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).hasRequestContext (1 samples, 0.04%)</title><rect x="457.3" y="309" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="460.30" y="319.5" ></text>
</g>
<g >
<title>context.withCancel (7 samples, 0.31%)</title><rect x="125.7" y="581" width="3.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="128.72" y="591.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.04%)</title><rect x="798.2" y="277" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="801.22" y="287.5" ></text>
</g>
<g >
<title>runtime.resettimer (8 samples, 0.35%)</title><rect x="622.3" y="277" width="4.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="625.31" y="287.5" ></text>
</g>
<g >
<title>time.nextStdChunk (1 samples, 0.04%)</title><rect x="955.5" y="469" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="958.45" y="479.5" ></text>
</g>
<g >
<title>runtime.funcInfo.entry (2 samples, 0.09%)</title><rect x="1000.1" y="485" width="1.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1003.08" y="495.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="256.0" y="469" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="258.96" y="479.5" ></text>
</g>
<g >
<title>net/http.(*response).Header (5 samples, 0.22%)</title><rect x="870.4" y="373" width="2.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="873.35" y="383.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Receive (1 samples, 0.04%)</title><rect x="834.5" y="261" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="837.55" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.18%)</title><rect x="92.0" y="485" width="2.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="94.99" y="495.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (49 samples, 2.15%)</title><rect x="701.7" y="245" width="25.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="704.71" y="255.5" >i..</text>
</g>
<g >
<title>sync.(*Cond).Broadcast (2 samples, 0.09%)</title><rect x="979.8" y="597" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="982.84" y="607.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="125.2" y="565" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="128.20" y="575.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).peekMessage (1 samples, 0.04%)</title><rect x="841.8" y="261" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="844.81" y="271.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.04%)</title><rect x="169.8" y="549" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="172.82" y="559.5" ></text>
</g>
<g >
<title>net.(*OpError).Timeout (2 samples, 0.09%)</title><rect x="966.9" y="597" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="969.87" y="607.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.04%)</title><rect x="1028.6" y="533" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1031.62" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.04%)</title><rect x="875.5" y="373" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="878.54" y="383.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Receive (49 samples, 2.15%)</title><rect x="550.7" y="277" width="25.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="553.70" y="287.5" >g..</text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*poolRows).Next (47 samples, 2.07%)</title><rect x="758.3" y="373" width="24.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="761.27" y="383.5" >g..</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.09%)</title><rect x="980.9" y="549" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="983.88" y="559.5" ></text>
</g>
<g >
<title>runtime.step (3 samples, 0.13%)</title><rect x="998.5" y="437" width="1.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1001.52" y="447.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.04%)</title><rect x="837.7" y="213" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="840.66" y="223.5" ></text>
</g>
<g >
<title>bytes.Cut (1 samples, 0.04%)</title><rect x="157.4" y="549" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="160.37" y="559.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (82 samples, 3.61%)</title><rect x="984.0" y="613" width="42.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="986.99" y="623.5" >runt..</text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (1 samples, 0.04%)</title><rect x="703.8" y="165" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="706.78" y="175.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="733.4" y="293" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="736.36" y="303.5" ></text>
</g>
<g >
<title>syscall.Write (46 samples, 2.02%)</title><rect x="896.8" y="501" width="23.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="899.82" y="511.5" >s..</text>
</g>
<g >
<title>runtime.doaddtimer (3 samples, 0.13%)</title><rect x="622.8" y="245" width="1.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="625.83" y="255.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).peekMessage (1 samples, 0.04%)</title><rect x="430.8" y="293" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="433.84" y="303.5" ></text>
</g>
<g >
<title>gcWriteBarrier (1 samples, 0.04%)</title><rect x="158.4" y="549" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="161.41" y="559.5" ></text>
</g>
<g >
<title>net/http.(*connReader).startBackgroundRead (13 samples, 0.57%)</title><rect x="260.6" y="597" width="6.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="263.63" y="607.5" ></text>
</g>
<g >
<title>runtime.strhash (1 samples, 0.04%)</title><rect x="163.1" y="517" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="166.08" y="527.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (4 samples, 0.18%)</title><rect x="386.2" y="405" width="2.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="389.21" y="415.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="780.6" y="261" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="783.58" y="271.5" ></text>
</g>
<g >
<title>unicode/utf8.ValidString (1 samples, 0.04%)</title><rect x="408.0" y="373" width="0.5" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="411.00" y="383.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).evict (1 samples, 0.04%)</title><rect x="252.8" y="533" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="255.85" y="543.5" ></text>
</g>
<g >
<title>net/textproto.CanonicalMIMEHeaderKey (2 samples, 0.09%)</title><rect x="282.9" y="517" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="285.95" y="527.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (29 samples, 1.28%)</title><rect x="846.5" y="389" width="15.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="849.48" y="399.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Pool).Query (288 samples, 12.66%)</title><rect x="607.3" y="389" width="149.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="610.26" y="399.5" >github.com/Deimvis/..</text>
</g>
<g >
<title>net/http.(*Server).newConn (1 samples, 0.04%)</title><rect x="94.1" y="581" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="97.06" y="591.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="787.8" y="373" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="790.85" y="383.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (1 samples, 0.04%)</title><rect x="968.4" y="565" width="0.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="971.43" y="575.5" ></text>
</g>
<g >
<title>runtime.netpollBreak (2 samples, 0.09%)</title><rect x="1151.6" y="549" width="1.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1154.60" y="559.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (2 samples, 0.09%)</title><rect x="260.6" y="565" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="263.63" y="575.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.04%)</title><rect x="840.3" y="165" width="0.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="843.26" y="175.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.(*ReactionsStorage).addUserReaction (6 samples, 0.26%)</title><rect x="837.1" y="405" width="3.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="840.14" y="415.5" ></text>
</g>
<g >
<title>runtime.(*moduledata).textAddr (1 samples, 0.04%)</title><rect x="996.4" y="437" width="0.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="999.45" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="937.8" y="405" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="940.81" y="415.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.04%)</title><rect x="844.9" y="261" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="847.93" y="271.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*SugaredLogger).Debugw (1 samples, 0.04%)</title><rect x="842.3" y="357" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="845.33" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.04%)</title><rect x="112.2" y="453" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="115.23" y="463.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).Query (1 samples, 0.04%)</title><rect x="843.9" y="373" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="846.89" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="727.7" y="245" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="730.65" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="164.6" y="533" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="167.64" y="543.5" ></text>
</g>
<g >
<title>syscall.write (177 samples, 7.78%)</title><rect x="290.7" y="501" width="91.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="293.73" y="511.5" >syscall.wr..</text>
</g>
<g >
<title>runtime.(*gcWork).empty (1 samples, 0.04%)</title><rect x="1072.2" y="565" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1075.21" y="575.5" ></text>
</g>
<g >
<title>runtime.markroot (40 samples, 1.76%)</title><rect x="985.5" y="549" width="20.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="988.55" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="872.9" y="357" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="875.95" y="367.5" ></text>
</g>
<g >
<title>runtime.(*timeHistogram).record (1 samples, 0.04%)</title><rect x="800.3" y="293" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="803.30" y="303.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (2 samples, 0.09%)</title><rect x="391.4" y="549" width="1.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="394.40" y="559.5" ></text>
</g>
<g >
<title>strings.indexFunc (1 samples, 0.04%)</title><rect x="142.3" y="565" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="145.32" y="575.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (1 samples, 0.04%)</title><rect x="968.4" y="533" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="971.43" y="543.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="626.5" y="261" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="629.46" y="271.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (3 samples, 0.13%)</title><rect x="838.7" y="181" width="1.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="841.70" y="191.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).HandlerName (4 samples, 0.18%)</title><rect x="401.3" y="485" width="2.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="404.26" y="495.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.04%)</title><rect x="103.4" y="453" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="106.40" y="463.5" ></text>
</g>
<g >
<title>sync.NewCond (1 samples, 0.04%)</title><rect x="154.3" y="485" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="157.26" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*CommandComplete).Decode (1 samples, 0.04%)</title><rect x="841.8" y="229" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="844.81" y="239.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.04%)</title><rect x="594.8" y="245" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="597.81" y="255.5" ></text>
</g>
<g >
<title>runtime.entersyscall (3 samples, 0.13%)</title><rect x="14.7" y="437" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="17.67" y="447.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.AppendRows[go.shape.struct (51 samples, 2.24%)</title><rect x="422.5" y="389" width="26.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="425.53" y="399.5" >g..</text>
</g>
<g >
<title>runtime.(*gcWork).tryGetFast (1 samples, 0.04%)</title><rect x="120.0" y="437" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="123.01" y="447.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*histogram).Observe (2 samples, 0.09%)</title><rect x="762.4" y="309" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="765.42" y="319.5" ></text>
</g>
<g >
<title>fmt.Sprintf (47 samples, 2.07%)</title><rect x="924.3" y="517" width="24.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="927.32" y="527.5" >f..</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.09%)</title><rect x="584.4" y="261" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="587.43" y="271.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (3 samples, 0.13%)</title><rect x="856.3" y="325" width="1.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="859.34" y="335.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (1 samples, 0.04%)</title><rect x="834.5" y="101" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="837.55" y="111.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (1 samples, 0.04%)</title><rect x="143.9" y="421" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="146.88" y="431.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*histogram).observe (4 samples, 0.18%)</title><rect x="409.6" y="437" width="2.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="412.56" y="447.5" ></text>
</g>
<g >
<title>syscall.write (132 samples, 5.80%)</title><rect x="629.6" y="229" width="68.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="632.58" y="239.5" >syscall..</text>
</g>
<g >
<title>runtime.readvarint (2 samples, 0.09%)</title><rect x="822.6" y="229" width="1.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="825.61" y="239.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.04%)</title><rect x="984.5" y="437" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="987.51" y="447.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.04%)</title><rect x="16.7" y="421" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="19.75" y="431.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="601.0" y="261" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="604.04" y="271.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.04%)</title><rect x="94.1" y="485" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.06" y="495.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.18%)</title><rect x="265.3" y="469" width="2.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="268.30" y="479.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.04%)</title><rect x="1082.6" y="549" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1085.59" y="559.5" ></text>
</g>
<g >
<title>runtime.gopark (2 samples, 0.09%)</title><rect x="969.5" y="501" width="1.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="972.46" y="511.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.09%)</title><rect x="584.4" y="245" width="1.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="587.43" y="255.5" ></text>
</g>
<g >
<title>runtime.selectgo (7 samples, 0.31%)</title><rect x="595.3" y="309" width="3.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="598.33" y="319.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*baseRows).Next (13 samples, 0.57%)</title><rect x="424.6" y="357" width="6.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="427.61" y="367.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (1 samples, 0.04%)</title><rect x="982.4" y="517" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="985.44" y="527.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.04%)</title><rect x="465.6" y="245" width="0.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="468.60" y="255.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.04%)</title><rect x="798.7" y="261" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="801.74" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (8 samples, 0.35%)</title><rect x="709.5" y="37" width="4.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="712.49" y="47.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Flush (164 samples, 7.21%)</title><rect x="463.5" y="293" width="85.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="466.53" y="303.5" >github.com..</text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).ExecPrepared (1 samples, 0.04%)</title><rect x="838.2" y="325" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.18" y="335.5" ></text>
</g>
<g >
<title>syscall.Accept4 (55 samples, 2.42%)</title><rect x="13.6" y="485" width="28.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="16.63" y="495.5" >sy..</text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="463.0" y="261" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="466.01" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="112.2" y="549" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="115.23" y="559.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (1 samples, 0.04%)</title><rect x="850.1" y="309" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="853.11" y="319.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*ExtendedQueryBuilder).encodeExtendedParamValue (4 samples, 0.18%)</title><rect x="455.2" y="293" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="458.22" y="303.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).Close (1 samples, 0.04%)</title><rect x="424.6" y="325" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="427.61" y="335.5" ></text>
</g>
<g >
<title>syscall.Write (132 samples, 5.80%)</title><rect x="629.6" y="245" width="68.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="632.58" y="255.5" >syscall..</text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*metricMap).getMetricWithHashAndLabelValues (2 samples, 0.09%)</title><rect x="880.7" y="421" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="883.73" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.04%)</title><rect x="430.3" y="245" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="433.32" y="255.5" ></text>
</g>
<g >
<title>runtime.runqsteal (6 samples, 0.26%)</title><rect x="1058.2" y="533" width="3.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1061.20" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (3 samples, 0.13%)</title><rect x="412.7" y="389" width="1.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="415.67" y="399.5" ></text>
</g>
<g >
<title>github.com/jackc/puddle/v2.(*Pool[go.shape.*uint8]).releaseAcquiredResource (26 samples, 1.14%)</title><rect x="767.6" y="309" width="13.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="770.61" y="319.5" ></text>
</g>
<g >
<title>runtime.newproc (10 samples, 0.44%)</title><rect x="88.9" y="565" width="5.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="91.87" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.04%)</title><rect x="891.6" y="421" width="0.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="894.63" y="431.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (2 samples, 0.09%)</title><rect x="783.2" y="325" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="786.18" y="335.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popTail (2 samples, 0.09%)</title><rect x="132.5" y="517" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="135.46" y="527.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.04%)</title><rect x="594.8" y="213" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="597.81" y="223.5" ></text>
</g>
<g >
<title>runtime.entersyscall (10 samples, 0.44%)</title><rect x="558.0" y="133" width="5.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="560.97" y="143.5" ></text>
</g>
<g >
<title>net.(*netFD).accept (68 samples, 2.99%)</title><rect x="12.6" y="533" width="35.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="15.59" y="543.5" >ne..</text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (23 samples, 1.01%)</title><rect x="142.8" y="549" width="12.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="145.84" y="559.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*MetricVec).hashLabelValues (3 samples, 0.13%)</title><rect x="407.0" y="405" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="409.97" y="415.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (3 samples, 0.13%)</title><rect x="393.5" y="581" width="1.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="396.47" y="591.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="171.9" y="565" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="174.90" y="575.5" ></text>
</g>
<g >
<title>runtime.systemstack (9 samples, 0.40%)</title><rect x="709.5" y="101" width="4.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="712.49" y="111.5" ></text>
</g>
<g >
<title>syscall.Syscall (38 samples, 1.67%)</title><rect x="707.4" y="149" width="19.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="710.41" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.04%)</title><rect x="451.1" y="277" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="454.07" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.04%)</title><rect x="100.8" y="501" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="103.81" y="511.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/internal/anynil.NormalizeSlice (1 samples, 0.04%)</title><rect x="747.9" y="357" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="750.89" y="367.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (23 samples, 1.01%)</title><rect x="49.4" y="453" width="12.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="52.44" y="463.5" ></text>
</g>
<g >
<title>runtime.convTstring (4 samples, 0.18%)</title><rect x="949.2" y="517" width="2.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="952.23" y="527.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (1 samples, 0.04%)</title><rect x="852.7" y="293" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="855.71" y="303.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="414.7" y="437" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="417.75" y="447.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.04%)</title><rect x="590.7" y="293" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="593.66" y="303.5" ></text>
</g>
<g >
<title>runtime.gcResetMarkState (1 samples, 0.04%)</title><rect x="872.9" y="309" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="875.95" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="585.5" y="293" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="588.47" y="303.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.04%)</title><rect x="844.9" y="149" width="0.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="847.93" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mSpanStateBox).get (1 samples, 0.04%)</title><rect x="1032.3" y="533" width="0.5" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1035.25" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="141.8" y="549" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="144.80" y="559.5" ></text>
</g>
<g >
<title>github.com/go-playground/validator/v10.(*Validate).Struct (1 samples, 0.04%)</title><rect x="845.4" y="357" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="848.44" y="367.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*responseWriter).reset (2 samples, 0.09%)</title><rect x="961.7" y="581" width="1.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="964.68" y="591.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (18 samples, 0.79%)</title><rect x="968.4" y="581" width="9.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="971.43" y="591.5" ></text>
</g>
<g >
<title>github.com/jackc/puddle/v2.(*Resource[go.shape.*uint8]).Release (30 samples, 1.32%)</title><rect x="433.4" y="325" width="15.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="436.43" y="335.5" ></text>
</g>
<g >
<title>runtime.stackalloc (1 samples, 0.04%)</title><rect x="891.1" y="325" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="894.11" y="335.5" ></text>
</g>
<g >
<title>net.(*TCPListener).Accept (142 samples, 6.24%)</title><rect x="11.6" y="565" width="73.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="14.56" y="575.5" >net.(*TC..</text>
</g>
<g >
<title>runtime.checkdead (1 samples, 0.04%)</title><rect x="1169.8" y="517" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1172.76" y="527.5" ></text>
</g>
<g >
<title>sync.loadPoolChainElt (1 samples, 0.04%)</title><rect x="131.9" y="533" width="0.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="134.94" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).SendExecute (2 samples, 0.09%)</title><rect x="577.2" y="309" width="1.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="580.17" y="319.5" ></text>
</g>
<g >
<title>github.com/jackc/puddle/v2.(*Pool[go.shape.*uint8]).Acquire (22 samples, 0.97%)</title><rect x="590.1" y="357" width="11.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="593.14" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="165.2" y="533" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="168.15" y="543.5" ></text>
</g>
<g >
<title>net/http.(*connReader).abortPendingRead (18 samples, 0.79%)</title><rect x="383.6" y="581" width="9.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="386.61" y="591.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.09%)</title><rect x="584.4" y="277" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="587.43" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.22%)</title><rect x="120.0" y="485" width="2.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="123.01" y="495.5" ></text>
</g>
<g >
<title>runtime.runqsteal (18 samples, 0.79%)</title><rect x="1159.4" y="533" width="9.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1162.38" y="543.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.04%)</title><rect x="575.6" y="213" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="578.61" y="223.5" ></text>
</g>
<g >
<title>runtime.funcname (1 samples, 0.04%)</title><rect x="1031.7" y="581" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1034.73" y="591.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.04%)</title><rect x="585.0" y="181" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="587.95" y="191.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (6 samples, 0.26%)</title><rect x="81.1" y="453" width="3.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="84.09" y="463.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (13 samples, 0.57%)</title><rect x="707.4" y="117" width="6.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="710.41" y="127.5" ></text>
</g>
<g >
<title>syscall.Syscall (159 samples, 6.99%)</title><rect x="466.1" y="213" width="82.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="469.12" y="223.5" >syscall.S..</text>
</g>
<g >
<title>runtime.fastrandn (1 samples, 0.04%)</title><rect x="884.4" y="293" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="887.36" y="303.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (4 samples, 0.18%)</title><rect x="265.3" y="485" width="2.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="268.30" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*namedStructRowScanner).appendScanTargets (1 samples, 0.04%)</title><rect x="843.4" y="325" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="846.37" y="335.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).receiveMessage (1 samples, 0.04%)</title><rect x="430.8" y="325" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="433.84" y="335.5" ></text>
</g>
<g >
<title>runtime.findRunnable (183 samples, 8.05%)</title><rect x="1075.3" y="565" width="95.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1078.32" y="575.5" >runtime.fin..</text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).flushWithPotentialWriteReadDeadlock (2 samples, 0.09%)</title><rect x="840.8" y="293" width="1.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="843.77" y="303.5" ></text>
</g>
<g >
<title>runtime.mPark (19 samples, 0.84%)</title><rect x="1036.9" y="549" width="9.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1039.92" y="559.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="102.9" y="549" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="105.88" y="559.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).receiveMessage (3 samples, 0.13%)</title><rect x="763.5" y="309" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="766.46" y="319.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.09%)</title><rect x="412.7" y="309" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="415.67" y="319.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.04%)</title><rect x="625.9" y="229" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="628.95" y="239.5" ></text>
</g>
<g >
<title>golang.org/x/sync/semaphore.(*Weighted).notifyWaiters (21 samples, 0.92%)</title><rect x="435.5" y="277" width="10.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="438.51" y="287.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.18%)</title><rect x="386.2" y="389" width="2.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="389.21" y="399.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Conn).Query (270 samples, 11.87%)</title><rect x="608.3" y="373" width="140.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="611.30" y="383.5" >github.com/Deimvi..</text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.04%)</title><rect x="585.5" y="277" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="588.47" y="287.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (6 samples, 0.26%)</title><rect x="253.4" y="533" width="3.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="256.37" y="543.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.04%)</title><rect x="121.6" y="405" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="124.57" y="415.5" ></text>
</g>
<g >
<title>runtime.newobject (4 samples, 0.18%)</title><rect x="111.7" y="581" width="2.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="114.71" y="591.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="252.8" y="501" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="255.85" y="511.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).deallocateInvalidatedCachedStatements (2 samples, 0.09%)</title><rect x="610.4" y="341" width="1.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="613.38" y="351.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (47 samples, 2.07%)</title><rect x="17.8" y="421" width="24.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="20.78" y="431.5" >r..</text>
</g>
<g >
<title>net/netip.Addr.appendTo4 (1 samples, 0.04%)</title><rect x="922.8" y="485" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="925.76" y="495.5" ></text>
</g>
<g >
<title>runtime.netpollblock (1 samples, 0.04%)</title><rect x="143.9" y="405" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="146.88" y="415.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (4 samples, 0.18%)</title><rect x="835.1" y="261" width="2.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="838.07" y="271.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).hasRequestContext (3 samples, 0.13%)</title><rect x="748.4" y="341" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="751.41" y="351.5" ></text>
</g>
<g >
<title>runtime.memhash32 (1 samples, 0.04%)</title><rect x="734.9" y="309" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="737.92" y="319.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="728.7" y="245" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="731.69" y="255.5" ></text>
</g>
<g >
<title>syscall.Getsockname (7 samples, 0.31%)</title><rect x="44.2" y="517" width="3.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="47.25" y="527.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (954 samples, 41.95%)</title><rect x="398.7" y="533" width="495.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="401.66" y="543.5" >github.com/gin-gonic/gin.(*Context).Next</text>
</g>
<g >
<title>net/netip.parseIPv4 (4 samples, 0.18%)</title><rect x="957.0" y="485" width="2.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="960.01" y="495.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.04%)</title><rect x="144.9" y="373" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="147.92" y="383.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.04%)</title><rect x="890.6" y="309" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="893.59" y="319.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="948.2" y="485" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="951.19" y="495.5" ></text>
</g>
<g >
<title>syscall.read (34 samples, 1.50%)</title><rect x="557.4" y="165" width="17.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="560.45" y="175.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Pool).Acquire (23 samples, 1.01%)</title><rect x="589.6" y="373" width="12.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="592.62" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.04%)</title><rect x="101.8" y="517" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="104.85" y="527.5" ></text>
</g>
<g >
<title>vendor/golang.org/x/net/http/httpguts.ValidHeaderFieldName (2 samples, 0.09%)</title><rect x="286.6" y="533" width="1.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="289.58" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).execExtendedSuffix (3 samples, 0.13%)</title><rect x="840.3" y="309" width="1.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="843.26" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="844.9" y="213" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="847.93" y="223.5" ></text>
</g>
<g >
<title>bytes.IndexByte (2 samples, 0.09%)</title><rect x="763.5" y="261" width="1.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="766.46" y="271.5" ></text>
</g>
<g >
<title>syscall.write (159 samples, 6.99%)</title><rect x="466.1" y="229" width="82.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="469.12" y="239.5" >syscall.w..</text>
</g>
<g >
<title>runtime.adjustframe (1 samples, 0.04%)</title><rect x="413.7" y="341" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="416.71" y="351.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*MultiResultReader).NextResult (1 samples, 0.04%)</title><rect x="834.5" y="325" width="0.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="837.55" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.09%)</title><rect x="890.6" y="421" width="1.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="893.59" y="431.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/servers.NewRouter.func7 (802 samples, 35.27%)</title><rect x="417.9" y="453" width="416.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="420.86" y="463.5" >github.com/Deimvis/reactionsstorage/src/servers.NewRoute..</text>
</g>
<g >
<title>syscall.write (46 samples, 2.02%)</title><rect x="896.8" y="485" width="23.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="899.82" y="495.5" >s..</text>
</g>
<g >
<title>runtime.mallocgc (6 samples, 0.26%)</title><rect x="738.0" y="293" width="3.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="741.03" y="303.5" ></text>
</g>
<g >
<title>runtime.stackcacherefill (2 samples, 0.09%)</title><rect x="89.9" y="453" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="92.91" y="463.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*histogram).Observe (4 samples, 0.18%)</title><rect x="409.6" y="453" width="2.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="412.56" y="463.5" ></text>
</g>
<g >
<title>golang.org/x/sync/semaphore.(*Weighted).Acquire (10 samples, 0.44%)</title><rect x="751.0" y="325" width="5.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="754.00" y="335.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.write (1 samples, 0.04%)</title><rect x="113.3" y="533" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="116.26" y="543.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (1 samples, 0.04%)</title><rect x="143.9" y="453" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="146.88" y="463.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.04%)</title><rect x="744.3" y="293" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="747.26" y="303.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.04%)</title><rect x="882.3" y="437" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="885.29" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.04%)</title><rect x="112.2" y="485" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="115.23" y="495.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.09%)</title><rect x="448.0" y="261" width="1.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="450.96" y="271.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="253.9" y="469" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="256.89" y="479.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.matchLabelValues (2 samples, 0.09%)</title><rect x="880.7" y="405" width="1.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="883.73" y="415.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (2 samples, 0.09%)</title><rect x="740.1" y="261" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="743.11" y="271.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Receive (53 samples, 2.33%)</title><rect x="699.6" y="277" width="27.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="702.63" y="287.5" >g..</text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.04%)</title><rect x="1064.4" y="533" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1067.42" y="543.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.04%)</title><rect x="1171.8" y="533" width="0.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1174.84" y="543.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (1 samples, 0.04%)</title><rect x="143.4" y="437" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="146.36" y="447.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*SugaredLogger).log (3 samples, 0.13%)</title><rect x="586.0" y="325" width="1.5" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="588.99" y="335.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (1 samples, 0.04%)</title><rect x="394.0" y="517" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="396.99" y="527.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.04%)</title><rect x="290.2" y="517" width="0.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="293.21" y="527.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteByte (2 samples, 0.09%)</title><rect x="849.1" y="309" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="852.08" y="319.5" ></text>
</g>
<g >
<title>net/url.(*URL).String (1 samples, 0.04%)</title><rect x="411.6" y="453" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="414.64" y="463.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (175 samples, 7.70%)</title><rect x="291.8" y="469" width="90.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="294.77" y="479.5" >syscall.Ra..</text>
</g>
<g >
<title>net/http.newBufioReader (3 samples, 0.13%)</title><rect x="393.5" y="597" width="1.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="396.47" y="607.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.04%)</title><rect x="453.7" y="309" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="456.67" y="319.5" ></text>
</g>
<g >
<title>runtime.wakeNetPoller (1 samples, 0.04%)</title><rect x="840.3" y="229" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="843.26" y="239.5" ></text>
</g>
<g >
<title>runtime.notewakeup (8 samples, 0.35%)</title><rect x="709.5" y="69" width="4.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="712.49" y="79.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.04%)</title><rect x="1062.3" y="533" width="0.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1065.35" y="543.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.04%)</title><rect x="143.9" y="389" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="146.88" y="399.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadLine (25 samples, 1.10%)</title><rect x="142.8" y="581" width="13.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="145.84" y="591.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).execExtendedPrefix (3 samples, 0.13%)</title><rect x="620.2" y="325" width="1.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="623.24" y="335.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.04%)</title><rect x="158.4" y="533" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="161.41" y="543.5" ></text>
</g>
<g >
<title>runtime.resetspinning (20 samples, 0.88%)</title><rect x="1171.3" y="565" width="10.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1174.32" y="575.5" ></text>
</g>
<g >
<title>runtime.netpollblockcommit (5 samples, 0.22%)</title><rect x="1066.0" y="581" width="2.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1068.98" y="591.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/internal/stmtcache.(*LRUCache).Get (1 samples, 0.04%)</title><rect x="453.7" y="325" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="456.67" y="335.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Pool).isExpired (3 samples, 0.13%)</title><rect x="765.5" y="325" width="1.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="768.53" y="335.5" ></text>
</g>
<g >
<title>runtime.checkTimers (2 samples, 0.09%)</title><rect x="1158.3" y="533" width="1.1" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1161.35" y="543.5" ></text>
</g>
<g >
<title>net.(*conn).Read (1 samples, 0.04%)</title><rect x="837.7" y="181" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="840.66" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (4 samples, 0.18%)</title><rect x="92.0" y="501" width="2.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="94.99" y="511.5" ></text>
</g>
<g >
<title>runtime.adjustframe (1 samples, 0.04%)</title><rect x="884.4" y="341" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="887.36" y="351.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*connResource).getPoolRows (2 samples, 0.09%)</title><rect x="756.7" y="389" width="1.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="759.71" y="399.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).GetQuery (87 samples, 3.83%)</title><rect x="788.9" y="437" width="45.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="791.88" y="447.5" >gith..</text>
</g>
<g >
<title>runtime.(*unwinder).init (2 samples, 0.09%)</title><rect x="798.2" y="309" width="1.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="801.22" y="319.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.04%)</title><rect x="393.0" y="549" width="0.5" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="395.96" y="559.5" ></text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.18%)</title><rect x="386.2" y="421" width="2.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="389.21" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="959.6" y="485" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="962.60" y="495.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (2 samples, 0.09%)</title><rect x="1028.6" y="597" width="1.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1031.62" y="607.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func2 (5 samples, 0.22%)</title><rect x="62.4" y="485" width="2.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="65.41" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).receiveMessage (1 samples, 0.04%)</title><rect x="576.6" y="277" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="579.65" y="287.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*histogramCounts).observe (1 samples, 0.04%)</title><rect x="762.4" y="277" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="765.42" y="287.5" ></text>
</g>
<g >
<title>runtime.stackfree (2 samples, 0.09%)</title><rect x="1032.3" y="565" width="1.0" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1035.25" y="575.5" ></text>
</g>
<g >
<title>fmt.(*buffer).writeString (1 samples, 0.04%)</title><rect x="895.3" y="453" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="898.26" y="463.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="794.1" y="293" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="797.07" y="303.5" ></text>
</g>
<g >
<title>context.WithCancel (3 samples, 0.13%)</title><rect x="109.6" y="597" width="1.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="112.63" y="607.5" ></text>
</g>
<g >
<title>runtime.netpoll (70 samples, 3.08%)</title><rect x="1115.3" y="549" width="36.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1118.28" y="559.5" >run..</text>
</g>
<g >
<title>net/url.escape (1 samples, 0.04%)</title><rect x="139.2" y="517" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="142.21" y="527.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).getStatementDescription (1 samples, 0.04%)</title><rect x="614.0" y="341" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="617.01" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.04%)</title><rect x="891.6" y="405" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="894.63" y="415.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgtype.(*Map).FormatCodeForOID (3 samples, 0.13%)</title><rect x="733.9" y="341" width="1.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="736.88" y="351.5" ></text>
</g>
<g >
<title>runtime.adjustdefers (1 samples, 0.04%)</title><rect x="812.2" y="293" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="815.23" y="303.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="780.6" y="245" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="783.58" y="255.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (2 samples, 0.09%)</title><rect x="890.6" y="389" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="893.59" y="399.5" ></text>
</g>
<g >
<title>net/textproto.MIMEHeader.Del (2 samples, 0.09%)</title><rect x="276.2" y="533" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="279.20" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/puddle/v2.(*Resource[go.shape.*uint8]).Value (1 samples, 0.04%)</title><rect x="602.6" y="373" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="605.59" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.04%)</title><rect x="984.5" y="469" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="987.51" y="479.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (2 samples, 0.09%)</title><rect x="862.0" y="341" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="865.05" y="351.5" ></text>
</g>
<g >
<title>runtime.funcInfo.valid (1 samples, 0.04%)</title><rect x="827.8" y="293" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="830.80" y="303.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).valid (1 samples, 0.04%)</title><rect x="799.3" y="309" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="802.26" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (6 samples, 0.26%)</title><rect x="968.9" y="549" width="3.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="971.94" y="559.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (3 samples, 0.13%)</title><rect x="447.4" y="309" width="1.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="450.44" y="319.5" ></text>
</g>
<g >
<title>time.stopTimer (1 samples, 0.04%)</title><rect x="698.1" y="277" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="701.07" y="287.5" ></text>
</g>
<g >
<title>bytes.IndexByte (1 samples, 0.04%)</title><rect x="699.6" y="261" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="702.63" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (1 samples, 0.04%)</title><rect x="968.4" y="549" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="971.43" y="559.5" ></text>
</g>
<g >
<title>runtime.adjustpointer (1 samples, 0.04%)</title><rect x="827.3" y="293" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="830.28" y="303.5" ></text>
</g>
<g >
<title>sort.Search (1 samples, 0.04%)</title><rect x="762.9" y="277" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="765.94" y="287.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (8 samples, 0.35%)</title><rect x="1077.9" y="549" width="4.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1080.92" y="559.5" ></text>
</g>
<g >
<title>runtime.netpollcheckerr (1 samples, 0.04%)</title><rect x="629.1" y="213" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="632.06" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="173.5" y="549" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="176.46" y="559.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.04%)</title><rect x="103.4" y="437" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="106.40" y="447.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.04%)</title><rect x="772.3" y="165" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="775.28" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="743.7" y="309" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="746.74" y="319.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).flushWithPotentialWriteReadDeadlock (4 samples, 0.18%)</title><rect x="835.1" y="309" width="2.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="838.07" y="319.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*baseRows).Close (10 samples, 0.44%)</title><rect x="424.6" y="341" width="5.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="427.61" y="351.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Tx).Exec (2 samples, 0.09%)</title><rect x="837.1" y="389" width="1.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="840.14" y="399.5" ></text>
</g>
<g >
<title>net.(*conn).Close (158 samples, 6.95%)</title><rect x="174.5" y="565" width="82.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="177.49" y="575.5" >net.(*con..</text>
</g>
<g >
<title>sync.(*Pool).getSlow (1 samples, 0.04%)</title><rect x="131.9" y="549" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="134.94" y="559.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTRIO (1 samples, 0.04%)</title><rect x="144.4" y="453" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="147.40" y="463.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.scanUniqReactions (51 samples, 2.24%)</title><rect x="757.7" y="389" width="26.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="760.75" y="399.5" >g..</text>
</g>
<g >
<title>syscall.RawSyscall6 (4 samples, 0.18%)</title><rect x="45.8" y="469" width="2.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="48.80" y="479.5" ></text>
</g>
<g >
<title>runtime.typedslicecopy (2 samples, 0.09%)</title><rect x="868.8" y="357" width="1.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="871.80" y="367.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).GetQueryArray (2 samples, 0.09%)</title><rect x="788.9" y="421" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="791.88" y="431.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.04%)</title><rect x="980.4" y="501" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="983.36" y="511.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="833.5" y="341" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="836.51" y="351.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.13%)</title><rect x="864.6" y="341" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="867.64" y="351.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="110.7" y="565" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="113.67" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.04%)</title><rect x="959.6" y="453" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="962.60" y="463.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (953 samples, 41.91%)</title><rect x="399.2" y="517" width="494.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="402.18" y="527.5" >github.com/gin-gonic/gin.(*Context).Next</text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.04%)</title><rect x="706.4" y="165" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="709.38" y="175.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.09%)</title><rect x="611.9" y="309" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="614.93" y="319.5" ></text>
</g>
<g >
<title>runtime.(*pollCache).alloc (1 samples, 0.04%)</title><rect x="48.4" y="469" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="51.40" y="479.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.04%)</title><rect x="122.1" y="405" width="0.5" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="125.08" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="94.1" y="549" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="97.06" y="559.5" ></text>
</g>
<g >
<title>runtime.funcInfo.entry (1 samples, 0.04%)</title><rect x="990.2" y="469" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="993.22" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.04%)</title><rect x="112.2" y="533" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="115.23" y="543.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (2 samples, 0.09%)</title><rect x="783.2" y="309" width="1.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="786.18" y="319.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.04%)</title><rect x="985.0" y="533" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="988.03" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.04%)</title><rect x="868.3" y="309" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="871.28" y="319.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.04%)</title><rect x="103.4" y="485" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="106.40" y="495.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Available (2 samples, 0.09%)</title><rect x="270.5" y="533" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="273.49" y="543.5" ></text>
</g>
<g >
<title>runtime.systemstack (80 samples, 3.52%)</title><rect x="985.0" y="597" width="41.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="988.03" y="607.5" >run..</text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="429.3" y="293" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="432.28" y="303.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.04%)</title><rect x="742.7" y="277" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="745.70" y="287.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (23 samples, 1.01%)</title><rect x="715.2" y="117" width="11.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="718.20" y="127.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (5 samples, 0.22%)</title><rect x="120.0" y="469" width="2.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="123.01" y="479.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*SugaredLogger).Debugw (3 samples, 0.13%)</title><rect x="586.0" y="341" width="1.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="588.99" y="351.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).peekMessage (1 samples, 0.04%)</title><rect x="843.9" y="309" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="846.89" y="319.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (23 samples, 1.01%)</title><rect x="142.8" y="565" width="12.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="145.84" y="575.5" ></text>
</g>
<g >
<title>net.(*conn).SetReadDeadline (1 samples, 0.04%)</title><rect x="130.4" y="581" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="133.39" y="591.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (1 samples, 0.04%)</title><rect x="290.2" y="485" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="293.21" y="495.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.04%)</title><rect x="979.3" y="581" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="982.32" y="591.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).getRows (2 samples, 0.09%)</title><rect x="451.1" y="341" width="1.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="454.07" y="351.5" ></text>
</g>
<g >
<title>runtime.(*gList).pop (1 samples, 0.04%)</title><rect x="1031.2" y="581" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1034.21" y="591.5" ></text>
</g>
<g >
<title>runtime.newstack (2 samples, 0.09%)</title><rect x="884.4" y="373" width="1.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="887.36" y="383.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (1 samples, 0.04%)</title><rect x="985.0" y="549" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="988.03" y="559.5" ></text>
</g>
<g >
<title>runtime.netpollBreak (5 samples, 0.22%)</title><rect x="459.9" y="229" width="2.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="462.89" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (3 samples, 0.13%)</title><rect x="739.6" y="277" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="742.59" y="287.5" ></text>
</g>
<g >
<title>time.Time.Sub (1 samples, 0.04%)</title><rect x="389.8" y="517" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="392.84" y="527.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (56 samples, 2.46%)</title><rect x="1122.5" y="517" width="29.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1125.54" y="527.5" >ru..</text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.atomicAddFloat (2 samples, 0.09%)</title><rect x="428.2" y="277" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="431.24" y="287.5" ></text>
</g>
<g >
<title>net/netip.Addr.string4 (8 samples, 0.35%)</title><rect x="118.5" y="565" width="4.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="121.45" y="575.5" ></text>
</g>
<g >
<title>net/url.parseQuery (10 samples, 0.44%)</title><rect x="790.4" y="389" width="5.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="793.44" y="399.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.04%)</title><rect x="277.2" y="533" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="280.24" y="543.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.18%)</title><rect x="92.0" y="453" width="2.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="94.99" y="463.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="103.4" y="517" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="106.40" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.09%)</title><rect x="582.4" y="309" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="585.36" y="319.5" ></text>
</g>
<g >
<title>runtime.(*gList).pop (1 samples, 0.04%)</title><rect x="261.7" y="517" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="264.67" y="527.5" ></text>
</g>
<g >
<title>net/http.(*connReader).lock (1 samples, 0.04%)</title><rect x="153.2" y="485" width="0.5" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="156.22" y="495.5" ></text>
</g>
<g >
<title>runtime.write1 (5 samples, 0.22%)</title><rect x="459.9" y="197" width="2.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="462.89" y="207.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.CollectRows[go.shape.struct (51 samples, 2.24%)</title><rect x="422.5" y="405" width="26.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="425.53" y="415.5" >g..</text>
</g>
<g >
<title>all (2,274 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (1 samples, 0.04%)</title><rect x="1072.7" y="565" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1075.73" y="575.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.04%)</title><rect x="576.1" y="261" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="579.13" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Close (151 samples, 6.64%)</title><rect x="174.5" y="533" width="78.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="177.49" y="543.5" >internal/..</text>
</g>
<g >
<title>runtime.makeslice (6 samples, 0.26%)</title><rect x="100.3" y="581" width="3.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="103.29" y="591.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).execExtendedPrefix (1 samples, 0.04%)</title><rect x="457.3" y="325" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="460.30" y="335.5" ></text>
</g>
<g >
<title>syscall.Syscall (3 samples, 0.13%)</title><rect x="838.7" y="197" width="1.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="841.70" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetsockoptInt (3 samples, 0.13%)</title><rect x="66.6" y="501" width="1.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="69.56" y="511.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*namedStructRowScanner).ScanRow (2 samples, 0.09%)</title><rect x="842.8" y="341" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="845.85" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="868.3" y="341" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="871.28" y="351.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.04%)</title><rect x="288.1" y="533" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="291.14" y="543.5" ></text>
</g>
<g >
<title>net/http.(*connReader).Read (22 samples, 0.97%)</title><rect x="143.4" y="501" width="11.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="146.36" y="511.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn/internal/ctxwatch.(*ContextWatcher).Watch (1 samples, 0.04%)</title><rect x="620.8" y="309" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="623.76" y="319.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (5 samples, 0.22%)</title><rect x="62.4" y="517" width="2.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="65.41" y="527.5" ></text>
</g>
<g >
<title>net/url.escape (1 samples, 0.04%)</title><rect x="411.6" y="421" width="0.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="414.64" y="431.5" ></text>
</g>
<g >
<title>reflect.Value.IsNil (1 samples, 0.04%)</title><rect x="857.9" y="341" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="860.90" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.04%)</title><rect x="1032.8" y="501" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1035.77" y="511.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.04%)</title><rect x="980.4" y="565" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="983.36" y="575.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.09%)</title><rect x="872.9" y="373" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="875.95" y="383.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.04%)</title><rect x="43.2" y="469" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="46.21" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.04%)</title><rect x="112.2" y="517" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="115.23" y="527.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (1 samples, 0.04%)</title><rect x="447.4" y="277" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="450.44" y="287.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (15 samples, 0.66%)</title><rect x="772.8" y="149" width="7.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="775.80" y="159.5" ></text>
</g>
<g >
<title>runtime.stopm (2 samples, 0.09%)</title><rect x="1061.8" y="549" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1064.83" y="559.5" ></text>
</g>
<g >
<title>syscall.read (1 samples, 0.04%)</title><rect x="834.5" y="149" width="0.6" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="837.55" y="159.5" ></text>
</g>
<g >
<title>context.parentCancelCtx (3 samples, 0.13%)</title><rect x="105.5" y="549" width="1.5" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="108.48" y="559.5" ></text>
</g>
<g >
<title>net/url.(*URL).String (7 samples, 0.31%)</title><rect x="885.9" y="485" width="3.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="888.92" y="495.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.26%)</title><rect x="385.2" y="501" width="3.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="388.17" y="511.5" ></text>
</g>
<g >
<title>net/http.(*conn).hijacked (1 samples, 0.04%)</title><rect x="257.5" y="581" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="260.52" y="591.5" ></text>
</g>
<g >
<title>net/http.(*response).WriteHeader (2 samples, 0.09%)</title><rect x="863.1" y="373" width="1.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="866.09" y="383.5" ></text>
</g>
<g >
<title>net/url.escape (1 samples, 0.04%)</title><rect x="888.5" y="453" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="891.51" y="463.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="416.8" y="437" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="419.82" y="447.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).receiveMessage (2 samples, 0.09%)</title><rect x="576.1" y="293" width="1.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="579.13" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.04%)</title><rect x="143.9" y="437" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="146.88" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="94.1" y="533" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="97.06" y="543.5" ></text>
</g>
<g >
<title>runtime.growslice (5 samples, 0.22%)</title><rect x="412.2" y="437" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="415.15" y="447.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (2 samples, 0.09%)</title><rect x="584.4" y="293" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="587.43" y="303.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.04%)</title><rect x="798.7" y="245" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="801.74" y="255.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/render.WriteJSON (54 samples, 2.37%)</title><rect x="846.0" y="405" width="28.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="848.96" y="415.5" >g..</text>
</g>
<g >
<title>net.(*netFD).Write (2 samples, 0.09%)</title><rect x="840.8" y="245" width="1.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="843.77" y="255.5" ></text>
</g>
<g >
<title>runtime.write1 (3 samples, 0.13%)</title><rect x="624.4" y="197" width="1.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="627.39" y="207.5" ></text>
</g>
<g >
<title>syscall.write (3 samples, 0.13%)</title><rect x="838.7" y="213" width="1.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="841.70" y="223.5" ></text>
</g>
<g >
<title>runtime.memmove (4 samples, 0.18%)</title><rect x="618.2" y="245" width="2.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="621.16" y="255.5" ></text>
</g>
<g >
<title>time.Time.locabs (2 samples, 0.09%)</title><rect x="954.4" y="469" width="1.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="957.42" y="479.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.EpollCtl (30 samples, 1.32%)</title><rect x="237.3" y="469" width="15.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="240.28" y="479.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.(*ConfigurationStorage).getNamespace (3 samples, 0.13%)</title><rect x="842.8" y="421" width="1.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="845.85" y="431.5" ></text>
</g>
<g >
<title>strings.Cut (1 samples, 0.04%)</title><rect x="140.8" y="533" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="143.77" y="543.5" ></text>
</g>
<g >
<title>runtime.removefinalizer (4 samples, 0.18%)</title><rect x="254.4" y="485" width="2.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="257.41" y="495.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="236.8" y="469" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="239.76" y="479.5" ></text>
</g>
<g >
<title>reflect.Value.Elem (1 samples, 0.04%)</title><rect x="855.3" y="325" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="858.30" y="335.5" ></text>
</g>
<g >
<title>runtime.wakeNetPoller (5 samples, 0.22%)</title><rect x="459.9" y="245" width="2.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="462.89" y="255.5" ></text>
</g>
<g >
<title>runtime.isSystemGoroutine (1 samples, 0.04%)</title><rect x="263.7" y="517" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="266.75" y="527.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtInteger (2 samples, 0.09%)</title><rect x="931.1" y="453" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="934.06" y="463.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.09%)</title><rect x="84.2" y="517" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="87.20" y="527.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*chunkReader).Next (1 samples, 0.04%)</title><rect x="843.9" y="277" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="846.89" y="287.5" ></text>
</g>
<g >
<title>runtime.addb (1 samples, 0.04%)</title><rect x="1004.2" y="469" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1007.23" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.09%)</title><rect x="844.4" y="373" width="1.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="847.41" y="383.5" ></text>
</g>
<g >
<title>time.(*Location).get (2 samples, 0.09%)</title><rect x="954.4" y="453" width="1.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="957.42" y="463.5" ></text>
</g>
<g >
<title>net/http.writeStatusLine (7 samples, 0.31%)</title><rect x="272.6" y="533" width="3.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="275.57" y="543.5" ></text>
</g>
<g >
<title>net.(*conn).Read (46 samples, 2.02%)</title><rect x="703.3" y="213" width="23.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="706.26" y="223.5" >n..</text>
</g>
<g >
<title>syscall.Syscall (11 samples, 0.48%)</title><rect x="972.1" y="533" width="5.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="975.06" y="543.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Init (27 samples, 1.19%)</title><rect x="48.4" y="517" width="14.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="51.40" y="527.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Receive (1 samples, 0.04%)</title><rect x="841.8" y="245" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="844.81" y="255.5" ></text>
</g>
<g >
<title>time.(*Timer).Stop (1 samples, 0.04%)</title><rect x="698.1" y="293" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="701.07" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (5 samples, 0.22%)</title><rect x="120.0" y="501" width="2.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="123.01" y="511.5" ></text>
</g>
<g >
<title>strconv.FormatInt (3 samples, 0.13%)</title><rect x="877.6" y="453" width="1.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="880.62" y="463.5" ></text>
</g>
<g >
<title>github.com/go-playground/validator/v10.(*validate).traverseField (1 samples, 0.04%)</title><rect x="845.4" y="309" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="848.44" y="319.5" ></text>
</g>
<g >
<title>net/http.putBufioReader (1 samples, 0.04%)</title><rect x="257.0" y="549" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="260.00" y="559.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.13%)</title><rect x="1035.4" y="485" width="1.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1038.36" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (7 samples, 0.31%)</title><rect x="119.0" y="533" width="3.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="121.97" y="543.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).initAt (1 samples, 0.04%)</title><rect x="987.1" y="501" width="0.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="990.11" y="511.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (111 samples, 4.88%)</title><rect x="179.2" y="437" width="57.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="182.16" y="447.5" >runtim..</text>
</g>
<g >
<title>runtime.adjustframe (28 samples, 1.23%)</title><rect x="812.8" y="293" width="14.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="815.75" y="303.5" ></text>
</g>
<g >
<title>net/http.(*Server).trackConn (2 samples, 0.09%)</title><rect x="258.0" y="565" width="1.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="261.04" y="575.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.04%)</title><rect x="756.2" y="341" width="0.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="759.19" y="351.5" ></text>
</g>
<g >
<title>container/list.(*List).move (1 samples, 0.04%)</title><rect x="614.0" y="325" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="617.01" y="335.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (4 samples, 0.18%)</title><rect x="866.2" y="357" width="2.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="869.20" y="367.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.04%)</title><rect x="994.9" y="501" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="997.89" y="511.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Tx).Query (3 samples, 0.13%)</title><rect x="838.7" y="373" width="1.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="841.70" y="383.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (2 samples, 0.09%)</title><rect x="714.2" y="133" width="1.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="717.16" y="143.5" ></text>
</g>
<g >
<title>fmt.(*fmt).pad (1 samples, 0.04%)</title><rect x="931.6" y="437" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="934.58" y="447.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (3 samples, 0.13%)</title><rect x="437.6" y="261" width="1.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="440.58" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (39 samples, 1.72%)</title><rect x="986.1" y="533" width="20.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="989.07" y="543.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="713.6" y="69" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="716.64" y="79.5" ></text>
</g>
<g >
<title>sync.runtime_notifyListNotifyAll (2 samples, 0.09%)</title><rect x="979.8" y="581" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="982.84" y="591.5" ></text>
</g>
<g >
<title>runtime.futex (15 samples, 0.66%)</title><rect x="772.8" y="133" width="7.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="775.80" y="143.5" ></text>
</g>
<g >
<title>runtime.concatstrings (3 samples, 0.13%)</title><rect x="116.9" y="565" width="1.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="119.90" y="575.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="598.4" y="293" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="601.44" y="303.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (48 samples, 2.11%)</title><rect x="17.3" y="437" width="24.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="20.26" y="447.5" >s..</text>
</g>
<g >
<title>runtime.checkTimers (6 samples, 0.26%)</title><rect x="1083.1" y="549" width="3.1" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1086.10" y="559.5" ></text>
</g>
<g >
<title>sync.runtime_notifyListWait (1 samples, 0.04%)</title><rect x="392.4" y="549" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="395.44" y="559.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.13%)</title><rect x="1035.4" y="501" width="1.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1038.36" y="511.5" ></text>
</g>
<g >
<title>reflect.(*rtype).nameOff (1 samples, 0.04%)</title><rect x="844.4" y="261" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="847.41" y="271.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*responseWriter).WriteHeaderNow (13 samples, 0.57%)</title><rect x="863.1" y="389" width="6.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="866.09" y="399.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.04%)</title><rect x="256.0" y="437" width="0.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="258.96" y="447.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*HistogramVec).WithLabelValues (6 samples, 0.26%)</title><rect x="406.4" y="453" width="3.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="409.45" y="463.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (21 samples, 0.92%)</title><rect x="801.3" y="293" width="10.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="804.34" y="303.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (1 samples, 0.04%)</title><rect x="563.7" y="101" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="566.68" y="111.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.04%)</title><rect x="177.1" y="453" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="180.09" y="463.5" ></text>
</g>
<g >
<title>net/http.(*conn).hijacked (3 samples, 0.13%)</title><rect x="122.6" y="597" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="125.60" y="607.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).ExecPrepared (3 samples, 0.13%)</title><rect x="838.7" y="325" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.70" y="335.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (2 samples, 0.09%)</title><rect x="1016.2" y="533" width="1.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1019.17" y="543.5" ></text>
</g>
<g >
<title>runtime.chunkIdx.l2 (1 samples, 0.04%)</title><rect x="832.5" y="213" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="835.47" y="223.5" ></text>
</g>
<g >
<title>github.com/zsais/go-gin-prometheus.computeApproximateRequestSize (3 samples, 0.13%)</title><rect x="883.8" y="485" width="1.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="886.84" y="495.5" ></text>
</g>
<g >
<title>container/list.(*List).MoveToFront (1 samples, 0.04%)</title><rect x="452.1" y="325" width="0.5" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="455.11" y="335.5" ></text>
</g>
<g >
<title>runtime.pidleget (2 samples, 0.09%)</title><rect x="1154.7" y="549" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1157.71" y="559.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue1 (1 samples, 0.04%)</title><rect x="594.8" y="165" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="597.81" y="175.5" ></text>
</g>
<g >
<title>runtime.evacuated (1 samples, 0.04%)</title><rect x="733.9" y="325" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="736.88" y="335.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Tx).Commit (5 samples, 0.22%)</title><rect x="834.5" y="405" width="2.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="837.55" y="415.5" ></text>
</g>
<g >
<title>runtime.convI2I (3 samples, 0.13%)</title><rect x="874.0" y="421" width="1.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="876.98" y="431.5" ></text>
</g>
<g >
<title>internal/itoa.Uitoa (2 samples, 0.09%)</title><rect x="115.9" y="581" width="1.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="118.86" y="591.5" ></text>
</g>
<g >
<title>runtime.newstack (70 samples, 3.08%)</title><rect x="797.2" y="325" width="36.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="800.19" y="335.5" >run..</text>
</g>
<g >
<title>runtime.step (1 samples, 0.04%)</title><rect x="844.9" y="117" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="847.93" y="127.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.04%)</title><rect x="121.6" y="373" width="0.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="124.57" y="383.5" ></text>
</g>
<g >
<title>runtime.growslice (6 samples, 0.26%)</title><rect x="889.6" y="469" width="3.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="892.55" y="479.5" ></text>
</g>
<g >
<title>net.(*conn).Write (180 samples, 7.92%)</title><rect x="289.7" y="549" width="93.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="292.69" y="559.5" >net.(*conn)..</text>
</g>
<g >
<title>runtime.newproc.func1 (11 samples, 0.48%)</title><rect x="261.7" y="549" width="5.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="264.67" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="884.4" y="437" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="887.36" y="447.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (41 samples, 1.80%)</title><rect x="925.4" y="501" width="21.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="928.36" y="511.5" >f..</text>
</g>
<g >
<title>syscall.Syscall (115 samples, 5.06%)</title><rect x="177.1" y="469" width="59.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="180.09" y="479.5" >syscal..</text>
</g>
<g >
<title>runtime.ready (1 samples, 0.04%)</title><rect x="980.4" y="517" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="983.36" y="527.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (1 samples, 0.04%)</title><rect x="800.8" y="293" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="803.82" y="303.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="924.8" y="485" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="927.84" y="495.5" ></text>
</g>
<g >
<title>runtime.readgstatus (1 samples, 0.04%)</title><rect x="1007.9" y="549" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1010.86" y="559.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="781.1" y="309" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="784.10" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (1 samples, 0.04%)</title><rect x="80.1" y="485" width="0.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="83.05" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).Exec (2 samples, 0.09%)</title><rect x="837.1" y="357" width="1.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="840.14" y="367.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.04%)</title><rect x="884.9" y="341" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="887.88" y="351.5" ></text>
</g>
<g >
<title>strings.(*Builder).WriteString (6 samples, 0.26%)</title><rect x="412.2" y="453" width="3.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="415.15" y="463.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.04%)</title><rect x="134.0" y="517" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="137.02" y="527.5" ></text>
</g>
<g >
<title>runtime.(*spanSetBlockAlloc).alloc (1 samples, 0.04%)</title><rect x="984.5" y="421" width="0.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="987.51" y="431.5" ></text>
</g>
<g >
<title>net/http.(*conn).finalFlush (2 samples, 0.09%)</title><rect x="256.5" y="565" width="1.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="259.48" y="575.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (9 samples, 0.40%)</title><rect x="973.1" y="501" width="4.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="976.10" y="511.5" ></text>
</g>
<g >
<title>runtime.mapdelete_fast64 (2 samples, 0.09%)</title><rect x="258.0" y="549" width="1.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="261.04" y="559.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (13 samples, 0.57%)</title><rect x="383.6" y="565" width="6.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="386.61" y="575.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.04%)</title><rect x="166.2" y="549" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="169.19" y="559.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.04%)</title><rect x="43.2" y="325" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="46.21" y="335.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (132 samples, 5.80%)</title><rect x="629.6" y="197" width="68.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="632.58" y="207.5" >syscall..</text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.04%)</title><rect x="43.2" y="453" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="46.21" y="463.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn/internal/bgreader.(*BGReader).Read (47 samples, 2.07%)</title><rect x="702.7" y="229" width="24.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="705.74" y="239.5" >g..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="128.8" y="549" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="131.83" y="559.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.04%)</title><rect x="714.2" y="117" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="717.16" y="127.5" ></text>
</g>
<g >
<title>github.com/jackc/puddle/v2.(*Resource[go.shape.*uint8]).Release (30 samples, 1.32%)</title><rect x="767.1" y="325" width="15.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="770.09" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="173.5" y="565" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="176.46" y="575.5" ></text>
</g>
<g >
<title>golang.org/x/sync/semaphore.(*Weighted).Acquire (12 samples, 0.53%)</title><rect x="592.7" y="325" width="6.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="595.74" y="335.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/services.(*ReactionsService).GetUserReactions (710 samples, 31.22%)</title><rect x="420.5" y="437" width="368.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="423.46" y="447.5" >github.com/Deimvis/reactionsstorage/src/services.(..</text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.04%)</title><rect x="794.1" y="341" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="797.07" y="351.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.(*ReactionsStorage).getEntityReactionsCount (302 samples, 13.28%)</title><rect x="449.0" y="405" width="156.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="452.00" y="415.5" >github.com/Deimvis/r..</text>
</g>
<g >
<title>context.WithValue (5 samples, 0.22%)</title><rect x="111.2" y="597" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="114.19" y="607.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (8 samples, 0.35%)</title><rect x="559.0" y="85" width="4.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="562.01" y="95.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.09%)</title><rect x="860.5" y="373" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="863.49" y="383.5" ></text>
</g>
<g >
<title>runtime.startm (13 samples, 0.57%)</title><rect x="439.1" y="181" width="6.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="442.14" y="191.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*dbTx).Query (1 samples, 0.04%)</title><rect x="838.2" y="357" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="841.18" y="367.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.04%)</title><rect x="844.9" y="293" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="847.93" y="303.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).convertRowDescription (4 samples, 0.18%)</title><rect x="727.1" y="277" width="2.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="730.13" y="287.5" ></text>
</g>
<g >
<title>net/textproto.validHeaderValueByte (2 samples, 0.09%)</title><rect x="170.3" y="565" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="173.34" y="575.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*poolRows).Close (34 samples, 1.50%)</title><rect x="765.0" y="357" width="17.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="768.01" y="367.5" ></text>
</g>
<g >
<title>github.com/go-playground/validator/v10.(*validate).validateStruct (1 samples, 0.04%)</title><rect x="845.4" y="325" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="848.44" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="751.5" y="277" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="754.52" y="287.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (4 samples, 0.18%)</title><rect x="770.2" y="261" width="2.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="773.20" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="44.8" y="469" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="47.77" y="479.5" ></text>
</g>
<g >
<title>runtime.futexsleep (33 samples, 1.45%)</title><rect x="1095.6" y="517" width="17.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1098.56" y="527.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="253.9" y="485" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="256.89" y="495.5" ></text>
</g>
<g >
<title>runtime.addb (1 samples, 0.04%)</title><rect x="1018.2" y="533" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1021.24" y="543.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.09%)</title><rect x="87.3" y="549" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="90.32" y="559.5" ></text>
</g>
<g >
<title>net/http.(*conn).close (161 samples, 7.08%)</title><rect x="174.0" y="581" width="83.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="176.98" y="591.5" >net/http...</text>
</g>
<g >
<title>sync.(*poolChain).popTail (1 samples, 0.04%)</title><rect x="394.0" y="549" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="396.99" y="559.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="274.1" y="501" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="277.12" y="511.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.09%)</title><rect x="1170.3" y="533" width="1.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1173.28" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="65.5" y="501" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="68.52" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.04%)</title><rect x="984.5" y="501" width="0.5" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="987.51" y="511.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).cancel (10 samples, 0.44%)</title><rect x="104.4" y="581" width="5.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="107.44" y="591.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.04%)</title><rect x="177.1" y="421" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="180.09" y="431.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (2 samples, 0.09%)</title><rect x="983.0" y="581" width="1.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="985.96" y="591.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.13%)</title><rect x="168.3" y="533" width="1.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="171.27" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).deallocateInvalidatedCachedStatements (2 samples, 0.09%)</title><rect x="450.0" y="341" width="1.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="453.04" y="351.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/services.(*ReactionsService).AddUserReaction (17 samples, 0.75%)</title><rect x="834.0" y="437" width="8.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="837.03" y="447.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/models.(*ReactionsGETResponse200).Code (2 samples, 0.09%)</title><rect x="419.4" y="437" width="1.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="422.42" y="447.5" ></text>
</g>
<g >
<title>runtime.resettimer (10 samples, 0.44%)</title><rect x="457.8" y="277" width="5.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="460.82" y="287.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).execExtendedSuffix (209 samples, 9.19%)</title><rect x="621.8" y="325" width="108.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="624.79" y="335.5" >github.com/De..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="430.3" y="277" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="433.32" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.13%)</title><rect x="977.8" y="581" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="980.77" y="591.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*ExtendedQueryBuilder).Build (11 samples, 0.48%)</title><rect x="614.5" y="341" width="5.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="617.53" y="351.5" ></text>
</g>
<g >
<title>runtime.modtimer (1 samples, 0.04%)</title><rect x="840.3" y="245" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="843.26" y="255.5" ></text>
</g>
<g >
<title>strings.Cut (1 samples, 0.04%)</title><rect x="889.0" y="469" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="892.03" y="479.5" ></text>
</g>
<g >
<title>runtime.runtimer (2 samples, 0.09%)</title><rect x="1085.2" y="533" width="1.0" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1088.18" y="543.5" ></text>
</g>
<g >
<title>net/url.QueryUnescape (1 samples, 0.04%)</title><rect x="789.9" y="389" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="792.92" y="399.5" ></text>
</g>
<g >
<title>syscall.accept4 (53 samples, 2.33%)</title><rect x="14.7" y="469" width="27.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="17.67" y="479.5" >s..</text>
</g>
<g >
<title>runtime/internal/atomic.(*Uintptr).CompareAndSwap (2 samples, 0.09%)</title><rect x="970.5" y="517" width="1.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="973.50" y="527.5" ></text>
</g>
<g >
<title>runtime.usleep (6 samples, 0.26%)</title><rect x="1058.2" y="501" width="3.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1061.20" y="511.5" ></text>
</g>
<g >
<title>net/http.fixLength (1 samples, 0.04%)</title><rect x="136.1" y="549" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="139.09" y="559.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (22 samples, 0.97%)</title><rect x="932.1" y="469" width="11.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="935.10" y="479.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.04%)</title><rect x="844.9" y="133" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="847.93" y="143.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).Close (1 samples, 0.04%)</title><rect x="759.3" y="325" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="762.31" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.35%)</title><rect x="559.0" y="101" width="4.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="562.01" y="111.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (8 samples, 0.35%)</title><rect x="995.9" y="485" width="4.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="998.93" y="495.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (1 samples, 0.04%)</title><rect x="1005.8" y="501" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1008.79" y="511.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (1 samples, 0.04%)</title><rect x="890.6" y="325" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="893.59" y="335.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="878.7" y="405" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="881.65" y="415.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="983.5" y="549" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="986.47" y="559.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.04%)</title><rect x="291.2" y="469" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="294.25" y="479.5" ></text>
</g>
<g >
<title>fmt.(*fmt).padString (1 samples, 0.04%)</title><rect x="944.6" y="421" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="947.56" y="431.5" ></text>
</g>
<g >
<title>runtime.resetspinning (3 samples, 0.13%)</title><rect x="1063.9" y="565" width="1.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1066.91" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="757.2" y="357" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="760.23" y="367.5" ></text>
</g>
<g >
<title>runtime.injectglist (16 samples, 0.70%)</title><rect x="1086.2" y="549" width="8.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1089.22" y="559.5" ></text>
</g>
<g >
<title>runtime.makechan (2 samples, 0.09%)</title><rect x="171.4" y="581" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="174.38" y="591.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.13%)</title><rect x="42.7" y="501" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="45.69" y="511.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).ClientIP (6 samples, 0.26%)</title><rect x="920.7" y="533" width="3.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="923.69" y="543.5" ></text>
</g>
<g >
<title>github.com/go-playground/validator/v10.(*validate).extractTypeInternal (1 samples, 0.04%)</title><rect x="845.4" y="293" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="848.44" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (1 samples, 0.04%)</title><rect x="143.4" y="453" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="146.36" y="463.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (3 samples, 0.13%)</title><rect x="760.3" y="309" width="1.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="763.34" y="319.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*baseRows).Next (13 samples, 0.57%)</title><rect x="758.3" y="357" width="6.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="761.27" y="367.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.LoggerWithConfig.func1 (129 samples, 5.67%)</title><rect x="893.7" y="549" width="66.9" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="896.70" y="559.5" >github...</text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*histogram).Observe (5 samples, 0.22%)</title><rect x="426.7" y="309" width="2.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="429.68" y="319.5" ></text>
</g>
<g >
<title>internal/poll.runtime_Semrelease (1 samples, 0.04%)</title><rect x="175.5" y="485" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="178.53" y="495.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="964.3" y="565" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="967.27" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="844.9" y="277" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="847.93" y="287.5" ></text>
</g>
<g >
<title>strings.(*Builder).WriteString (7 samples, 0.31%)</title><rect x="889.6" y="485" width="3.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="892.55" y="495.5" ></text>
</g>
<g >
<title>runtime.injectglist.func1 (3 samples, 0.13%)</title><rect x="1035.4" y="533" width="1.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1038.36" y="543.5" ></text>
</g>
<g >
<title>runtime.runqput (1 samples, 0.04%)</title><rect x="264.3" y="533" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="267.27" y="543.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (2 samples, 0.09%)</title><rect x="840.8" y="165" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="843.77" y="175.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.04%)</title><rect x="617.1" y="245" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="620.12" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.13%)</title><rect x="590.7" y="309" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="593.66" y="319.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (2 samples, 0.09%)</title><rect x="132.5" y="485" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="135.46" y="495.5" ></text>
</g>
<g >
<title>runtime.step (6 samples, 0.26%)</title><rect x="808.6" y="245" width="3.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="811.60" y="255.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn/internal/bgreader.(*BGReader).Read (1 samples, 0.04%)</title><rect x="834.5" y="213" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="837.55" y="223.5" ></text>
</g>
<g >
<title>runtime.copystack (3 samples, 0.13%)</title><rect x="412.7" y="357" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="415.67" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.04%)</title><rect x="1082.6" y="533" width="0.5" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1085.59" y="543.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.04%)</title><rect x="840.3" y="149" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="843.26" y="159.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).receiveMessage (1 samples, 0.04%)</title><rect x="834.5" y="293" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="837.55" y="303.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*SugaredLogger).Debugln (3 samples, 0.13%)</title><rect x="876.1" y="453" width="1.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="879.06" y="463.5" ></text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.04%)</title><rect x="795.6" y="389" width="0.5" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="798.63" y="399.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn/internal/bgreader.(*BGReader).Read (1 samples, 0.04%)</title><rect x="837.7" y="197" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="840.66" y="207.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.04%)</title><rect x="1064.9" y="533" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1067.94" y="543.5" ></text>
</g>
<g >
<title>time.Since (1 samples, 0.04%)</title><rect x="429.3" y="309" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="432.28" y="319.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.validateLabelValues (3 samples, 0.13%)</title><rect x="879.2" y="421" width="1.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="882.17" y="431.5" ></text>
</g>
<g >
<title>net.(*conn).Read (22 samples, 0.97%)</title><rect x="967.9" y="597" width="11.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="970.91" y="607.5" ></text>
</g>
<g >
<title>time.Until (4 samples, 0.18%)</title><rect x="388.3" y="533" width="2.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="391.28" y="543.5" ></text>
</g>
<g >
<title>runtime.newobject (5 samples, 0.22%)</title><rect x="785.8" y="389" width="2.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="788.77" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="423.6" y="357" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="426.57" y="367.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*MetricVec).GetMetricWithLabelValues (5 samples, 0.22%)</title><rect x="406.4" y="421" width="2.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="409.45" y="431.5" ></text>
</g>
<g >
<title>runtime.systemstack (10 samples, 0.44%)</title><rect x="88.9" y="549" width="5.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="91.87" y="559.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (3 samples, 0.13%)</title><rect x="604.2" y="373" width="1.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="607.15" y="383.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.04%)</title><rect x="257.0" y="517" width="0.5" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="260.00" y="527.5" ></text>
</g>
<g >
<title>net/textproto.MIMEHeader.Del (1 samples, 0.04%)</title><rect x="136.6" y="549" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="139.61" y="559.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.04%)</title><rect x="594.8" y="277" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="597.81" y="287.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (161 samples, 7.08%)</title><rect x="465.1" y="261" width="83.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="468.08" y="271.5" >net.(*net..</text>
</g>
<g >
<title>runtime.addfinalizer (5 samples, 0.22%)</title><rect x="62.4" y="469" width="2.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="65.41" y="479.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.13%)</title><rect x="1035.4" y="517" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1038.36" y="527.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (21 samples, 0.92%)</title><rect x="564.2" y="133" width="10.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="567.20" y="143.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (22 samples, 0.97%)</title><rect x="143.4" y="517" width="11.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="146.36" y="527.5" ></text>
</g>
<g >
<title>bytes.makeASCIISet (1 samples, 0.04%)</title><rect x="157.9" y="549" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="160.89" y="559.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*ExtendedQueryBuilder).encodeExtendedParamValue (9 samples, 0.40%)</title><rect x="615.6" y="293" width="4.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="618.57" y="303.5" ></text>
</g>
<g >
<title>runtime.growslice (5 samples, 0.22%)</title><rect x="790.4" y="373" width="2.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="793.44" y="383.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*RowDescription).Decode (2 samples, 0.09%)</title><rect x="551.7" y="261" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="554.74" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="978.8" y="549" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="981.80" y="559.5" ></text>
</g>
<g >
<title>time.(*Timer).Reset (11 samples, 0.48%)</title><rect x="457.8" y="293" width="5.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="460.82" y="303.5" ></text>
</g>
<g >
<title>runtime.gostartcallfn (1 samples, 0.04%)</title><rect x="263.2" y="517" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="266.23" y="527.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="457.8" y="245" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="460.82" y="255.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*poolRows).Scan (2 samples, 0.09%)</title><rect x="842.8" y="373" width="1.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="845.85" y="383.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*BindComplete).Decode (1 samples, 0.04%)</title><rect x="700.1" y="261" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="703.15" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="875.5" y="405" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="878.54" y="415.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.04%)</title><rect x="260.1" y="581" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="263.11" y="591.5" ></text>
</g>
<g >
<title>golang.org/x/sync/semaphore.(*Weighted).Release (22 samples, 0.97%)</title><rect x="435.0" y="293" width="11.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="437.99" y="303.5" ></text>
</g>
<g >
<title>net.(*conn).Read (19 samples, 0.84%)</title><rect x="143.4" y="485" width="9.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="146.36" y="495.5" ></text>
</g>
<g >
<title>strings.ToLower (1 samples, 0.04%)</title><rect x="141.3" y="533" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="144.28" y="543.5" ></text>
</g>
<g >
<title>net/http.isNotToken (1 samples, 0.04%)</title><rect x="142.3" y="549" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="145.32" y="559.5" ></text>
</g>
<g >
<title>runtime.scanstack (35 samples, 1.54%)</title><rect x="988.1" y="517" width="18.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="991.14" y="527.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).JSON (58 samples, 2.55%)</title><rect x="846.0" y="453" width="30.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="848.96" y="463.5" >gi..</text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="254.9" y="453" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="257.93" y="463.5" ></text>
</g>
<g >
<title>runtime.tracebackPCs (1 samples, 0.04%)</title><rect x="844.9" y="181" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="847.93" y="191.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*MultiResultReader).receiveMessage (1 samples, 0.04%)</title><rect x="834.5" y="309" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="837.55" y="319.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (4 samples, 0.18%)</title><rect x="969.5" y="533" width="2.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="972.46" y="543.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (1 samples, 0.04%)</title><rect x="257.0" y="501" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="260.00" y="511.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (14 samples, 0.62%)</title><rect x="146.0" y="389" width="7.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="148.95" y="399.5" ></text>
</g>
<g >
<title>runtime.convT (1 samples, 0.04%)</title><rect x="751.0" y="309" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="754.00" y="319.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*dbTx).Commit (5 samples, 0.22%)</title><rect x="834.5" y="389" width="2.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="837.55" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.13%)</title><rect x="113.8" y="581" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="116.78" y="591.5" ></text>
</g>
<g >
<title>sync/atomic.(*Bool).Load (1 samples, 0.04%)</title><rect x="288.7" y="549" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="291.65" y="559.5" ></text>
</g>
<g >
<title>runtime.systemstack (14 samples, 0.62%)</title><rect x="439.1" y="245" width="7.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="442.14" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (5 samples, 0.22%)</title><rect x="120.0" y="453" width="2.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="123.01" y="463.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgtype.(*ArrayCodec).decodeBinary (1 samples, 0.04%)</title><rect x="842.8" y="277" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="845.85" y="287.5" ></text>
</g>
<g >
<title>net/http.validMethod (1 samples, 0.04%)</title><rect x="142.3" y="581" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="145.32" y="591.5" ></text>
</g>
<g >
<title>net.(*conn).Read (38 samples, 1.67%)</title><rect x="555.4" y="213" width="19.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="558.37" y="223.5" ></text>
</g>
<g >
<title>runtime.netpollgoready.goready.func1 (5 samples, 0.22%)</title><rect x="385.7" y="485" width="2.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="388.69" y="495.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="127.8" y="533" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="130.79" y="543.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.04%)</title><rect x="833.0" y="245" width="0.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="835.99" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="154.3" y="469" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="157.26" y="479.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.04%)</title><rect x="128.3" y="549" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="131.31" y="559.5" ></text>
</g>
<g >
<title>net.(*netFD).init (27 samples, 1.19%)</title><rect x="48.4" y="533" width="14.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="51.40" y="543.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="781.6" y="277" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="784.62" y="287.5" ></text>
</g>
<g >
<title>net.(*conn).Write (4 samples, 0.18%)</title><rect x="835.1" y="277" width="2.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="838.07" y="287.5" ></text>
</g>
<g >
<title>net.parseIP (6 samples, 0.26%)</title><rect x="956.0" y="517" width="3.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="958.97" y="527.5" ></text>
</g>
<g >
<title>runtime.gfput (2 samples, 0.09%)</title><rect x="1032.3" y="581" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1035.25" y="591.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.04%)</title><rect x="91.5" y="501" width="0.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="94.47" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="171.4" y="565" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="174.38" y="575.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (1 samples, 0.04%)</title><rect x="392.4" y="533" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="395.44" y="543.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*CounterVec).GetMetricWithLabelValues (7 samples, 0.31%)</title><rect x="879.2" y="469" width="3.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="882.17" y="479.5" ></text>
</g>
<g >
<title>strconv.AppendQuote (18 samples, 0.79%)</title><rect x="934.2" y="453" width="9.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="937.18" y="463.5" ></text>
</g>
<g >
<title>runtime.newstack (3 samples, 0.13%)</title><rect x="412.7" y="373" width="1.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="415.67" y="383.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.04%)</title><rect x="287.6" y="533" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="290.62" y="543.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.09%)</title><rect x="878.1" y="421" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="881.14" y="431.5" ></text>
</g>
<g >
<title>context.WithCancel (1 samples, 0.04%)</title><rect x="125.2" y="581" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="128.20" y="591.5" ></text>
</g>
<g >
<title>runtime.mapiternext (1 samples, 0.04%)</title><rect x="172.9" y="581" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="175.94" y="591.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).Exec (5 samples, 0.22%)</title><rect x="840.3" y="373" width="2.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="843.26" y="383.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).exec (2 samples, 0.09%)</title><rect x="837.1" y="341" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="840.14" y="351.5" ></text>
</g>
<g >
<title>github.com/jackc/puddle/v2/internal/genstack.(*stack[go.shape.*uint8]).pop (1 samples, 0.04%)</title><rect x="592.2" y="309" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="595.22" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="950.3" y="485" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="953.26" y="495.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.04%)</title><rect x="134.5" y="549" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="137.54" y="559.5" ></text>
</g>
<g >
<title>runtime.FuncForPC (1 samples, 0.04%)</title><rect x="401.8" y="453" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="404.78" y="463.5" ></text>
</g>
<g >
<title>sort.SearchFloat64s (1 samples, 0.04%)</title><rect x="762.9" y="293" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="765.94" y="303.5" ></text>
</g>
<g >
<title>runtime.newproc (11 samples, 0.48%)</title><rect x="261.7" y="581" width="5.7" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="264.67" y="591.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.09%)</title><rect x="279.8" y="533" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="282.83" y="543.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.04%)</title><rect x="950.8" y="501" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="953.78" y="511.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.04%)</title><rect x="967.4" y="565" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="970.39" y="575.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).peekMessage (2 samples, 0.09%)</title><rect x="837.1" y="261" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="840.14" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.09%)</title><rect x="584.4" y="229" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="587.43" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.04%)</title><rect x="177.6" y="437" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="180.61" y="447.5" ></text>
</g>
<g >
<title>runtime.netpollblock (1 samples, 0.04%)</title><rect x="705.9" y="133" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="708.86" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).initHeapBits (1 samples, 0.04%)</title><rect x="959.6" y="405" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="962.60" y="415.5" ></text>
</g>
<g >
<title>syscall.SetsockoptInt (9 samples, 0.40%)</title><rect x="68.1" y="501" width="4.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="71.12" y="511.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="757.2" y="341" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="760.23" y="351.5" ></text>
</g>
<g >
<title>runtime.isSystemGoroutine (1 samples, 0.04%)</title><rect x="90.9" y="501" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="93.95" y="511.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Conn).Release (33 samples, 1.45%)</title><rect x="431.9" y="341" width="17.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="434.87" y="351.5" ></text>
</g>
<g >
<title>net/http.putBufioWriter (1 samples, 0.04%)</title><rect x="393.0" y="581" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="395.96" y="591.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).Query (269 samples, 11.83%)</title><rect x="608.3" y="357" width="139.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="611.30" y="367.5" >github.com/Deimvi..</text>
</g>
<g >
<title>net/http.hasToken (1 samples, 0.04%)</title><rect x="272.0" y="533" width="0.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="275.05" y="543.5" ></text>
</g>
<g >
<title>runtime.futexsleep (19 samples, 0.84%)</title><rect x="1036.9" y="517" width="9.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1039.92" y="527.5" ></text>
</g>
<g >
<title>runtime.stealWork (1 samples, 0.04%)</title><rect x="1029.1" y="549" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1032.14" y="559.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (1 samples, 0.04%)</title><rect x="987.1" y="485" width="0.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="990.11" y="495.5" ></text>
</g>
<g >
<title>net.wrapSyscallError (1 samples, 0.04%)</title><rect x="382.6" y="533" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="385.58" y="543.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.04%)</title><rect x="121.6" y="421" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="124.57" y="431.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (4 samples, 0.18%)</title><rect x="466.1" y="181" width="2.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="469.12" y="191.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="275.7" y="485" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="278.68" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.RowToAddrOfStructByName[go.shape.struct (2 samples, 0.09%)</title><rect x="842.8" y="389" width="1.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="845.85" y="399.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).RemoteIP (4 samples, 0.18%)</title><rect x="920.7" y="517" width="2.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="923.69" y="527.5" ></text>
</g>
<g >
<title>bufio.NewReaderSize (6 samples, 0.26%)</title><rect x="100.3" y="597" width="3.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="103.29" y="607.5" ></text>
</g>
<g >
<title>runtime.runqsteal (1 samples, 0.04%)</title><rect x="1029.1" y="533" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1032.14" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="154.3" y="453" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="157.26" y="463.5" ></text>
</g>
<g >
<title>net/url.unescape (1 samples, 0.04%)</title><rect x="789.9" y="373" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="792.92" y="383.5" ></text>
</g>
<g >
<title>runtime.resettimer (1 samples, 0.04%)</title><rect x="840.3" y="261" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="843.26" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (2 samples, 0.09%)</title><rect x="1017.2" y="533" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1020.20" y="543.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="64.5" y="437" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="67.49" y="447.5" ></text>
</g>
<g >
<title>strconv.AppendInt (3 samples, 0.13%)</title><rect x="274.6" y="517" width="1.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="277.64" y="527.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.EpollWait (12 samples, 0.53%)</title><rect x="1049.4" y="533" width="6.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1052.38" y="543.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.04%)</title><rect x="101.3" y="485" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="104.33" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.09%)</title><rect x="100.8" y="517" width="1.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="103.81" y="527.5" ></text>
</g>
<g >
<title>vendor/golang.org/x/net/http/httpguts.ValidHeaderFieldValue (1 samples, 0.04%)</title><rect x="964.8" y="597" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="967.79" y="607.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*node).getValue (1 samples, 0.04%)</title><rect x="960.6" y="549" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="963.64" y="559.5" ></text>
</g>
<g >
<title>net/http.(*Request).Context (1 samples, 0.04%)</title><rect x="621.3" y="309" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="624.28" y="319.5" ></text>
</g>
<g >
<title>net/http.readRequest (19 samples, 0.84%)</title><rect x="132.5" y="581" width="9.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="135.46" y="591.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="611.4" y="293" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="614.42" y="303.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.04%)</title><rect x="834.5" y="229" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="837.55" y="239.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.04%)</title><rect x="834.5" y="133" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="837.55" y="143.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (8 samples, 0.35%)</title><rect x="709.5" y="85" width="4.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="712.49" y="95.5" ></text>
</g>
<g >
<title>runtime.injectglist (4 samples, 0.18%)</title><rect x="1034.8" y="549" width="2.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1037.85" y="559.5" ></text>
</g>
<g >
<title>net/http.readTransfer (4 samples, 0.18%)</title><rect x="135.1" y="565" width="2.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="138.06" y="575.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.09%)</title><rect x="844.4" y="341" width="1.0" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="847.41" y="351.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (2 samples, 0.09%)</title><rect x="112.7" y="549" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="115.74" y="559.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.09%)</title><rect x="165.2" y="549" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="168.15" y="559.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (956 samples, 42.04%)</title><rect x="397.6" y="549" width="496.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="400.63" y="559.5" >github.com/gin-gonic/gin.(*Context).Next</text>
</g>
<g >
<title>net/url.ParseQuery (85 samples, 3.74%)</title><rect x="789.9" y="405" width="44.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="792.92" y="415.5" >net/..</text>
</g>
<g >
<title>internal/poll.(*FD).Read (1 samples, 0.04%)</title><rect x="556.9" y="181" width="0.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="559.93" y="191.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (35 samples, 1.54%)</title><rect x="556.9" y="197" width="18.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="559.93" y="207.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (1,087 samples, 47.80%)</title><rect x="396.6" y="565" width="564.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="399.59" y="575.5" >github.com/gin-gonic/gin.(*Context).Next</text>
</g>
<g >
<title>runtime.futexwakeup (8 samples, 0.35%)</title><rect x="559.0" y="53" width="4.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="562.01" y="63.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="601.0" y="277" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="604.04" y="287.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="582.9" y="277" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="585.88" y="287.5" ></text>
</g>
<g >
<title>runtime.memmove (6 samples, 0.26%)</title><rect x="828.3" y="293" width="3.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="831.32" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (178 samples, 7.83%)</title><rect x="290.2" y="533" width="92.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="293.21" y="543.5" >net.(*netFD..</text>
</g>
<g >
<title>strconv.formatBits (3 samples, 0.13%)</title><rect x="274.6" y="501" width="1.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="277.64" y="511.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="61.4" y="485" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="64.37" y="495.5" ></text>
</g>
<g >
<title>syscall.Close (117 samples, 5.15%)</title><rect x="176.1" y="485" width="60.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="179.05" y="495.5" >syscal..</text>
</g>
<g >
<title>runtime.runqgrab (16 samples, 0.70%)</title><rect x="1160.4" y="517" width="8.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1163.42" y="527.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (20 samples, 0.88%)</title><rect x="564.7" y="117" width="10.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="567.71" y="127.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByteString (1 samples, 0.04%)</title><rect x="921.2" y="485" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="924.20" y="495.5" ></text>
</g>
<g >
<title>net/http.(*conn).readRequest (96 samples, 4.22%)</title><rect x="124.2" y="597" width="49.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="127.16" y="607.5" >net/h..</text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*ExtendedQueryBuilder).appendParam (5 samples, 0.22%)</title><rect x="454.7" y="325" width="2.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="457.71" y="335.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn/internal/bgreader.(*BGReader).Read (1 samples, 0.04%)</title><rect x="843.9" y="245" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="846.89" y="255.5" ></text>
</g>
<g >
<title>net.ParseIP (7 samples, 0.31%)</title><rect x="956.0" y="533" width="3.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="958.97" y="543.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (1 samples, 0.04%)</title><rect x="134.5" y="517" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="137.54" y="527.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.04%)</title><rect x="986.1" y="485" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="989.07" y="495.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.09%)</title><rect x="783.2" y="357" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="786.18" y="367.5" ></text>
</g>
<g >
<title>github.com/jackc/puddle/v2.(*Pool[go.shape.*uint8]).acquire (12 samples, 0.53%)</title><rect x="750.0" y="341" width="6.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="752.96" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (2 samples, 0.09%)</title><rect x="832.0" y="229" width="1.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="834.95" y="239.5" ></text>
</g>
<g >
<title>runtime.sweepone (4 samples, 0.18%)</title><rect x="981.9" y="597" width="2.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="984.92" y="607.5" ></text>
</g>
<g >
<title>runtime.step (4 samples, 0.18%)</title><rect x="823.6" y="229" width="2.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="826.65" y="239.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrint (3 samples, 0.13%)</title><rect x="894.2" y="517" width="1.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="897.22" y="527.5" ></text>
</g>
<g >
<title>runtime.copystack (62 samples, 2.73%)</title><rect x="801.3" y="309" width="32.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="804.34" y="319.5" >ru..</text>
</g>
<g >
<title>os.(*File).Write (2 samples, 0.09%)</title><rect x="895.8" y="517" width="1.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="898.78" y="527.5" ></text>
</g>
<g >
<title>strings.Cut (2 samples, 0.09%)</title><rect x="794.6" y="373" width="1.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="797.59" y="383.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (1 samples, 0.04%)</title><rect x="981.9" y="485" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="984.92" y="495.5" ></text>
</g>
<g >
<title>runtime.(*gList).push (1 samples, 0.04%)</title><rect x="1120.5" y="533" width="0.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1123.47" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).peekMessage (54 samples, 2.37%)</title><rect x="699.1" y="293" width="28.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="702.11" y="303.5" >g..</text>
</g>
<g >
<title>bytes.IndexByte (1 samples, 0.04%)</title><rect x="160.0" y="533" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="162.96" y="543.5" ></text>
</g>
<g >
<title>runtime.stackcacherefill (3 samples, 0.13%)</title><rect x="831.4" y="277" width="1.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="834.43" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="794.1" y="357" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="797.07" y="367.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue1 (1 samples, 0.04%)</title><rect x="43.2" y="357" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="46.21" y="367.5" ></text>
</g>
<g >
<title>strings.IndexByte (2 samples, 0.09%)</title><rect x="133.5" y="533" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="136.50" y="543.5" ></text>
</g>
<g >
<title>runtime.goready (6 samples, 0.26%)</title><rect x="385.2" y="517" width="3.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="388.17" y="527.5" ></text>
</g>
<g >
<title>runtime.futex (16 samples, 0.70%)</title><rect x="1086.2" y="469" width="8.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1089.22" y="479.5" ></text>
</g>
<g >
<title>net/netip.appendDecimal (1 samples, 0.04%)</title><rect x="923.3" y="485" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="926.28" y="495.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).queue (1 samples, 0.04%)</title><rect x="447.4" y="245" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="450.44" y="255.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Bool).Load (3 samples, 0.13%)</title><rect x="1183.3" y="565" width="1.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1186.25" y="575.5" ></text>
</g>
<g >
<title>syscall.setsockopt (7 samples, 0.31%)</title><rect x="80.6" y="485" width="3.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="83.57" y="495.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="984.5" y="565" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="987.51" y="575.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.04%)</title><rect x="833.0" y="229" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="835.99" y="239.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (1 samples, 0.04%)</title><rect x="860.0" y="325" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="862.97" y="335.5" ></text>
</g>
<g >
<title>time.Time.Format (9 samples, 0.40%)</title><rect x="951.3" y="517" width="4.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="954.30" y="527.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (2 samples, 0.09%)</title><rect x="412.7" y="341" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="415.67" y="351.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int64).Load (2 samples, 0.09%)</title><rect x="1168.7" y="533" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1171.72" y="543.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="127.8" y="501" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="130.79" y="511.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="1185.3" y="581" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1188.33" y="591.5" ></text>
</g>
<g >
<title>runtime.gostringnocopy (1 samples, 0.04%)</title><rect x="262.2" y="501" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="265.19" y="511.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (1 samples, 0.04%)</title><rect x="108.6" y="565" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="111.59" y="575.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast64ptr (2 samples, 0.09%)</title><rect x="85.8" y="533" width="1.0" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="88.76" y="543.5" ></text>
</g>
<g >
<title>runtime.makemap (1 samples, 0.04%)</title><rect x="164.6" y="549" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="167.64" y="559.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="94.1" y="565" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="97.06" y="575.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).SendBind (7 samples, 0.31%)</title><rect x="730.2" y="325" width="3.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="733.25" y="335.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readContinuedLineSlice (4 samples, 0.18%)</title><rect x="158.9" y="549" width="2.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="161.93" y="559.5" ></text>
</g>
<g >
<title>syscall.SetsockoptInt (12 samples, 0.53%)</title><rect x="73.8" y="501" width="6.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="76.83" y="511.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="938.3" y="389" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="941.33" y="399.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Load (1 samples, 0.04%)</title><rect x="1184.8" y="565" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1187.81" y="575.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.04%)</title><rect x="551.2" y="245" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="554.22" y="255.5" ></text>
</g>
<g >
<title>net.(*conn).Write (135 samples, 5.94%)</title><rect x="628.0" y="277" width="70.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="631.02" y="287.5" >net.(*c..</text>
</g>
<g >
<title>runtime.(*bucket).mp (1 samples, 0.04%)</title><rect x="984.0" y="533" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="986.99" y="543.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.(*ReactionsStorage).GetEntityReactionsCount (353 samples, 15.52%)</title><rect x="422.5" y="421" width="183.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="425.53" y="431.5" >github.com/Deimvis/reac..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="125.2" y="549" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="128.20" y="559.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="580.8" y="293" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="583.80" y="303.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (1 samples, 0.04%)</title><rect x="127.3" y="533" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="130.27" y="543.5" ></text>
</g>
<g >
<title>time.now (5 samples, 0.22%)</title><rect x="1187.4" y="613" width="2.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1190.41" y="623.5" ></text>
</g>
<g >
<title>runtime.read (1 samples, 0.04%)</title><rect x="1048.3" y="533" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1051.34" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="959.6" y="469" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="962.60" y="479.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn/internal/bgreader.(*BGReader).Read (43 samples, 1.89%)</title><rect x="553.8" y="229" width="22.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="556.82" y="239.5" >g..</text>
</g>
<g >
<title>runtime.mapdelete_faststr (2 samples, 0.09%)</title><rect x="276.2" y="517" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="279.20" y="527.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="743.2" y="309" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="746.22" y="319.5" ></text>
</g>
<g >
<title>runtime.schedule (61 samples, 2.68%)</title><rect x="1033.8" y="581" width="31.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1036.81" y="591.5" >ru..</text>
</g>
<g >
<title>sync.(*Pool).getSlow (2 samples, 0.09%)</title><rect x="393.5" y="565" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="396.47" y="575.5" ></text>
</g>
<g >
<title>net/http.requestBodyRemains (1 samples, 0.04%)</title><rect x="395.5" y="597" width="0.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="398.55" y="607.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="139.7" y="485" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="142.73" y="495.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.04%)</title><rect x="121.0" y="421" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="124.05" y="431.5" ></text>
</g>
<g >
<title>time.(*Timer).Reset (1 samples, 0.04%)</title><rect x="840.3" y="277" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="843.26" y="287.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (2 samples, 0.09%)</title><rect x="168.8" y="517" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="171.79" y="527.5" ></text>
</g>
<g >
<title>syscall.Write (3 samples, 0.13%)</title><rect x="838.7" y="229" width="1.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="841.70" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.13%)</title><rect x="963.2" y="597" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="966.24" y="607.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.04%)</title><rect x="103.4" y="533" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="106.40" y="543.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (2 samples, 0.09%)</title><rect x="260.6" y="581" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="263.63" y="591.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*MetricVec).hashLabelValues (3 samples, 0.13%)</title><rect x="879.2" y="437" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="882.17" y="447.5" ></text>
</g>
<g >
<title>runtime.adjustpointers (2 samples, 0.09%)</title><rect x="826.2" y="277" width="1.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="829.24" y="287.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="983.5" y="565" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="986.47" y="575.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="751.0" y="293" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="754.00" y="303.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.04%)</title><rect x="746.3" y="325" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="749.33" y="335.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Receive (1 samples, 0.04%)</title><rect x="843.9" y="293" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="846.89" y="303.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.04%)</title><rect x="43.2" y="437" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="46.21" y="447.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (20 samples, 0.88%)</title><rect x="815.3" y="277" width="10.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="818.35" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (22 samples, 0.97%)</title><rect x="847.0" y="357" width="11.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="850.00" y="367.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (1 samples, 0.04%)</title><rect x="794.1" y="245" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="797.07" y="255.5" ></text>
</g>
<g >
<title>syscall.Write (2 samples, 0.09%)</title><rect x="840.8" y="229" width="1.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="843.77" y="239.5" ></text>
</g>
<g >
<title>time.(*Timer).Reset (9 samples, 0.40%)</title><rect x="622.3" y="293" width="4.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="625.31" y="303.5" ></text>
</g>
<g >
<title>container/list.(*List).remove (1 samples, 0.04%)</title><rect x="768.6" y="277" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="771.65" y="287.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="414.2" y="421" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="417.23" y="431.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTRIO (1 samples, 0.04%)</title><rect x="706.4" y="181" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="709.38" y="191.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.09%)</title><rect x="937.8" y="421" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="940.81" y="431.5" ></text>
</g>
<g >
<title>syscall.read (16 samples, 0.70%)</title><rect x="144.9" y="437" width="8.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="147.92" y="447.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uintptr).CompareAndSwap (1 samples, 0.04%)</title><rect x="1048.9" y="533" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1051.86" y="543.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="892.1" y="453" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="895.15" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (71 samples, 3.12%)</title><rect x="797.2" y="357" width="36.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="800.19" y="367.5" >run..</text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.04%)</title><rect x="986.1" y="453" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="989.07" y="463.5" ></text>
</g>
<g >
<title>syscall.write (4 samples, 0.18%)</title><rect x="835.1" y="229" width="2.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="838.07" y="239.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (42 samples, 1.85%)</title><rect x="898.9" y="453" width="21.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="901.89" y="463.5" >s..</text>
</g>
<g >
<title>time.Since (1 samples, 0.04%)</title><rect x="416.8" y="453" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="419.82" y="463.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Flush (3 samples, 0.13%)</title><rect x="838.7" y="277" width="1.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="841.70" y="287.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (43 samples, 1.89%)</title><rect x="553.8" y="245" width="22.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="556.82" y="255.5" >i..</text>
</g>
<g >
<title>runtime.startm (4 samples, 0.18%)</title><rect x="265.3" y="517" width="2.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="268.30" y="527.5" ></text>
</g>
<g >
<title>runtime.goready (16 samples, 0.70%)</title><rect x="772.3" y="261" width="8.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="775.28" y="271.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*baseRows).Close (9 samples, 0.40%)</title><rect x="758.8" y="341" width="4.7" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="761.79" y="351.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).initQueryCache (85 samples, 3.74%)</title><rect x="789.9" y="421" width="44.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="792.92" y="431.5" >gith..</text>
</g>
<g >
<title>net/http.(*Server).trackConn (4 samples, 0.18%)</title><rect x="85.2" y="549" width="2.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="88.24" y="559.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (2 samples, 0.09%)</title><rect x="412.7" y="325" width="1.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="415.67" y="335.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.04%)</title><rect x="884.4" y="309" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="887.36" y="319.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (1 samples, 0.04%)</title><rect x="160.5" y="533" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="163.48" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/puddle/v2.(*Pool[go.shape.*uint8]).Acquire (16 samples, 0.70%)</title><rect x="748.4" y="357" width="8.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="751.41" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="158.4" y="517" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="161.41" y="527.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="980.4" y="549" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="983.36" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.04%)</title><rect x="978.3" y="533" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="981.28" y="543.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.(*ConfigurationStorage).GetNamespace (3 samples, 0.13%)</title><rect x="842.8" y="437" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="845.85" y="447.5" ></text>
</g>
<g >
<title>runtime.execute (4 samples, 0.18%)</title><rect x="1073.2" y="565" width="2.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1076.25" y="575.5" ></text>
</g>
<g >
<title>runtime.sellock (1 samples, 0.04%)</title><rect x="755.2" y="293" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="758.15" y="303.5" ></text>
</g>
<g >
<title>time.Time.Date (2 samples, 0.09%)</title><rect x="280.9" y="533" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="283.87" y="543.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.09%)</title><rect x="15.2" y="357" width="1.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="18.19" y="367.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).execSimpleProtocol (5 samples, 0.22%)</title><rect x="834.5" y="341" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="837.55" y="351.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Name (1 samples, 0.04%)</title><rect x="844.4" y="277" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="847.41" y="287.5" ></text>
</g>
<g >
<title>runtime.write (1 samples, 0.04%)</title><rect x="1055.6" y="533" width="0.5" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1058.60" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="139.7" y="517" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="142.73" y="527.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.04%)</title><rect x="714.7" y="117" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="717.68" y="127.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.04%)</title><rect x="705.9" y="117" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="708.86" y="127.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*histogram).findBucket (1 samples, 0.04%)</title><rect x="426.7" y="293" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="429.68" y="303.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="873.5" y="357" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="876.47" y="367.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).buildIndex (1 samples, 0.04%)</title><rect x="986.1" y="517" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="989.07" y="527.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).findObject (1 samples, 0.04%)</title><rect x="986.6" y="517" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="989.59" y="527.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.04%)</title><rect x="158.4" y="485" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="161.41" y="495.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.constrainLabelValues (1 samples, 0.04%)</title><rect x="881.8" y="437" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="884.77" y="447.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.04%)</title><rect x="402.8" y="405" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="405.81" y="415.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (2 samples, 0.09%)</title><rect x="132.5" y="533" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="135.46" y="543.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*metricMap).getOrCreateMetricWithLabelValues (1 samples, 0.04%)</title><rect x="408.5" y="405" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="411.52" y="415.5" ></text>
</g>
<g >
<title>encoding/json.newEncodeState (4 samples, 0.18%)</title><rect x="858.4" y="373" width="2.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="861.42" y="383.5" ></text>
</g>
<g >
<title>runtime.readyWithTime.goready.func1 (1 samples, 0.04%)</title><rect x="980.4" y="533" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="983.36" y="543.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (2 samples, 0.09%)</title><rect x="980.9" y="501" width="1.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="983.88" y="511.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popTail (1 samples, 0.04%)</title><rect x="394.0" y="533" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="396.99" y="543.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (1 samples, 0.04%)</title><rect x="451.1" y="261" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="454.07" y="271.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.09%)</title><rect x="947.7" y="501" width="1.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="950.67" y="511.5" ></text>
</g>
<g >
<title>runtime.isSystemGoroutine (1 samples, 0.04%)</title><rect x="1033.3" y="581" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1036.29" y="591.5" ></text>
</g>
<g >
<title>net/http.Header.sortedKeyValues (3 samples, 0.13%)</title><rect x="284.0" y="517" width="1.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="286.98" y="527.5" ></text>
</g>
<g >
<title>time.Time.AppendFormat (8 samples, 0.35%)</title><rect x="951.8" y="501" width="4.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="954.82" y="511.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (6 samples, 0.26%)</title><rect x="81.1" y="437" width="3.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="84.09" y="447.5" ></text>
</g>
<g >
<title>runtime.concatstrings (1 samples, 0.04%)</title><rect x="959.6" y="517" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="962.60" y="527.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).enterPotentialWriteReadDeadlock (11 samples, 0.48%)</title><rect x="457.8" y="309" width="5.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="460.82" y="319.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.04%)</title><rect x="1004.7" y="469" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1007.75" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.04%)</title><rect x="959.6" y="421" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="962.60" y="431.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).ExecPrepared (239 samples, 10.51%)</title><rect x="457.3" y="341" width="124.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="460.30" y="351.5" >github.com/Deim..</text>
</g>
<g >
<title>runtime.(*moduledata).textAddr (1 samples, 0.04%)</title><rect x="990.2" y="453" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="993.22" y="463.5" ></text>
</g>
<g >
<title>reflect.resolveNameOff (1 samples, 0.04%)</title><rect x="844.4" y="245" width="0.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="847.41" y="255.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (154 samples, 6.77%)</title><rect x="468.7" y="181" width="79.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="471.72" y="191.5" >runtime/i..</text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.04%)</title><rect x="177.6" y="453" width="0.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="180.61" y="463.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).Done (4 samples, 0.18%)</title><rect x="125.7" y="549" width="2.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="128.72" y="559.5" ></text>
</g>
<g >
<title>runtime.startm (18 samples, 0.79%)</title><rect x="1172.4" y="533" width="9.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1175.36" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Pool).Query (297 samples, 13.06%)</title><rect x="449.0" y="389" width="154.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="452.00" y="399.5" >github.com/Deimvis/..</text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="61.9" y="485" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="64.89" y="495.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (53 samples, 2.33%)</title><rect x="14.7" y="453" width="27.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="17.67" y="463.5" >s..</text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.04%)</title><rect x="959.6" y="389" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="962.60" y="399.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.04%)</title><rect x="986.1" y="469" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="989.07" y="479.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.09%)</title><rect x="154.8" y="565" width="1.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="157.78" y="575.5" ></text>
</g>
<g >
<title>runtime.netpollcheckerr (1 samples, 0.04%)</title><rect x="971.5" y="533" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="974.54" y="543.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (917 samples, 40.33%)</title><rect x="403.3" y="485" width="475.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="406.33" y="495.5" >github.com/gin-gonic/gin.(*Context).Next</text>
</g>
<g >
<title>fmt.(*pp).printArg (35 samples, 1.54%)</title><rect x="928.5" y="485" width="18.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="931.47" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (4 samples, 0.18%)</title><rect x="100.8" y="549" width="2.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="103.81" y="559.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetsockoptInt (1 samples, 0.04%)</title><rect x="80.1" y="501" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="83.05" y="511.5" ></text>
</g>
<g >
<title>runtime.findnull (1 samples, 0.04%)</title><rect x="1031.7" y="549" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1034.73" y="559.5" ></text>
</g>
<g >
<title>strconv.formatBits (3 samples, 0.13%)</title><rect x="877.6" y="437" width="1.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="880.62" y="447.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Receive (2 samples, 0.09%)</title><rect x="837.1" y="245" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="840.14" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="124.7" y="549" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="127.68" y="559.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).decref (1 samples, 0.04%)</title><rect x="73.3" y="485" width="0.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="76.31" y="495.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_fast32 (1 samples, 0.04%)</title><rect x="455.7" y="245" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="458.74" y="255.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (1 samples, 0.04%)</title><rect x="587.5" y="341" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="590.55" y="351.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (12 samples, 0.53%)</title><rect x="73.8" y="469" width="6.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="76.83" y="479.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="165.7" y="517" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="168.67" y="527.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.04%)</title><rect x="1028.6" y="565" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1031.62" y="575.5" ></text>
</g>
<g >
<title>runtime.resumeG (1 samples, 0.04%)</title><rect x="987.6" y="517" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="990.63" y="527.5" ></text>
</g>
<g >
<title>runtime.gostringnocopy (1 samples, 0.04%)</title><rect x="1031.7" y="565" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1034.73" y="575.5" ></text>
</g>
<g >
<title>runtime.write (3 samples, 0.13%)</title><rect x="624.4" y="213" width="1.5" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="627.39" y="223.5" ></text>
</g>
<g >
<title>runtime.gostringnocopy (2 samples, 0.09%)</title><rect x="402.3" y="437" width="1.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="405.30" y="447.5" ></text>
</g>
<g >
<title>runtime.futex (32 samples, 1.41%)</title><rect x="1096.1" y="501" width="16.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1099.08" y="511.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*connResource).getPoolRows (1 samples, 0.04%)</title><rect x="603.1" y="389" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="606.11" y="399.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.04%)</title><rect x="611.4" y="277" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="614.42" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (2 samples, 0.09%)</title><rect x="844.4" y="309" width="1.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="847.41" y="319.5" ></text>
</g>
<g >
<title>runtime.madvise (2 samples, 0.09%)</title><rect x="980.9" y="485" width="1.0" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="983.88" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Pool).Acquire (16 samples, 0.70%)</title><rect x="748.4" y="373" width="8.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="751.41" y="383.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).receiveMessage (1 samples, 0.04%)</title><rect x="841.8" y="293" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="844.81" y="303.5" ></text>
</g>
<g >
<title>syscall.Syscall (46 samples, 2.02%)</title><rect x="896.8" y="469" width="23.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="899.82" y="479.5" >s..</text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Bind).Encode (3 samples, 0.13%)</title><rect x="579.8" y="309" width="1.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="582.76" y="319.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).ShouldBindWith (3 samples, 0.13%)</title><rect x="844.4" y="437" width="1.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="847.41" y="447.5" ></text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (181 samples, 7.96%)</title><rect x="289.2" y="565" width="93.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="292.17" y="575.5" >net/http.ch..</text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.04%)</title><rect x="961.2" y="565" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="964.16" y="575.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.04%)</title><rect x="160.0" y="517" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="162.96" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.13%)</title><rect x="977.8" y="565" width="1.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="980.77" y="575.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*dbTx).Exec (5 samples, 0.22%)</title><rect x="840.3" y="389" width="2.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="843.26" y="399.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (1 samples, 0.04%)</title><rect x="895.3" y="485" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="898.26" y="495.5" ></text>
</g>
<g >
<title>bufio.(*Writer).WriteString (1 samples, 0.04%)</title><rect x="274.1" y="517" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="277.12" y="527.5" ></text>
</g>
<g >
<title>runtime.gcDrain (80 samples, 3.52%)</title><rect x="985.0" y="565" width="41.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="988.03" y="575.5" >run..</text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (9 samples, 0.40%)</title><rect x="68.1" y="437" width="4.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="71.12" y="447.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).exec (5 samples, 0.22%)</title><rect x="834.5" y="357" width="2.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="837.55" y="367.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*histogramCounts).observe (3 samples, 0.13%)</title><rect x="410.1" y="421" width="1.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="413.08" y="431.5" ></text>
</g>
<g >
<title>time.when (1 samples, 0.04%)</title><rect x="463.0" y="277" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="466.01" y="287.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.(*ReactionsStorage).GetUniqEntityUserReactions (352 samples, 15.48%)</title><rect x="605.7" y="421" width="182.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="608.71" y="431.5" >github.com/Deimvis/reac..</text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgtype.(*Map).Encode (4 samples, 0.18%)</title><rect x="455.2" y="277" width="2.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="458.22" y="287.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (18 samples, 0.79%)</title><rect x="1172.4" y="501" width="9.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1175.36" y="511.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/utils.(*SQLTracer).TraceQueryStart (9 samples, 0.40%)</title><rect x="581.3" y="341" width="4.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="584.32" y="351.5" ></text>
</g>
<g >
<title>golang.org/x/sync/semaphore.(*Weighted).TryAcquire (3 samples, 0.13%)</title><rect x="599.0" y="325" width="1.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="601.96" y="335.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*SugaredLogger).log (1 samples, 0.04%)</title><rect x="842.3" y="341" width="0.5" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="845.33" y="351.5" ></text>
</g>
<g >
<title>strings.(*byteReplacer).Replace (1 samples, 0.04%)</title><rect x="286.1" y="501" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="289.06" y="511.5" ></text>
</g>
<g >
<title>runtime.newproc1 (5 samples, 0.22%)</title><rect x="88.9" y="517" width="2.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="91.87" y="527.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="792.5" y="341" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="795.52" y="351.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="65.5" y="485" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="68.52" y="495.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.09%)</title><rect x="613.0" y="325" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="615.97" y="335.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.09%)</title><rect x="766.1" y="309" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="769.05" y="319.5" ></text>
</g>
<g >
<title>runtime.doaddtimer (1 samples, 0.04%)</title><rect x="459.4" y="245" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="462.38" y="255.5" ></text>
</g>
<g >
<title>runtime.stackcacherelease (2 samples, 0.09%)</title><rect x="1032.3" y="549" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1035.25" y="559.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (1 samples, 0.04%)</title><rect x="981.9" y="501" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="984.92" y="511.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (3 samples, 0.13%)</title><rect x="727.7" y="261" width="1.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="730.65" y="271.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.04%)</title><rect x="960.1" y="533" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="963.12" y="543.5" ></text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (3 samples, 0.13%)</title><rect x="447.4" y="293" width="1.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="450.44" y="303.5" ></text>
</g>
<g >
<title>runtime.netpoll (3 samples, 0.13%)</title><rect x="1006.3" y="533" width="1.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1009.31" y="543.5" ></text>
</g>
<g >
<title>net.IP.String (2 samples, 0.09%)</title><rect x="922.8" y="517" width="1.0" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="925.76" y="527.5" ></text>
</g>
<g >
<title>runtime.tracebackPCs (1 samples, 0.04%)</title><rect x="43.2" y="389" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="46.21" y="399.5" ></text>
</g>
<g >
<title>net/http.Header.has (1 samples, 0.04%)</title><rect x="288.1" y="549" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="291.14" y="559.5" ></text>
</g>
<g >
<title>runtime.(*pageCache).alloc (1 samples, 0.04%)</title><rect x="832.0" y="213" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="834.95" y="223.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popTail (2 samples, 0.09%)</title><rect x="132.5" y="501" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="135.46" y="511.5" ></text>
</g>
<g >
<title>runtime.modtimer (7 samples, 0.31%)</title><rect x="622.8" y="261" width="3.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="625.83" y="271.5" ></text>
</g>
<g >
<title>context.WithValue (10 samples, 0.44%)</title><rect x="736.5" y="325" width="5.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="739.47" y="335.5" ></text>
</g>
<g >
<title>net.(*netFD).addrFunc (1 samples, 0.04%)</title><rect x="47.9" y="533" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="50.88" y="543.5" ></text>
</g>
<g >
<title>net/http.parseRequestLine (2 samples, 0.09%)</title><rect x="133.5" y="565" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="136.50" y="575.5" ></text>
</g>
<g >
<title>runtime.growslice (3 samples, 0.13%)</title><rect x="883.8" y="453" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="886.84" y="463.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.09%)</title><rect x="1022.9" y="533" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1025.91" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).readUntilRowDescription (1 samples, 0.04%)</title><rect x="843.9" y="325" width="0.5" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="846.89" y="335.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*metricMap).getOrCreateMetricWithLabelValues (2 samples, 0.09%)</title><rect x="880.7" y="437" width="1.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="883.73" y="447.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.04%)</title><rect x="103.4" y="501" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="106.40" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.04%)</title><rect x="112.2" y="501" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="115.23" y="511.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.04%)</title><rect x="704.3" y="165" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="707.30" y="175.5" ></text>
</g>
<g >
<title>time.Now (3 samples, 0.13%)</title><rect x="415.3" y="453" width="1.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="418.27" y="463.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="594.8" y="229" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="597.81" y="239.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.09%)</title><rect x="1182.2" y="565" width="1.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1185.22" y="575.5" ></text>
</g>
<g >
<title>github.com/go-playground/validator/v10.(*Validate).StructCtx (1 samples, 0.04%)</title><rect x="845.4" y="341" width="0.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="848.44" y="351.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.04%)</title><rect x="48.9" y="469" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="51.92" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.13%)</title><rect x="786.3" y="373" width="1.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="789.29" y="383.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (2 samples, 0.09%)</title><rect x="856.3" y="293" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="859.34" y="303.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadMIMEHeader (30 samples, 1.32%)</title><rect x="155.8" y="581" width="15.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="158.81" y="591.5" ></text>
</g>
<g >
<title>runtime.netpollblock (2 samples, 0.09%)</title><rect x="969.5" y="517" width="1.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="972.46" y="527.5" ></text>
</g>
<g >
<title>net/textproto.validHeaderFieldByte (2 samples, 0.09%)</title><rect x="163.6" y="549" width="1.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="166.60" y="559.5" ></text>
</g>
<g >
<title>runtime.concatstring3 (1 samples, 0.04%)</title><rect x="959.6" y="533" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="962.60" y="543.5" ></text>
</g>
<g >
<title>runtime.getMCache (1 samples, 0.04%)</title><rect x="116.9" y="533" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="119.90" y="543.5" ></text>
</g>
<g >
<title>runtime.netpollBreak (3 samples, 0.13%)</title><rect x="624.4" y="229" width="1.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="627.39" y="239.5" ></text>
</g>
<g >
<title>encoding/binary.bigEndian.Uint32 (1 samples, 0.04%)</title><rect x="430.8" y="277" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="433.84" y="287.5" ></text>
</g>
<g >
<title>net/textproto.MIMEHeader.Get (4 samples, 0.18%)</title><rect x="281.9" y="533" width="2.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="284.91" y="543.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.04%)</title><rect x="782.1" y="261" width="0.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="785.14" y="271.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (80 samples, 3.52%)</title><rect x="985.0" y="581" width="41.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="988.03" y="591.5" >run..</text>
</g>
<g >
<title>runtime.stackpoolalloc (3 samples, 0.13%)</title><rect x="831.4" y="261" width="1.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="834.43" y="271.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (26 samples, 1.14%)</title><rect x="268.4" y="549" width="13.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="271.42" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="128.8" y="533" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="131.83" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.09%)</title><rect x="884.4" y="421" width="1.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="887.36" y="431.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*ExtendedQueryBuilder).appendParam (9 samples, 0.40%)</title><rect x="615.6" y="325" width="4.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="618.57" y="335.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.04%)</title><rect x="843.9" y="229" width="0.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="846.89" y="239.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (1 samples, 0.04%)</title><rect x="393.0" y="533" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="395.96" y="543.5" ></text>
</g>
<g >
<title>runtime.pcvalueCacheKey (1 samples, 0.04%)</title><rect x="811.7" y="261" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="814.72" y="271.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollSetDeadline (2 samples, 0.09%)</title><rect x="129.3" y="549" width="1.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="132.35" y="559.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.04%)</title><rect x="113.8" y="565" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="116.78" y="575.5" ></text>
</g>
<g >
<title>math.Float64frombits (1 samples, 0.04%)</title><rect x="885.4" y="485" width="0.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="888.40" y="495.5" ></text>
</g>
<g >
<title>sync.(*Cond).Wait (4 samples, 0.18%)</title><rect x="390.9" y="565" width="2.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="393.88" y="575.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (10 samples, 0.44%)</title><rect x="74.9" y="437" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="77.86" y="447.5" ></text>
</g>
<g >
<title>syscall.setsockopt (12 samples, 0.53%)</title><rect x="73.8" y="485" width="6.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="76.83" y="495.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.04%)</title><rect x="794.1" y="325" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="797.07" y="335.5" ></text>
</g>
<g >
<title>net.setNoDelay (8 samples, 0.35%)</title><rect x="80.1" y="517" width="4.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="83.05" y="527.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/binding.validate (1 samples, 0.04%)</title><rect x="845.4" y="405" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="848.44" y="415.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*Logger).Core (1 samples, 0.04%)</title><rect x="876.1" y="437" width="0.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="879.06" y="447.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (151 samples, 6.64%)</title><rect x="174.5" y="517" width="78.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="177.49" y="527.5" >internal/..</text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.04%)</title><rect x="875.5" y="357" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="878.54" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="112.2" y="469" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="115.23" y="479.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).run (2 samples, 0.09%)</title><rect x="980.9" y="597" width="1.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="983.88" y="607.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.04%)</title><rect x="413.2" y="293" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="416.19" y="303.5" ></text>
</g>
<g >
<title>reflect.Value.Field (2 samples, 0.09%)</title><rect x="853.2" y="293" width="1.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="856.23" y="303.5" ></text>
</g>
<g >
<title>runtime.mapdelete (2 samples, 0.09%)</title><rect x="107.6" y="549" width="1.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="110.55" y="559.5" ></text>
</g>
<g >
<title>runtime.stackalloc (4 samples, 0.18%)</title><rect x="831.4" y="293" width="2.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="834.43" y="303.5" ></text>
</g>
<g >
<title>context.WithValue (4 samples, 0.18%)</title><rect x="581.3" y="325" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="584.32" y="335.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Reset (1 samples, 0.04%)</title><rect x="124.2" y="581" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="127.16" y="591.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.04%)</title><rect x="844.9" y="245" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="847.93" y="255.5" ></text>
</g>
<g >
<title>runtime.pcvalue (11 samples, 0.48%)</title><rect x="820.0" y="245" width="5.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="823.02" y="255.5" ></text>
</g>
<g >
<title>runtime.notewakeup (8 samples, 0.35%)</title><rect x="559.0" y="69" width="4.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="562.01" y="79.5" ></text>
</g>
<g >
<title>net/http.Header.Clone (11 samples, 0.48%)</title><rect x="864.1" y="373" width="5.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="867.12" y="383.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (1 samples, 0.04%)</title><rect x="884.4" y="325" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="887.36" y="335.5" ></text>
</g>
<g >
<title>bufio.NewWriterSize (2 samples, 0.09%)</title><rect x="103.4" y="597" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="106.40" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mspan).specialFindSplicePoint (4 samples, 0.18%)</title><rect x="62.4" y="453" width="2.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="65.41" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.09%)</title><rect x="844.4" y="325" width="1.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="847.41" y="335.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.04%)</title><rect x="840.3" y="197" width="0.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="843.26" y="207.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).receiveMessage (1 samples, 0.04%)</title><rect x="759.3" y="293" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="762.31" y="303.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*responseWriter).Write (3 samples, 0.13%)</title><rect x="861.5" y="389" width="1.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="864.53" y="399.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.04%)</title><rect x="784.2" y="341" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="787.21" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="103.9" y="549" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="106.92" y="559.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).Read (1 samples, 0.04%)</title><rect x="841.8" y="325" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="844.81" y="335.5" ></text>
</g>
<g >
<title>runtime.getMCache (1 samples, 0.04%)</title><rect x="889.6" y="453" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="892.55" y="463.5" ></text>
</g>
<g >
<title>syscall.getsockname (4 samples, 0.18%)</title><rect x="45.8" y="501" width="2.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="48.80" y="511.5" ></text>
</g>
<g >
<title>net.sockaddrToTCP (4 samples, 0.18%)</title><rect x="42.2" y="517" width="2.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="45.17" y="527.5" ></text>
</g>
<g >
<title>time.Time.abs (2 samples, 0.09%)</title><rect x="280.9" y="501" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="283.87" y="511.5" ></text>
</g>
<g >
<title>time.Duration.String (1 samples, 0.04%)</title><rect x="946.1" y="453" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="949.11" y="463.5" ></text>
</g>
<g >
<title>runtime.step (5 samples, 0.22%)</title><rect x="992.3" y="453" width="2.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="995.30" y="463.5" ></text>
</g>
<g >
<title>runtime.stackpoolfree (1 samples, 0.04%)</title><rect x="1032.8" y="533" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1035.77" y="543.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/servers.NewHTTPServer.func1.1 (163 samples, 7.17%)</title><rect x="10.0" y="613" width="84.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >github.co..</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.09%)</title><rect x="15.2" y="405" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="18.19" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*Decoder).Decode (2 samples, 0.09%)</title><rect x="844.4" y="389" width="1.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="847.41" y="399.5" ></text>
</g>
<g >
<title>context.WithCancel.func1 (10 samples, 0.44%)</title><rect x="104.4" y="597" width="5.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="107.44" y="607.5" ></text>
</g>
<g >
<title>net/http.Header.Get (4 samples, 0.18%)</title><rect x="281.9" y="549" width="2.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="284.91" y="559.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Done (1 samples, 0.04%)</title><rect x="620.8" y="293" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="623.76" y="303.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.04%)</title><rect x="1028.6" y="581" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1031.62" y="591.5" ></text>
</g>
<g >
<title>runtime.systemstack (16 samples, 0.70%)</title><rect x="772.3" y="245" width="8.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="775.28" y="255.5" ></text>
</g>
<g >
<title>runtime.resolveNameOff (1 samples, 0.04%)</title><rect x="844.4" y="229" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="847.41" y="239.5" ></text>
</g>
<g >
<title>net.newTCPConn (36 samples, 1.58%)</title><rect x="66.6" y="533" width="18.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="69.56" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).Query (3 samples, 0.13%)</title><rect x="838.7" y="341" width="1.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="841.70" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="110.1" y="565" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="113.15" y="575.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).IsClosed (1 samples, 0.04%)</title><rect x="431.4" y="341" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="434.35" y="351.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.04%)</title><rect x="158.4" y="469" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="161.41" y="479.5" ></text>
</g>
<g >
<title>runtime.wakeNetPoller (4 samples, 0.18%)</title><rect x="624.4" y="245" width="2.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="627.39" y="255.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).readUntilRowDescription (55 samples, 2.42%)</title><rect x="548.6" y="309" width="28.6" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="551.63" y="319.5" >gi..</text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (887 samples, 39.01%)</title><rect x="417.3" y="469" width="460.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="420.34" y="479.5" >github.com/gin-gonic/gin.(*Context).Next</text>
</g>
<g >
<title>runtime.mProf_Flush (1 samples, 0.04%)</title><rect x="984.0" y="565" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="986.99" y="575.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgtype.(*Map).PlanEncode (2 samples, 0.09%)</title><rect x="455.2" y="261" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="458.22" y="271.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.04%)</title><rect x="950.3" y="469" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="953.26" y="479.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (3 samples, 0.13%)</title><rect x="1185.8" y="613" width="1.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1188.85" y="623.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*chunkReader).Next (51 samples, 2.24%)</title><rect x="700.7" y="261" width="26.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="703.67" y="271.5" >g..</text>
</g>
<g >
<title>time.Now (1 samples, 0.04%)</title><rect x="432.9" y="309" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="435.91" y="319.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/binding.jsonBinding.Bind (3 samples, 0.13%)</title><rect x="844.4" y="421" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="847.41" y="431.5" ></text>
</g>
<g >
<title>runtime.getMCache (1 samples, 0.04%)</title><rect x="84.2" y="501" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="87.20" y="511.5" ></text>
</g>
<g >
<title>runtime.getMCache (1 samples, 0.04%)</title><rect x="88.4" y="549" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="91.36" y="559.5" ></text>
</g>
<g >
<title>runtime.(*gList).pop (1 samples, 0.04%)</title><rect x="89.4" y="501" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="92.39" y="511.5" ></text>
</g>
<g >
<title>syscall.Read (1 samples, 0.04%)</title><rect x="834.5" y="165" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="837.55" y="175.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).flushWithPotentialWriteReadDeadlock (138 samples, 6.07%)</title><rect x="627.0" y="309" width="71.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="629.98" y="319.5" >github.c..</text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*chunkReader).Next (45 samples, 1.98%)</title><rect x="552.8" y="261" width="23.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="555.78" y="271.5" >g..</text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.04%)</title><rect x="1029.1" y="581" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1032.14" y="591.5" ></text>
</g>
<g >
<title>strconv.Itoa (3 samples, 0.13%)</title><rect x="877.6" y="469" width="1.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="880.62" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.04%)</title><rect x="94.1" y="517" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="97.06" y="527.5" ></text>
</g>
<g >
<title>context.removeChild (7 samples, 0.31%)</title><rect x="105.0" y="565" width="3.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="107.96" y="575.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*SugaredLogger).Debugw (3 samples, 0.13%)</title><rect x="744.8" y="341" width="1.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="747.78" y="351.5" ></text>
</g>
<g >
<title>syscall.Read (34 samples, 1.50%)</title><rect x="557.4" y="181" width="17.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="560.45" y="191.5" ></text>
</g>
<g >
<title>github.com/jackc/puddle/v2/internal/genstack.(*stack[go.shape.*uint8]).push (1 samples, 0.04%)</title><rect x="446.9" y="309" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="449.92" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="84.7" y="501" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="87.72" y="511.5" ></text>
</g>
<g >
<title>runtime.makemap_small (1 samples, 0.04%)</title><rect x="172.4" y="581" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="175.42" y="591.5" ></text>
</g>
<g >
<title>runtime.stackpoolalloc (2 samples, 0.09%)</title><rect x="89.9" y="437" width="1.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="92.91" y="447.5" ></text>
</g>
<g >
<title>time.Time.date (2 samples, 0.09%)</title><rect x="280.9" y="517" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="283.87" y="527.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (7 samples, 0.31%)</title><rect x="996.4" y="469" width="3.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="999.45" y="479.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (2 samples, 0.09%)</title><rect x="980.9" y="533" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="983.88" y="543.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (2 samples, 0.09%)</title><rect x="980.9" y="565" width="1.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="983.88" y="575.5" ></text>
</g>
<g >
<title>runtime.notewakeup (16 samples, 0.70%)</title><rect x="1086.2" y="501" width="8.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1089.22" y="511.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="261.2" y="549" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="264.15" y="559.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (4 samples, 0.18%)</title><rect x="835.1" y="181" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="838.07" y="191.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/servers.UsePrometheusMiddleware.func1 (5 samples, 0.22%)</title><rect x="403.9" y="453" width="2.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="406.85" y="463.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*connResource).getConn (2 samples, 0.09%)</title><rect x="601.6" y="373" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="604.56" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="868.3" y="325" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="871.28" y="335.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (16 samples, 0.70%)</title><rect x="1086.2" y="485" width="8.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1089.22" y="495.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="865.7" y="309" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="868.68" y="319.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (1 samples, 0.04%)</title><rect x="746.3" y="341" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="749.33" y="351.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Conn).Query (1 samples, 0.04%)</title><rect x="843.9" y="389" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="846.89" y="399.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareRead (1 samples, 0.04%)</title><rect x="704.3" y="181" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="707.30" y="191.5" ></text>
</g>
<g >
<title>net/http.(*connReader).unlock (1 samples, 0.04%)</title><rect x="390.4" y="565" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="393.36" y="575.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/render.writeContentType (8 samples, 0.35%)</title><rect x="869.8" y="389" width="4.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="872.83" y="399.5" ></text>
</g>
<g >
<title>runtime.convTslice (1 samples, 0.04%)</title><rect x="583.9" y="325" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="586.91" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (1 samples, 0.04%)</title><rect x="112.2" y="405" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="115.23" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (1 samples, 0.04%)</title><rect x="112.2" y="421" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="115.23" y="431.5" ></text>
</g>
<g >
<title>runtime.gfget.func2 (2 samples, 0.09%)</title><rect x="89.9" y="485" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="92.91" y="495.5" ></text>
</g>
<g >
<title>net/netip.Addr.string4 (2 samples, 0.09%)</title><rect x="922.8" y="501" width="1.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="925.76" y="511.5" ></text>
</g>
<g >
<title>net.IP.String (8 samples, 0.35%)</title><rect x="118.5" y="581" width="4.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="121.45" y="591.5" ></text>
</g>
<g >
<title>net/http.(*conn).setState (4 samples, 0.18%)</title><rect x="258.0" y="581" width="2.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="261.04" y="591.5" ></text>
</g>
<g >
<title>runtime.typedslicecopy (1 samples, 0.04%)</title><rect x="446.9" y="293" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="449.92" y="303.5" ></text>
</g>
<g >
<title>runtime.mPark (35 samples, 1.54%)</title><rect x="1094.5" y="549" width="18.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1097.52" y="559.5" ></text>
</g>
<g >
<title>runtime.efaceeq (2 samples, 0.09%)</title><rect x="760.9" y="293" width="1.0" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="763.86" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="103.4" y="565" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="106.40" y="575.5" ></text>
</g>
<g >
<title>net/http.(*Server).ListenAndServe (163 samples, 7.17%)</title><rect x="10.0" y="597" width="84.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >net/http...</text>
</g>
<g >
<title>unicode/utf8.RuneCountInString (1 samples, 0.04%)</title><rect x="944.6" y="405" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="947.56" y="415.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (1 samples, 0.04%)</title><rect x="426.2" y="309" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="429.17" y="319.5" ></text>
</g>
<g >
<title>runtime.casfrom_Gscanstatus (1 samples, 0.04%)</title><rect x="987.6" y="501" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="990.63" y="511.5" ></text>
</g>
<g >
<title>runtime.stealWork (11 samples, 0.48%)</title><rect x="1056.1" y="549" width="5.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1059.12" y="559.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.04%)</title><rect x="144.9" y="405" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="147.92" y="415.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.09%)</title><rect x="15.2" y="373" width="1.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="18.19" y="383.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.04%)</title><rect x="257.0" y="533" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="260.00" y="543.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.04%)</title><rect x="844.4" y="293" width="0.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="847.41" y="303.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).receiveMessage (4 samples, 0.18%)</title><rect x="727.1" y="293" width="2.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="730.13" y="303.5" ></text>
</g>
<g >
<title>net/http.(*conn).setState (6 samples, 0.26%)</title><rect x="85.2" y="565" width="3.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="88.24" y="575.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.04%)</title><rect x="1031.7" y="533" width="0.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1034.73" y="543.5" ></text>
</g>
<g >
<title>runtime.gfget (2 samples, 0.09%)</title><rect x="89.9" y="501" width="1.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="92.91" y="511.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.write (1 samples, 0.04%)</title><rect x="582.9" y="261" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="585.88" y="271.5" ></text>
</g>
<g >
<title>syscall.read (39 samples, 1.72%)</title><rect x="706.9" y="165" width="20.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="709.90" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="1063.4" y="549" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1066.39" y="559.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.04%)</title><rect x="961.2" y="549" width="0.5" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="964.16" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="963.8" y="565" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="966.76" y="575.5" ></text>
</g>
<g >
<title>runtime.findfunc (2 samples, 0.09%)</title><rect x="805.0" y="277" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="807.97" y="287.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).ExecPrepared (1 samples, 0.04%)</title><rect x="843.9" y="357" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="846.89" y="367.5" ></text>
</g>
<g >
<title>runtime.read (2 samples, 0.09%)</title><rect x="1121.0" y="533" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1123.99" y="543.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.22%)</title><rect x="253.9" y="517" width="2.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="256.89" y="527.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.09%)</title><rect x="1182.2" y="549" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1185.22" y="559.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.04%)</title><rect x="868.3" y="277" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="871.28" y="287.5" ></text>
</g>
<g >
<title>runtime.checkTimers (2 samples, 0.09%)</title><rect x="1057.2" y="533" width="1.0" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1060.16" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/puddle/v2.(*Pool[go.shape.*uint8]).tryAcquireIdleResource (1 samples, 0.04%)</title><rect x="592.2" y="325" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="595.22" y="335.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).peekMessage (52 samples, 2.29%)</title><rect x="549.1" y="293" width="27.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="552.15" y="303.5" >g..</text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Pool).Query (1 samples, 0.04%)</title><rect x="843.9" y="405" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="846.89" y="415.5" ></text>
</g>
<g >
<title>runtime.injectglist.func1 (16 samples, 0.70%)</title><rect x="1086.2" y="533" width="8.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1089.22" y="543.5" ></text>
</g>
<g >
<title>syscall.Syscall (132 samples, 5.80%)</title><rect x="629.6" y="213" width="68.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="632.58" y="223.5" >syscall..</text>
</g>
<g >
<title>bytes.(*Buffer).WriteString (1 samples, 0.04%)</title><rect x="852.2" y="293" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="855.19" y="303.5" ></text>
</g>
<g >
<title>strings.(*Replacer).Replace (1 samples, 0.04%)</title><rect x="286.1" y="517" width="0.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="289.06" y="527.5" ></text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (1 samples, 0.04%)</title><rect x="601.0" y="309" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="604.04" y="319.5" ></text>
</g>
<g >
<title>gogo (1 samples, 0.04%)</title><rect x="94.6" y="613" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="97.58" y="623.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*dbTx).Exec (2 samples, 0.09%)</title><rect x="837.1" y="373" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="840.14" y="383.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (1 samples, 0.04%)</title><rect x="703.8" y="149" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="706.78" y="159.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (1 samples, 0.04%)</title><rect x="699.6" y="245" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="702.63" y="255.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (2 samples, 0.09%)</title><rect x="563.2" y="133" width="1.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="566.16" y="143.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.04%)</title><rect x="123.6" y="581" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="126.64" y="591.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.09%)</title><rect x="103.4" y="581" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="106.40" y="591.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="114.3" y="565" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="117.30" y="575.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="116.4" y="549" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="119.38" y="559.5" ></text>
</g>
<g >
<title>runtime.findnull (2 samples, 0.09%)</title><rect x="402.3" y="421" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="405.30" y="431.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.04%)</title><rect x="794.1" y="229" width="0.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="797.07" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (4 samples, 0.18%)</title><rect x="167.7" y="549" width="2.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="170.75" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.04%)</title><rect x="94.1" y="501" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="97.06" y="511.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*chunkReader).Next (2 samples, 0.09%)</title><rect x="837.1" y="229" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="840.14" y="239.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_fast32 (1 samples, 0.04%)</title><rect x="617.6" y="245" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="620.64" y="255.5" ></text>
</g>
<g >
<title>aeshashbody (2 samples, 0.09%)</title><rect x="166.7" y="533" width="1.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="169.71" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgtype.(*wrapPtrMultiDimSliceScanPlan).Scan (1 samples, 0.04%)</title><rect x="842.8" y="309" width="0.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="845.85" y="319.5" ></text>
</g>
<g >
<title>syscall.RawSyscall (4 samples, 0.18%)</title><rect x="45.8" y="485" width="2.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="48.80" y="495.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (20 samples, 0.88%)</title><rect x="995.4" y="501" width="10.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="998.41" y="511.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.04%)</title><rect x="451.6" y="325" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="454.59" y="335.5" ></text>
</g>
<g >
<title>syscall.Read (16 samples, 0.70%)</title><rect x="144.9" y="453" width="8.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="147.92" y="463.5" ></text>
</g>
<g >
<title>net/netip.appendDecimal (1 samples, 0.04%)</title><rect x="118.5" y="549" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="121.45" y="559.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.04%)</title><rect x="262.2" y="469" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="265.19" y="479.5" ></text>
</g>
<g >
<title>runtime.modtimer (8 samples, 0.35%)</title><rect x="458.3" y="261" width="4.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="461.34" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (3 samples, 0.13%)</title><rect x="890.6" y="437" width="1.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="893.59" y="447.5" ></text>
</g>
<g >
<title>runtime.funcInfo.entry (1 samples, 0.04%)</title><rect x="819.5" y="245" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="822.50" y="255.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.09%)</title><rect x="784.7" y="373" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="787.73" y="383.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (19 samples, 0.84%)</title><rect x="143.4" y="469" width="9.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="146.36" y="479.5" ></text>
</g>
<g >
<title>runtime.wakep (5 samples, 0.22%)</title><rect x="264.8" y="533" width="2.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="267.78" y="543.5" ></text>
</g>
<g >
<title>net/textproto.readMIMEHeader (28 samples, 1.23%)</title><rect x="155.8" y="565" width="14.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="158.81" y="575.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Reset (1 samples, 0.04%)</title><rect x="98.7" y="597" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="101.73" y="607.5" ></text>
</g>
<g >
<title>strconv.IsPrint (3 samples, 0.13%)</title><rect x="941.4" y="405" width="1.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="944.44" y="415.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="61.4" y="469" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="64.37" y="479.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.EpollWait (57 samples, 2.51%)</title><rect x="1122.0" y="533" width="29.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1125.02" y="543.5" >ru..</text>
</g>
<g >
<title>github.com/gin-gonic/gin.glob..func1 (62 samples, 2.73%)</title><rect x="923.8" y="533" width="32.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="926.80" y="543.5" >gi..</text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Receive (3 samples, 0.13%)</title><rect x="763.5" y="277" width="1.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="766.46" y="287.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (155 samples, 6.82%)</title><rect x="468.2" y="197" width="80.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="471.20" y="207.5" >syscall.R..</text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.09%)</title><rect x="44.8" y="485" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="47.77" y="495.5" ></text>
</g>
<g >
<title>runtime.convTstring (3 samples, 0.13%)</title><rect x="584.4" y="325" width="1.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="587.43" y="335.5" ></text>
</g>
<g >
<title>net.(*conn).Write (3 samples, 0.13%)</title><rect x="838.7" y="261" width="1.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="841.70" y="271.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="1185.3" y="565" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1188.33" y="575.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.04%)</title><rect x="794.1" y="213" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="797.07" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.09%)</title><rect x="791.5" y="341" width="1.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="794.48" y="351.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.04%)</title><rect x="713.6" y="37" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="716.64" y="47.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (1 samples, 0.04%)</title><rect x="13.1" y="485" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.11" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).readUntilRowDescription (2 samples, 0.09%)</title><rect x="837.1" y="277" width="1.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="840.14" y="287.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*chunkReader).Next (1 samples, 0.04%)</title><rect x="834.5" y="245" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="837.55" y="255.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.04%)</title><rect x="844.9" y="229" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="847.93" y="239.5" ></text>
</g>
<g >
<title>runtime.stackalloc (2 samples, 0.09%)</title><rect x="89.9" y="469" width="1.0" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="92.91" y="479.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollSetDeadline (1 samples, 0.04%)</title><rect x="260.6" y="549" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="263.63" y="559.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="169.8" y="533" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="172.82" y="543.5" ></text>
</g>
<g >
<title>runtime.wakep (4 samples, 0.18%)</title><rect x="386.2" y="453" width="2.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="389.21" y="463.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (4 samples, 0.18%)</title><rect x="835.1" y="197" width="2.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="838.07" y="207.5" ></text>
</g>
<g >
<title>runtime.addb (1 samples, 0.04%)</title><rect x="825.7" y="277" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="828.73" y="287.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadSlice (22 samples, 0.97%)</title><rect x="143.4" y="533" width="11.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="146.36" y="543.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (11 samples, 0.48%)</title><rect x="806.5" y="277" width="5.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="809.53" y="287.5" ></text>
</g>
<g >
<title>runtime.convT (1 samples, 0.04%)</title><rect x="583.4" y="325" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="586.39" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.13%)</title><rect x="109.6" y="581" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="112.63" y="591.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*MetricVec).GetMetricWithLabelValues (6 samples, 0.26%)</title><rect x="879.2" y="453" width="3.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="882.17" y="463.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (12 samples, 0.53%)</title><rect x="988.7" y="501" width="6.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="991.66" y="511.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.04%)</title><rect x="882.3" y="421" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="885.29" y="431.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).Exec (4 samples, 0.18%)</title><rect x="835.1" y="325" width="2.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="838.07" y="335.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*namedStructRowScanner).ScanRow (1 samples, 0.04%)</title><rect x="423.1" y="325" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="426.05" y="335.5" ></text>
</g>
<g >
<title>runtime.closechan.goready.func1 (16 samples, 0.70%)</title><rect x="772.3" y="229" width="8.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="775.28" y="239.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (1,092 samples, 48.02%)</title><rect x="396.1" y="597" width="566.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="399.07" y="607.5" >net/http.serverHandler.ServeHTTP</text>
</g>
<g >
<title>net/http.putTextprotoReader (1 samples, 0.04%)</title><rect x="134.5" y="565" width="0.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="137.54" y="575.5" ></text>
</g>
<g >
<title>net/http.(*response).write (2 samples, 0.09%)</title><rect x="862.0" y="357" width="1.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="865.05" y="367.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.04%)</title><rect x="393.0" y="565" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="395.96" y="575.5" ></text>
</g>
<g >
<title>runtime.(*moduledata).textAddr (2 samples, 0.09%)</title><rect x="1000.1" y="469" width="1.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1003.08" y="479.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.04%)</title><rect x="798.7" y="277" width="0.6" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="801.74" y="287.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.04%)</title><rect x="794.1" y="309" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="797.07" y="319.5" ></text>
</g>
<g >
<title>unicode/utf8.ValidString (2 samples, 0.09%)</title><rect x="879.7" y="405" width="1.0" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="882.69" y="415.5" ></text>
</g>
<g >
<title>runtime.removespecial (1 samples, 0.04%)</title><rect x="255.4" y="469" width="0.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="258.44" y="479.5" ></text>
</g>
<g >
<title>runtime.rawstring (1 samples, 0.04%)</title><rect x="959.6" y="501" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="962.60" y="511.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.04%)</title><rect x="575.1" y="213" width="0.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="578.09" y="223.5" ></text>
</g>
<g >
<title>runtime.futex (13 samples, 0.57%)</title><rect x="439.1" y="133" width="6.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="442.14" y="143.5" ></text>
</g>
<g >
<title>net/http.Header.WriteSubset (7 samples, 0.31%)</title><rect x="284.0" y="549" width="3.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="286.98" y="559.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.EpollCtl (23 samples, 1.01%)</title><rect x="49.4" y="469" width="12.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="52.44" y="479.5" ></text>
</g>
<g >
<title>syscall.write (2 samples, 0.09%)</title><rect x="840.8" y="213" width="1.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="843.77" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="256.0" y="453" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="258.96" y="463.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.04%)</title><rect x="587.5" y="325" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="590.55" y="335.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.09%)</title><rect x="786.8" y="357" width="1.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="789.81" y="367.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.04%)</title><rect x="860.0" y="341" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="862.97" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeUnlock (1 samples, 0.04%)</title><rect x="290.2" y="501" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="293.21" y="511.5" ></text>
</g>
<g >
<title>syscall.Syscall (16 samples, 0.70%)</title><rect x="144.9" y="421" width="8.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="147.92" y="431.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="892.7" y="469" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="895.66" y="479.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="140.2" y="517" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="143.25" y="527.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="784.2" y="357" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="787.21" y="367.5" ></text>
</g>
<g >
<title>runtime.goready (14 samples, 0.62%)</title><rect x="439.1" y="261" width="7.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="442.14" y="271.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.nameOfFunction (4 samples, 0.18%)</title><rect x="401.3" y="469" width="2.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="404.26" y="479.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="600.5" y="325" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="603.52" y="335.5" ></text>
</g>
<g >
<title>runtime.convT (1 samples, 0.04%)</title><rect x="875.5" y="437" width="0.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="878.54" y="447.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgtype.encodePlanStringToAnyTextFormat.Encode (2 samples, 0.09%)</title><rect x="456.3" y="261" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="459.26" y="271.5" ></text>
</g>
<g >
<title>vendor/golang.org/x/net/http/httpguts.isCTL (1 samples, 0.04%)</title><rect x="965.3" y="597" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="968.31" y="607.5" ></text>
</g>
<g >
<title>runtime.goexit0 (69 samples, 3.03%)</title><rect x="1029.7" y="597" width="35.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1032.66" y="607.5" >run..</text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.04%)</title><rect x="80.6" y="453" width="0.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="83.57" y="463.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="833.0" y="277" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="835.99" y="287.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.04%)</title><rect x="158.4" y="501" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="161.41" y="511.5" ></text>
</g>
<g >
<title>unicode/utf8.EncodeRune (1 samples, 0.04%)</title><rect x="943.0" y="405" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="946.00" y="415.5" ></text>
</g>
<g >
<title>runtime.funcInfo.entry (1 samples, 0.04%)</title><rect x="996.4" y="453" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="999.45" y="463.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.04%)</title><rect x="789.4" y="405" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="792.40" y="415.5" ></text>
</g>
<g >
<title>golang.org/x/sync/semaphore.(*Weighted).notifyWaiters (23 samples, 1.01%)</title><rect x="769.2" y="277" width="11.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="772.16" y="287.5" ></text>
</g>
<g >
<title>time.Time.appendFormat (8 samples, 0.35%)</title><rect x="951.8" y="485" width="4.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="954.82" y="495.5" ></text>
</g>
<g >
<title>net/http.Header.get (1 samples, 0.04%)</title><rect x="287.6" y="549" width="0.5" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="290.62" y="559.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.04%)</title><rect x="1029.1" y="565" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1032.14" y="575.5" ></text>
</g>
<g >
<title>net/netip.Addr.Zone (1 samples, 0.04%)</title><rect x="959.1" y="517" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="962.09" y="527.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).Query (1 samples, 0.04%)</title><rect x="838.2" y="341" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="841.18" y="351.5" ></text>
</g>
<g >
<title>runtime.scanobject (35 samples, 1.54%)</title><rect x="1008.4" y="549" width="18.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1011.38" y="559.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.04%)</title><rect x="794.1" y="277" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="797.07" y="287.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (1 samples, 0.04%)</title><rect x="177.1" y="437" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="180.09" y="447.5" ></text>
</g>
<g >
<title>fmt.(*buffer).writeString (1 samples, 0.04%)</title><rect x="924.8" y="501" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="927.84" y="511.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (2 samples, 0.09%)</title><rect x="129.3" y="565" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="132.35" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="875.5" y="421" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="878.54" y="431.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="114.8" y="549" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="117.82" y="559.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetWriteDeadline (1 samples, 0.04%)</title><rect x="115.3" y="597" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="118.34" y="607.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Flush (137 samples, 6.02%)</title><rect x="627.0" y="293" width="71.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="629.98" y="303.5" >github.c..</text>
</g>
<g >
<title>runtime.funcname (2 samples, 0.09%)</title><rect x="402.3" y="453" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="405.30" y="463.5" ></text>
</g>
<g >
<title>syscall.Write (177 samples, 7.78%)</title><rect x="290.7" y="517" width="91.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="293.73" y="527.5" >syscall.Wr..</text>
</g>
<g >
<title>internal/poll.(*FD).destroy (3 samples, 0.13%)</title><rect x="174.5" y="501" width="1.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="177.49" y="511.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (131 samples, 5.76%)</title><rect x="630.1" y="181" width="68.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="633.10" y="191.5" >runtime..</text>
</g>
<g >
<title>internal/poll.(*SysFile).destroy (117 samples, 5.15%)</title><rect x="176.1" y="501" width="60.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="179.05" y="511.5" >intern..</text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*ExtendedQueryBuilder).Build (6 samples, 0.26%)</title><rect x="454.2" y="341" width="3.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="457.19" y="351.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.04%)</title><rect x="757.2" y="373" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="760.23" y="383.5" ></text>
</g>
<g >
<title>runtime.stealWork (27 samples, 1.19%)</title><rect x="1155.8" y="549" width="14.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1158.75" y="559.5" ></text>
</g>
<g >
<title>reflect.Value.String (1 samples, 0.04%)</title><rect x="854.8" y="309" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="857.78" y="319.5" ></text>
</g>
<g >
<title>bytes.IndexByte (1 samples, 0.04%)</title><rect x="551.2" y="261" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="554.22" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (7 samples, 0.31%)</title><rect x="738.0" y="309" width="3.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="741.03" y="319.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Engine).ServeHTTP (1,090 samples, 47.93%)</title><rect x="396.1" y="581" width="565.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="399.07" y="591.5" >github.com/gin-gonic/gin.(*Engine).ServeHTTP</text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.04%)</title><rect x="843.9" y="261" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="846.89" y="271.5" ></text>
</g>
<g >
<title>runtime.gfget (1 samples, 0.04%)</title><rect x="262.7" y="517" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="265.71" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.04%)</title><rect x="112.2" y="437" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="115.23" y="447.5" ></text>
</g>
<g >
<title>fmt.Fprint (52 samples, 2.29%)</title><rect x="893.7" y="533" width="27.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="896.70" y="543.5" >f..</text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.04%)</title><rect x="792.0" y="325" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="795.00" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (4 samples, 0.18%)</title><rect x="120.5" y="437" width="2.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="123.53" y="447.5" ></text>
</g>
<g >
<title>runtime.scanblock (9 samples, 0.40%)</title><rect x="1001.1" y="485" width="4.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1004.12" y="495.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.04%)</title><rect x="1064.9" y="501" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1067.94" y="511.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).execExtendedSuffix (3 samples, 0.13%)</title><rect x="838.7" y="309" width="1.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="841.70" y="319.5" ></text>
</g>
<g >
<title>unicode/utf8.RuneCount (1 samples, 0.04%)</title><rect x="931.6" y="421" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="934.58" y="431.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (2 samples, 0.09%)</title><rect x="980.9" y="613" width="1.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="983.88" y="623.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (221 samples, 9.72%)</title><rect x="268.4" y="581" width="114.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="271.42" y="591.5" >bufio.(*Writer..</text>
</g>
<g >
<title>syscall.Write (4 samples, 0.18%)</title><rect x="835.1" y="245" width="2.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="838.07" y="255.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/utils.(*SQLTracer).TraceQueryEnd (7 samples, 0.31%)</title><rect x="759.8" y="325" width="3.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="762.82" y="335.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="713.6" y="85" width="0.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="716.64" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (2 samples, 0.09%)</title><rect x="981.9" y="533" width="1.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="984.92" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Bind).Encode (3 samples, 0.13%)</title><rect x="732.3" y="309" width="1.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="735.32" y="319.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.write (1 samples, 0.04%)</title><rect x="173.5" y="533" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="176.46" y="543.5" ></text>
</g>
<g >
<title>runtime.goexit1 (1 samples, 0.04%)</title><rect x="1026.5" y="613" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1029.54" y="623.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.09%)</title><rect x="259.1" y="565" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="262.08" y="575.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*CounterVec).WithLabelValues (7 samples, 0.31%)</title><rect x="879.2" y="485" width="3.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="882.17" y="495.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.04%)</title><rect x="840.3" y="213" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="843.26" y="223.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollClose (31 samples, 1.36%)</title><rect x="236.8" y="485" width="16.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="239.76" y="495.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (1 samples, 0.04%)</title><rect x="895.3" y="501" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="898.26" y="511.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="1063.9" y="533" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1066.91" y="543.5" ></text>
</g>
<g >
<title>runtime.convTstring (3 samples, 0.13%)</title><rect x="784.2" y="389" width="1.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="787.21" y="399.5" ></text>
</g>
<g >
<title>fmt.(*buffer).writeString (1 samples, 0.04%)</title><rect x="933.1" y="437" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="936.14" y="447.5" ></text>
</g>
<g >
<title>net.(*conn).Write (162 samples, 7.12%)</title><rect x="464.6" y="277" width="84.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="467.56" y="287.5" >net.(*con..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="127.8" y="517" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="130.79" y="527.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).Exec (5 samples, 0.22%)</title><rect x="834.5" y="373" width="2.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="837.55" y="383.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (1,678 samples, 73.79%)</title><rect x="95.1" y="613" width="870.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="98.10" y="623.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.04%)</title><rect x="1169.8" y="549" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1172.76" y="559.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).peekMessage (3 samples, 0.13%)</title><rect x="763.5" y="293" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="766.46" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.04%)</title><rect x="963.8" y="533" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="966.76" y="543.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.09%)</title><rect x="868.8" y="341" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="871.80" y="351.5" ></text>
</g>
<g >
<title>runtime.deferprocStack (1 samples, 0.04%)</title><rect x="962.7" y="597" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="965.72" y="607.5" ></text>
</g>
<g >
<title>net.newFD (3 samples, 0.13%)</title><rect x="65.0" y="533" width="1.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="68.00" y="543.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtS (1 samples, 0.04%)</title><rect x="895.3" y="469" width="0.5" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="898.26" y="479.5" ></text>
</g>
<g >
<title>sync.(*entry).load (1 samples, 0.04%)</title><rect x="857.4" y="309" width="0.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="860.38" y="319.5" ></text>
</g>
<g >
<title>internal/abi.(*MapType).IndirectKey (1 samples, 0.04%)</title><rect x="107.0" y="549" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="110.04" y="559.5" ></text>
</g>
<g >
<title>runtime.memequal0 (1 samples, 0.04%)</title><rect x="761.4" y="277" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="764.38" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="598.4" y="277" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="601.44" y="287.5" ></text>
</g>
<g >
<title>strings.Cut (2 samples, 0.09%)</title><rect x="133.5" y="549" width="1.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="136.50" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeManual (1 samples, 0.04%)</title><rect x="1032.8" y="517" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1035.77" y="527.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (1 samples, 0.04%)</title><rect x="984.5" y="453" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="987.51" y="463.5" ></text>
</g>
<g >
<title>os.(*File).write (46 samples, 2.02%)</title><rect x="896.8" y="517" width="23.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="899.82" y="527.5" >o..</text>
</g>
<g >
<title>github.com/jackc/pgx/v5.RowToStructByName[go.shape.struct (2 samples, 0.09%)</title><rect x="423.1" y="373" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="426.05" y="383.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (29 samples, 1.28%)</title><rect x="965.8" y="613" width="15.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="968.83" y="623.5" ></text>
</g>
<g >
<title>runtime.ready (16 samples, 0.70%)</title><rect x="772.3" y="213" width="8.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="775.28" y="223.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*counter).Inc (1 samples, 0.04%)</title><rect x="882.8" y="485" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="885.81" y="495.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="261.2" y="533" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="264.15" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="963.8" y="581" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="966.76" y="591.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="583.9" y="309" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="586.91" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareWrite (2 samples, 0.09%)</title><rect x="628.5" y="245" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="631.54" y="255.5" ></text>
</g>
<g >
<title>net.JoinHostPort (3 samples, 0.13%)</title><rect x="116.9" y="597" width="1.6" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="119.90" y="607.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).receiveMessage (1 samples, 0.04%)</title><rect x="759.3" y="309" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="762.31" y="319.5" ></text>
</g>
<g >
<title>net.(*netFD).Close (158 samples, 6.95%)</title><rect x="174.5" y="549" width="82.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="177.49" y="559.5" >net.(*net..</text>
</g>
<g >
<title>fmt.newPrinter (1 samples, 0.04%)</title><rect x="946.6" y="501" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="949.63" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="117.4" y="533" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="120.41" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (3 samples, 0.13%)</title><rect x="412.7" y="405" width="1.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="415.67" y="415.5" ></text>
</g>
<g >
<title>context.withCancel (3 samples, 0.13%)</title><rect x="113.8" y="597" width="1.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="116.78" y="607.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (2 samples, 0.09%)</title><rect x="1006.8" y="501" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1009.82" y="511.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Conn).Release (34 samples, 1.50%)</title><rect x="765.0" y="341" width="17.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="768.01" y="351.5" ></text>
</g>
<g >
<title>sync.runtime_doSpin (1 samples, 0.04%)</title><rect x="782.1" y="277" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="785.14" y="287.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.04%)</title><rect x="594.8" y="149" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="597.81" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.04%)</title><rect x="984.5" y="485" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="987.51" y="495.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (13 samples, 0.57%)</title><rect x="383.6" y="549" width="6.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="386.61" y="559.5" ></text>
</g>
<g >
<title>net/url.parse (7 samples, 0.31%)</title><rect x="138.2" y="549" width="3.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="141.17" y="559.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.04%)</title><rect x="124.7" y="565" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="127.68" y="575.5" ></text>
</g>
<g >
<title>runtime.findmoduledatap (1 samples, 0.04%)</title><rect x="806.0" y="277" width="0.5" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="809.01" y="287.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*dbTx).Query (3 samples, 0.13%)</title><rect x="838.7" y="357" width="1.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="841.70" y="367.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.(*ReactionsStorage).getUniqEntityReactions (1 samples, 0.04%)</title><rect x="838.2" y="389" width="0.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="841.18" y="399.5" ></text>
</g>
<g >
<title>runtime.funcMaxSPDelta (1 samples, 0.04%)</title><rect x="884.9" y="357" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="887.88" y="367.5" ></text>
</g>
<g >
<title>runtime.notesleep (19 samples, 0.84%)</title><rect x="1036.9" y="533" width="9.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1039.92" y="543.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/binding.(*defaultValidator).ValidateStruct (1 samples, 0.04%)</title><rect x="845.4" y="389" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="848.44" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.04%)</title><rect x="451.1" y="293" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="454.07" y="303.5" ></text>
</g>
<g >
<title>net/netip.ParseAddr (5 samples, 0.22%)</title><rect x="956.5" y="501" width="2.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="959.49" y="511.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="236.8" y="453" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="239.76" y="463.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (10 samples, 0.44%)</title><rect x="558.0" y="117" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="560.97" y="127.5" ></text>
</g>
<g >
<title>runtime.nanotime (5 samples, 0.22%)</title><rect x="1112.7" y="549" width="2.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1115.68" y="559.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (4 samples, 0.18%)</title><rect x="277.8" y="533" width="2.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="280.76" y="543.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (1 samples, 0.04%)</title><rect x="447.4" y="261" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="450.44" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.13%)</title><rect x="1035.4" y="469" width="1.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1038.36" y="479.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (1 samples, 0.04%)</title><rect x="109.1" y="565" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="112.11" y="575.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).enterPotentialWriteReadDeadlock (9 samples, 0.40%)</title><rect x="622.3" y="309" width="4.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="625.31" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.04%)</title><rect x="168.3" y="501" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="171.27" y="511.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="1046.8" y="549" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1049.78" y="559.5" ></text>
</g>
<g >
<title>runtime.(*pageCache).allocN (1 samples, 0.04%)</title><rect x="832.0" y="197" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="834.95" y="207.5" ></text>
</g>
<g >
<title>runtime.newstack (2 samples, 0.09%)</title><rect x="890.6" y="357" width="1.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="893.59" y="367.5" ></text>
</g>
<g >
<title>net/http.appendTime (1 samples, 0.04%)</title><rect x="271.5" y="533" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="274.53" y="543.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Available (2 samples, 0.09%)</title><rect x="273.1" y="517" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="276.09" y="527.5" ></text>
</g>
<g >
<title>runtime.futex (18 samples, 0.79%)</title><rect x="1172.4" y="485" width="9.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1175.36" y="495.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollSetDeadline (1 samples, 0.04%)</title><rect x="115.3" y="565" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="118.34" y="575.5" ></text>
</g>
<g >
<title>net/http.(*conn).setState (1 samples, 0.04%)</title><rect x="260.1" y="597" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="263.11" y="607.5" ></text>
</g>
<g >
<title>strings.(*Builder).WriteString (3 samples, 0.13%)</title><rect x="883.8" y="469" width="1.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="886.84" y="479.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).NextRow (3 samples, 0.13%)</title><rect x="763.5" y="341" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="766.46" y="351.5" ></text>
</g>
<g >
<title>runtime.write1 (1 samples, 0.04%)</title><rect x="1055.6" y="517" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1058.60" y="527.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (1 samples, 0.04%)</title><rect x="455.2" y="245" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="458.22" y="255.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.04%)</title><rect x="986.1" y="501" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="989.07" y="511.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (2 samples, 0.09%)</title><rect x="703.3" y="181" width="1.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="706.26" y="191.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (4 samples, 0.18%)</title><rect x="161.5" y="533" width="2.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="164.52" y="543.5" ></text>
</g>
<g >
<title>net/http.shouldClose (2 samples, 0.09%)</title><rect x="137.1" y="565" width="1.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="140.13" y="575.5" ></text>
</g>
<g >
<title>runtime.interequal (1 samples, 0.04%)</title><rect x="108.1" y="533" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="111.07" y="543.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).receiveMessage (3 samples, 0.13%)</title><rect x="763.5" y="325" width="1.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="766.46" y="335.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.09%)</title><rect x="429.8" y="309" width="1.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="432.80" y="319.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgtype.encodePlanStringToAnyTextFormat.Encode (4 samples, 0.18%)</title><rect x="618.2" y="261" width="2.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="621.16" y="271.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.04%)</title><rect x="122.1" y="421" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="125.08" y="431.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (2 samples, 0.09%)</title><rect x="166.7" y="549" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="169.71" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="878.1" y="405" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="881.14" y="415.5" ></text>
</g>
<g >
<title>runtime.(*inlineUnwinder).resolveInternal (1 samples, 0.04%)</title><rect x="594.8" y="181" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="597.81" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (1 samples, 0.04%)</title><rect x="984.5" y="549" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="987.51" y="559.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="252.8" y="517" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="255.85" y="527.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.04%)</title><rect x="137.7" y="549" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="140.65" y="559.5" ></text>
</g>
<g >
<title>runtime.convT64 (1 samples, 0.04%)</title><rect x="948.7" y="517" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="951.71" y="527.5" ></text>
</g>
<g >
<title>net.(*conn).Read (1 samples, 0.04%)</title><rect x="834.5" y="197" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="837.55" y="207.5" ></text>
</g>
<g >
<title>runtime.(*inlineUnwinder).resolveInternal (1 samples, 0.04%)</title><rect x="43.2" y="373" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="46.21" y="383.5" ></text>
</g>
<g >
<title>runtime.netpoll (16 samples, 0.70%)</title><rect x="1047.3" y="549" width="8.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1050.30" y="559.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="173.5" y="581" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="176.46" y="591.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="742.7" y="309" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="745.70" y="319.5" ></text>
</g>
<g >
<title>runtime.strhash (1 samples, 0.04%)</title><rect x="276.7" y="501" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="279.72" y="511.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtS (1 samples, 0.04%)</title><rect x="944.6" y="437" width="0.5" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="947.56" y="447.5" ></text>
</g>
<g >
<title>runtime.findRunnable (57 samples, 2.51%)</title><rect x="1033.8" y="565" width="29.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1036.81" y="575.5" >ru..</text>
</g>
<g >
<title>runtime.(*activeSweep).begin (1 samples, 0.04%)</title><rect x="255.4" y="453" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="258.44" y="463.5" ></text>
</g>
<g >
<title>net.(*TCPListener).accept (141 samples, 6.20%)</title><rect x="12.1" y="549" width="73.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="15.08" y="559.5" >net.(*TC..</text>
</g>
<g >
<title>runtime.makechan (1 samples, 0.04%)</title><rect x="751.5" y="309" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="754.52" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.04%)</title><rect x="792.0" y="309" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="795.00" y="319.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).SendDescribe (2 samples, 0.09%)</title><rect x="729.2" y="309" width="1.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="732.21" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="43.2" y="421" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="46.21" y="431.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (1 samples, 0.04%)</title><rect x="834.5" y="117" width="0.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="837.55" y="127.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (2 samples, 0.09%)</title><rect x="1023.9" y="533" width="1.1" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1026.95" y="543.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.04%)</title><rect x="128.8" y="501" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="131.83" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.04%)</title><rect x="102.4" y="533" width="0.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="105.37" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.09%)</title><rect x="884.4" y="405" width="1.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="887.36" y="415.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.04%)</title><rect x="983.0" y="565" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="985.96" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (2 samples, 0.09%)</title><rect x="981.9" y="581" width="1.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="984.92" y="591.5" ></text>
</g>
<g >
<title>runtime.(*moduledata).textAddr (1 samples, 0.04%)</title><rect x="819.5" y="229" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="822.50" y="239.5" ></text>
</g>
<g >
<title>runtime.pMask.read (3 samples, 0.13%)</title><rect x="1153.2" y="549" width="1.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1156.16" y="559.5" ></text>
</g>
<g >
<title>runtime.tracebackPCs (1 samples, 0.04%)</title><rect x="594.8" y="197" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="597.81" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (2 samples, 0.09%)</title><rect x="884.4" y="389" width="1.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="887.36" y="399.5" ></text>
</g>
<g >
<title>net/url.(*URL).EscapedPath (4 samples, 0.18%)</title><rect x="887.0" y="469" width="2.0" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="889.96" y="479.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (1 samples, 0.04%)</title><rect x="989.7" y="485" width="0.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="992.70" y="495.5" ></text>
</g>
<g >
<title>net.(*netFD).setAddr (5 samples, 0.22%)</title><rect x="62.4" y="533" width="2.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="65.41" y="543.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (3 samples, 0.13%)</title><rect x="14.7" y="421" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.67" y="431.5" ></text>
</g>
<g >
<title>encoding/json.appendString[go.shape.string] (2 samples, 0.09%)</title><rect x="851.2" y="293" width="1.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="854.15" y="303.5" ></text>
</g>
<g >
<title>runtime.gogo (1 samples, 0.04%)</title><rect x="1074.8" y="549" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1077.80" y="559.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func1 (5 samples, 0.22%)</title><rect x="253.9" y="501" width="2.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="256.89" y="511.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.04%)</title><rect x="395.0" y="581" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="398.03" y="591.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="611.4" y="309" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="614.42" y="319.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.04%)</title><rect x="395.5" y="581" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="398.55" y="591.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.04%)</title><rect x="1028.6" y="549" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1031.62" y="559.5" ></text>
</g>
<g >
<title>strconv.appendEscapedRune (9 samples, 0.40%)</title><rect x="938.8" y="421" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="941.85" y="431.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Reset (2 samples, 0.09%)</title><rect x="99.3" y="597" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="102.25" y="607.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (70 samples, 3.08%)</title><rect x="797.2" y="341" width="36.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="800.19" y="351.5" >run..</text>
</g>
<g >
<title>encoding/json.structEncoder.encode (4 samples, 0.18%)</title><rect x="852.2" y="309" width="2.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="855.19" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.04%)</title><rect x="168.3" y="469" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="171.27" y="479.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (2 samples, 0.09%)</title><rect x="874.5" y="389" width="1.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="877.50" y="399.5" ></text>
</g>
<g >
<title>runtime.usleep (13 samples, 0.57%)</title><rect x="1162.0" y="501" width="6.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1164.98" y="511.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.04%)</title><rect x="257.5" y="565" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="260.52" y="575.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (22 samples, 0.97%)</title><rect x="847.0" y="373" width="11.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="850.00" y="383.5" ></text>
</g>
<g >
<title>runtime.(*waitq).enqueue (1 samples, 0.04%)</title><rect x="593.8" y="309" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="596.77" y="319.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).peekMessage (1 samples, 0.04%)</title><rect x="834.5" y="277" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="837.55" y="287.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (10 samples, 0.44%)</title><rect x="88.9" y="533" width="5.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="91.87" y="543.5" ></text>
</g>
<g >
<title>runtime.makemap_small (1 samples, 0.04%)</title><rect x="127.8" y="549" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="130.79" y="559.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.09%)</title><rect x="388.8" y="517" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="391.80" y="527.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.04%)</title><rect x="587.5" y="309" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="590.55" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="43.2" y="485" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="46.21" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*baseRows).Scan (1 samples, 0.04%)</title><rect x="842.8" y="325" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="845.85" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (2 samples, 0.09%)</title><rect x="890.6" y="405" width="1.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="893.59" y="415.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).ExecPrepared (2 samples, 0.09%)</title><rect x="837.1" y="309" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.14" y="319.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/render.JSON.Render (54 samples, 2.37%)</title><rect x="846.0" y="421" width="28.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="848.96" y="431.5" >g..</text>
</g>
<g >
<title>runtime.startm (16 samples, 0.70%)</title><rect x="1086.2" y="517" width="8.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1089.22" y="527.5" ></text>
</g>
<g >
<title>runtime.wakep (19 samples, 0.84%)</title><rect x="1171.8" y="549" width="9.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1174.84" y="559.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).ExecPrepared (219 samples, 9.63%)</title><rect x="620.2" y="341" width="113.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="623.24" y="351.5" >github.com/Dei..</text>
</g>
<g >
<title>bytes.Index (1 samples, 0.04%)</title><rect x="157.4" y="533" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="160.37" y="543.5" ></text>
</g>
<g >
<title>runtime.forEachG (1 samples, 0.04%)</title><rect x="139.7" y="453" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="142.73" y="463.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/utils.(*SQLTracer).TraceQueryStart (18 samples, 0.79%)</title><rect x="735.4" y="341" width="9.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="738.44" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.09%)</title><rect x="844.4" y="357" width="1.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="847.41" y="367.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).execExtendedSuffix (2 samples, 0.09%)</title><rect x="837.1" y="293" width="1.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="840.14" y="303.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.EpollWait (2 samples, 0.09%)</title><rect x="1006.8" y="517" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1009.82" y="527.5" ></text>
</g>
<g >
<title>runtime.notewakeup (18 samples, 0.79%)</title><rect x="1172.4" y="517" width="9.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1175.36" y="527.5" ></text>
</g>
<g >
<title>runtime.readvarint (1 samples, 0.04%)</title><rect x="808.1" y="245" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="811.08" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.13%)</title><rect x="611.4" y="325" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="614.42" y="335.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.04%)</title><rect x="90.9" y="485" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="93.95" y="495.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (1 samples, 0.04%)</title><rect x="101.3" y="501" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="104.33" y="511.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (9 samples, 0.40%)</title><rect x="973.1" y="517" width="4.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="976.10" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="591.2" y="293" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="594.18" y="303.5" ></text>
</g>
<g >
<title>runtime.pcvalue (6 samples, 0.26%)</title><rect x="997.0" y="453" width="3.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="999.97" y="463.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (243 samples, 10.69%)</title><rect x="267.4" y="597" width="126.1" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="270.38" y="607.5" >net/http.(*resp..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="451.1" y="325" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="454.07" y="335.5" ></text>
</g>
<g >
<title>net/http.(*Server).Serve (162 samples, 7.12%)</title><rect x="10.0" y="581" width="84.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >net/http...</text>
</g>
<g >
<title>runtime.assertI2I (1 samples, 0.04%)</title><rect x="409.0" y="421" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="412.04" y="431.5" ></text>
</g>
<g >
<title>net.setKeepAlive (12 samples, 0.53%)</title><rect x="66.6" y="517" width="6.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="69.56" y="527.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*baseRows).Scan (1 samples, 0.04%)</title><rect x="423.1" y="341" width="0.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="426.05" y="351.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (3 samples, 0.13%)</title><rect x="856.3" y="341" width="1.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="859.34" y="351.5" ></text>
</g>
<g >
<title>net.(*conn).Write (2 samples, 0.09%)</title><rect x="840.8" y="261" width="1.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="843.77" y="271.5" ></text>
</g>
<g >
<title>runtime.newproc1 (5 samples, 0.22%)</title><rect x="261.7" y="533" width="2.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="264.67" y="543.5" ></text>
</g>
<g >
<title>runtime.startm (4 samples, 0.18%)</title><rect x="386.2" y="437" width="2.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="389.21" y="447.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.04%)</title><rect x="563.7" y="117" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="566.68" y="127.5" ></text>
</g>
<g >
<title>runtime.deltimer (1 samples, 0.04%)</title><rect x="698.1" y="261" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="701.07" y="271.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/servers.NewRouter.func8 (20 samples, 0.88%)</title><rect x="834.0" y="453" width="10.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="837.03" y="463.5" ></text>
</g>
<g >
<title>runtime.gopark (2 samples, 0.09%)</title><rect x="754.1" y="293" width="1.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="757.12" y="303.5" ></text>
</g>
<g >
<title>runtime.forEachG (1 samples, 0.04%)</title><rect x="872.9" y="293" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="875.95" y="303.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (1 samples, 0.04%)</title><rect x="73.8" y="437" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="76.83" y="447.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*namedStructRowScanner).appendScanTargets (1 samples, 0.04%)</title><rect x="423.1" y="309" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="426.05" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (3 samples, 0.13%)</title><rect x="100.8" y="533" width="1.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="103.81" y="543.5" ></text>
</g>
<g >
<title>runtime.gcStart (1 samples, 0.04%)</title><rect x="872.9" y="341" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="875.95" y="351.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.write (2 samples, 0.09%)</title><rect x="168.8" y="501" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="171.79" y="511.5" ></text>
</g>
<g >
<title>internal/poll.accept (55 samples, 2.42%)</title><rect x="13.6" y="501" width="28.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="16.63" y="511.5" >in..</text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (1 samples, 0.04%)</title><rect x="1005.3" y="469" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1008.27" y="479.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.04%)</title><rect x="446.4" y="293" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="449.40" y="303.5" ></text>
</g>
<g >
<title>indexbytebody (2 samples, 0.09%)</title><rect x="763.5" y="245" width="1.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="766.46" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall (177 samples, 7.78%)</title><rect x="290.7" y="485" width="91.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="293.73" y="495.5" >syscall.Sy..</text>
</g>
<g >
<title>reflect.Value.Pointer (1 samples, 0.04%)</title><rect x="401.3" y="453" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="404.26" y="463.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (1 samples, 0.04%)</title><rect x="844.9" y="165" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="847.93" y="175.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="128.8" y="517" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="131.83" y="527.5" ></text>
</g>
<g >
<title>runtime.makemap_small (3 samples, 0.13%)</title><rect x="782.7" y="373" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="785.66" y="383.5" ></text>
</g>
<g >
<title>runtime.findObject (8 samples, 0.35%)</title><rect x="1018.8" y="533" width="4.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1021.76" y="543.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (8 samples, 0.35%)</title><rect x="709.5" y="53" width="4.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="712.49" y="63.5" ></text>
</g>
<g >
<title>runtime.concatstring3 (3 samples, 0.13%)</title><rect x="116.9" y="581" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="119.90" y="591.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).readUntilRowDescription (59 samples, 2.59%)</title><rect x="698.6" y="309" width="30.6" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="701.59" y="319.5" >gi..</text>
</g>
<g >
<title>runtime.funcname (1 samples, 0.04%)</title><rect x="262.2" y="517" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="265.19" y="527.5" ></text>
</g>
<g >
<title>net.(*conn).Write (1 samples, 0.04%)</title><rect x="838.2" y="261" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="841.18" y="271.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (2 samples, 0.09%)</title><rect x="840.8" y="181" width="1.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="843.77" y="191.5" ></text>
</g>
<g >
<title>runtime.(*randomOrder).start (1 samples, 0.04%)</title><rect x="1082.1" y="549" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1085.07" y="559.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (1 samples, 0.04%)</title><rect x="837.7" y="165" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="840.66" y="175.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.09%)</title><rect x="584.4" y="197" width="1.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="587.43" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.04%)</title><rect x="937.8" y="389" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="940.81" y="399.5" ></text>
</g>
<g >
<title>strings.Index (1 samples, 0.04%)</title><rect x="889.0" y="453" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="892.03" y="463.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).NextRow (3 samples, 0.13%)</title><rect x="429.8" y="341" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="432.80" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (2 samples, 0.09%)</title><rect x="628.5" y="229" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="631.54" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="141.8" y="565" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="144.80" y="575.5" ></text>
</g>
<g >
<title>runtime.bgsweep (4 samples, 0.18%)</title><rect x="981.9" y="613" width="2.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="984.92" y="623.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="456.8" y="245" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="459.78" y="255.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*poolRows).Next (48 samples, 2.11%)</title><rect x="424.1" y="373" width="24.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="427.09" y="383.5" >g..</text>
</g>
<g >
<title>bufio.NewWriterSize (1 samples, 0.04%)</title><rect x="124.7" y="581" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="127.68" y="591.5" ></text>
</g>
<g >
<title>runtime.wakep (5 samples, 0.22%)</title><rect x="91.5" y="517" width="2.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="94.47" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.09%)</title><rect x="139.7" y="533" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="142.73" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="594.3" y="293" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="597.29" y="303.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (3 samples, 0.13%)</title><rect x="850.6" y="309" width="1.6" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="853.63" y="319.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="254.9" y="469" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="257.93" y="479.5" ></text>
</g>
<g >
<title>runtime.pcvalue (10 samples, 0.44%)</title><rect x="806.5" y="261" width="5.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="809.53" y="271.5" ></text>
</g>
<g >
<title>runtime.freedefer (2 samples, 0.09%)</title><rect x="945.1" y="453" width="1.0" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="948.07" y="463.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="172.4" y="565" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="175.42" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.04%)</title><rect x="168.3" y="485" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="171.27" y="495.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/binding.decodeJSON (2 samples, 0.09%)</title><rect x="844.4" y="405" width="1.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="847.41" y="415.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (1 samples, 0.04%)</title><rect x="834.5" y="181" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="837.55" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (15 samples, 0.66%)</title><rect x="772.8" y="181" width="7.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="775.80" y="191.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Render (57 samples, 2.51%)</title><rect x="846.0" y="437" width="29.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="848.96" y="447.5" >gi..</text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="783.2" y="341" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="786.18" y="351.5" ></text>
</g>
<g >
<title>runtime.entersyscall (2 samples, 0.09%)</title><rect x="972.1" y="517" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="975.06" y="527.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (3 samples, 0.13%)</title><rect x="838.7" y="245" width="1.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="841.70" y="255.5" ></text>
</g>
<g >
<title>runtime.write (2 samples, 0.09%)</title><rect x="1151.6" y="533" width="1.0" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1154.60" y="543.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (2 samples, 0.09%)</title><rect x="980.9" y="581" width="1.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="983.88" y="591.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.04%)</title><rect x="772.3" y="181" width="0.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="775.28" y="191.5" ></text>
</g>
<g >
<title>strconv.appendQuotedWith (18 samples, 0.79%)</title><rect x="934.2" y="437" width="9.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="937.18" y="447.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.04%)</title><rect x="116.4" y="565" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="119.38" y="575.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.04%)</title><rect x="43.2" y="341" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="46.21" y="351.5" ></text>
</g>
<g >
<title>net/http.(*response).Write (3 samples, 0.13%)</title><rect x="861.5" y="373" width="1.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="864.53" y="383.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (1 samples, 0.04%)</title><rect x="601.0" y="293" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="604.04" y="303.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.09%)</title><rect x="15.2" y="341" width="1.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="18.19" y="351.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgtype.(*scanPlanArrayCodec).Scan (1 samples, 0.04%)</title><rect x="842.8" y="293" width="0.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="845.85" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (135 samples, 5.94%)</title><rect x="628.0" y="261" width="70.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="631.02" y="271.5" >net.(*n..</text>
</g>
<g >
<title>runtime.makechan (2 samples, 0.09%)</title><rect x="594.3" y="309" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="597.29" y="319.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*histogram).observe (4 samples, 0.18%)</title><rect x="427.2" y="293" width="2.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="430.20" y="303.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgtype.(*Map).Encode (9 samples, 0.40%)</title><rect x="615.6" y="277" width="4.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="618.57" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (11 samples, 0.48%)</title><rect x="261.7" y="565" width="5.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="264.67" y="575.5" ></text>
</g>
<g >
<title>runtime.mapdelete_faststr (1 samples, 0.04%)</title><rect x="136.6" y="533" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="139.61" y="543.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (4 samples, 0.18%)</title><rect x="45.8" y="453" width="2.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="48.80" y="463.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (40 samples, 1.76%)</title><rect x="268.4" y="565" width="20.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="271.42" y="575.5" ></text>
</g>
<g >
<title>sync.runtime_doSpin (2 samples, 0.09%)</title><rect x="448.0" y="277" width="1.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="450.96" y="287.5" ></text>
</g>
<g >
<title>net/http.Header.writeSubset (5 samples, 0.22%)</title><rect x="284.0" y="533" width="2.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="286.98" y="543.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (4 samples, 0.18%)</title><rect x="466.1" y="197" width="2.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="469.12" y="207.5" ></text>
</g>
<g >
<title>net.SplitHostPort (2 samples, 0.09%)</title><rect x="920.7" y="501" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="923.69" y="511.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).putPtr (1 samples, 0.04%)</title><rect x="1003.7" y="469" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1006.71" y="479.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*ResultReader).NextRow (1 samples, 0.04%)</title><rect x="841.8" y="309" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="844.81" y="319.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (1 samples, 0.04%)</title><rect x="755.7" y="309" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="758.67" y="319.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="895.3" y="437" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="898.26" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.04%)</title><rect x="430.3" y="261" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="433.32" y="271.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*noObjectivesSummary).Observe (1 samples, 0.04%)</title><rect x="883.3" y="485" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="886.32" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).receiveMessage (1 samples, 0.04%)</title><rect x="841.8" y="277" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="844.81" y="287.5" ></text>
</g>
<g >
<title>net/url.ParseRequestURI (7 samples, 0.31%)</title><rect x="138.2" y="565" width="3.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="141.17" y="575.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (113 samples, 4.97%)</title><rect x="178.1" y="453" width="58.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="181.13" y="463.5" >syscal..</text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (30 samples, 1.32%)</title><rect x="237.3" y="453" width="15.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="240.28" y="463.5" ></text>
</g>
<g >
<title>container/list.(*List).move (2 samples, 0.09%)</title><rect x="452.6" y="325" width="1.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="455.63" y="335.5" ></text>
</g>
<g >
<title>runtime.(*atomicHeadTailIndex).incTail (2 samples, 0.09%)</title><rect x="890.6" y="373" width="1.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="893.59" y="383.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.04%)</title><rect x="979.3" y="597" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="982.32" y="607.5" ></text>
</g>
<g >
<title>net/textproto.canonicalMIMEHeaderKey (5 samples, 0.22%)</title><rect x="161.0" y="549" width="2.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="164.00" y="559.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.04%)</title><rect x="74.3" y="453" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="77.34" y="463.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (1 samples, 0.04%)</title><rect x="115.3" y="581" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="118.34" y="591.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="794.1" y="373" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="797.07" y="383.5" ></text>
</g>
<g >
<title>runtime.nobarrierWakeTime (1 samples, 0.04%)</title><rect x="1152.6" y="549" width="0.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1155.64" y="559.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.(*ReactionsStorage).GetUniqEntityUserReactionsStrict (1 samples, 0.04%)</title><rect x="788.4" y="421" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="791.36" y="431.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.(*ReactionsStorage).getUniqEntityUserReactions (3 samples, 0.13%)</title><rect x="838.7" y="389" width="1.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="841.70" y="399.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.04%)</title><rect x="285.5" y="517" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="288.54" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.18%)</title><rect x="791.0" y="357" width="2.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="793.96" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="164.6" y="517" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="167.64" y="527.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).execExtendedSuffix (1 samples, 0.04%)</title><rect x="843.9" y="341" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="846.89" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (3 samples, 0.13%)</title><rect x="704.8" y="181" width="1.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="707.82" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="462.5" y="245" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="465.49" y="255.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (2 samples, 0.09%)</title><rect x="897.9" y="453" width="1.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="900.85" y="463.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/binding.(*defaultValidator).ValidateStruct (1 samples, 0.04%)</title><rect x="845.4" y="373" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="848.44" y="383.5" ></text>
</g>
<g >
<title>runtime.mcall (306 samples, 13.46%)</title><rect x="1027.1" y="613" width="158.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1030.06" y="623.5" >runtime.mcall</text>
</g>
<g >
<title>internal/poll.(*FD).Accept (57 samples, 2.51%)</title><rect x="12.6" y="517" width="29.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="15.59" y="527.5" >in..</text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (18 samples, 0.79%)</title><rect x="847.0" y="341" width="9.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="850.00" y="351.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (1 samples, 0.04%)</title><rect x="981.9" y="517" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="984.92" y="527.5" ></text>
</g>
<g >
<title>runtime.wakep (13 samples, 0.57%)</title><rect x="439.1" y="197" width="6.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="442.14" y="207.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).execExtendedSuffix (232 samples, 10.20%)</title><rect x="457.8" y="325" width="120.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="460.82" y="335.5" >github.com/Deim..</text>
</g>
<g >
<title>github.com/jackc/puddle/v2.(*Pool[go.shape.*uint8]).releaseAcquiredResource (26 samples, 1.14%)</title><rect x="433.4" y="309" width="13.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="436.43" y="319.5" ></text>
</g>
<g >
<title>sync/atomic.runtime_procPin (1 samples, 0.04%)</title><rect x="109.1" y="549" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="112.11" y="559.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).Query (268 samples, 11.79%)</title><rect x="449.5" y="357" width="139.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="452.52" y="367.5" >github.com/Deimvi..</text>
</g>
<g >
<title>go.uber.org/zap.(*SugaredLogger).log (3 samples, 0.13%)</title><rect x="744.8" y="325" width="1.5" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="747.78" y="335.5" ></text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.18%)</title><rect x="265.3" y="501" width="2.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="268.30" y="511.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (7 samples, 0.31%)</title><rect x="80.6" y="469" width="3.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="83.57" y="479.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).exec (4 samples, 0.18%)</title><rect x="840.3" y="357" width="2.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="843.26" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).decref (1 samples, 0.04%)</title><rect x="67.6" y="485" width="0.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="70.60" y="495.5" ></text>
</g>
<g >
<title>fmt.(*pp).handleMethods (6 samples, 0.26%)</title><rect x="943.5" y="469" width="3.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="946.52" y="479.5" ></text>
</g>
<g >
<title>net/http.(*Request).wantsHttp10KeepAlive (1 samples, 0.04%)</title><rect x="130.9" y="581" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="133.91" y="591.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.04%)</title><rect x="594.8" y="261" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="597.81" y="271.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).receiveMessage (1 samples, 0.04%)</title><rect x="430.8" y="309" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="433.84" y="319.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.04%)</title><rect x="979.3" y="565" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="982.32" y="575.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (2 samples, 0.09%)</title><rect x="984.0" y="597" width="1.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="986.99" y="607.5" ></text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.04%)</title><rect x="121.6" y="389" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="124.57" y="399.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollReset (1 samples, 0.04%)</title><rect x="628.5" y="213" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="631.54" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="154.3" y="437" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="157.26" y="447.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.04%)</title><rect x="1064.9" y="517" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1067.94" y="527.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtInteger (2 samples, 0.09%)</title><rect x="931.1" y="469" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="934.06" y="479.5" ></text>
</g>
<g >
<title>runtime.makemap (3 samples, 0.13%)</title><rect x="864.6" y="357" width="1.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="867.64" y="367.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*poolRows).Scan (1 samples, 0.04%)</title><rect x="423.1" y="357" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="426.05" y="367.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (46 samples, 2.02%)</title><rect x="703.3" y="197" width="23.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="706.26" y="207.5" >n..</text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.04%)</title><rect x="165.2" y="517" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="168.15" y="527.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.04%)</title><rect x="131.9" y="565" width="0.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="134.94" y="575.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (15 samples, 0.66%)</title><rect x="145.4" y="405" width="7.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="148.44" y="415.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast32 (2 samples, 0.09%)</title><rect x="734.4" y="325" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="737.40" y="335.5" ></text>
</g>
<g >
<title>runtime.runqgrab (6 samples, 0.26%)</title><rect x="1058.2" y="517" width="3.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1061.20" y="527.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func2 (2 samples, 0.09%)</title><rect x="981.9" y="549" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="984.92" y="559.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).execPrepared (2 samples, 0.09%)</title><rect x="837.1" y="325" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="840.14" y="335.5" ></text>
</g>
<g >
<title>runtime.convTstring (2 samples, 0.09%)</title><rect x="743.7" y="325" width="1.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="746.74" y="335.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.04%)</title><rect x="103.4" y="549" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="106.40" y="559.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*Conn).getStatementDescription (4 samples, 0.18%)</title><rect x="452.1" y="341" width="2.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="455.11" y="351.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (12 samples, 0.53%)</title><rect x="1049.4" y="517" width="6.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1052.38" y="527.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.04%)</title><rect x="86.8" y="533" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="89.80" y="543.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetsockoptInt (1 samples, 0.04%)</title><rect x="73.3" y="501" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="76.31" y="511.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.CollectExactlyOneRow[go.shape.*uint8] (2 samples, 0.09%)</title><rect x="842.8" y="405" width="1.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="845.85" y="415.5" ></text>
</g>
<g >
<title>runtime.procPin (1 samples, 0.04%)</title><rect x="127.3" y="517" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="130.27" y="527.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.09%)</title><rect x="1170.3" y="549" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1173.28" y="559.5" ></text>
</g>
<g >
<title>net/url.(*URL).setPath (1 samples, 0.04%)</title><rect x="139.2" y="533" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="142.21" y="543.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.09%)</title><rect x="981.9" y="565" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="984.92" y="575.5" ></text>
</g>
<g >
<title>runtime.mProf_FlushLocked (1 samples, 0.04%)</title><rect x="984.0" y="549" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="986.99" y="559.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.13%)</title><rect x="65.0" y="517" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="68.00" y="527.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*SugaredLogger).logln (2 samples, 0.09%)</title><rect x="876.6" y="437" width="1.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="879.58" y="447.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.04%)</title><rect x="117.9" y="517" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="120.93" y="527.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.09%)</title><rect x="860.5" y="357" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="863.49" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (6 samples, 0.26%)</title><rect x="968.9" y="565" width="3.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="971.94" y="575.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (1 samples, 0.04%)</title><rect x="13.1" y="501" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="16.11" y="511.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (1 samples, 0.04%)</title><rect x="160.5" y="517" width="0.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="163.48" y="527.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.04%)</title><rect x="73.8" y="453" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="76.83" y="463.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/internal/pgio.AppendUint16 (1 samples, 0.04%)</title><rect x="579.2" y="309" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="582.24" y="319.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.04%)</title><rect x="263.7" y="501" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="266.75" y="511.5" ></text>
</g>
<g >
<title>github.com/prometheus/client_golang/prometheus.(*HistogramVec).GetMetricWithLabelValues (6 samples, 0.26%)</title><rect x="406.4" y="437" width="3.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="409.45" y="447.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (13 samples, 0.57%)</title><rect x="439.1" y="149" width="6.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="442.14" y="159.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="742.7" y="293" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="745.70" y="303.5" ></text>
</g>
<g >
<title>runtime.notewakeup (15 samples, 0.66%)</title><rect x="772.8" y="165" width="7.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="775.80" y="175.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (7 samples, 0.31%)</title><rect x="119.0" y="549" width="3.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="121.97" y="559.5" ></text>
</g>
<g >
<title>runtime.findnull (1 samples, 0.04%)</title><rect x="262.2" y="485" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="265.19" y="495.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5.(*baseRows).Scan (2 samples, 0.09%)</title><rect x="842.8" y="357" width="1.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="845.85" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="751.5" y="293" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="754.52" y="303.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.(*ReactionsStorage).getUniqEntityUserReactions (352 samples, 15.48%)</title><rect x="605.7" y="405" width="182.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="608.71" y="415.5" >github.com/Deimvis/reac..</text>
</g>
<g >
<title>runtime.(*consistentHeapStats).acquire (1 samples, 0.04%)</title><rect x="1032.8" y="485" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1035.77" y="495.5" ></text>
</g>
<g >
<title>syscall.Syscall (4 samples, 0.18%)</title><rect x="835.1" y="213" width="2.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="838.07" y="223.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgxpool.(*Pool).isExpired (1 samples, 0.04%)</title><rect x="432.9" y="325" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="435.91" y="335.5" ></text>
</g>
<g >
<title>runtime.casgstatus (4 samples, 0.18%)</title><rect x="707.4" y="101" width="2.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="710.41" y="111.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="784.2" y="373" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="787.21" y="383.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.04%)</title><rect x="256.0" y="421" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="258.96" y="431.5" ></text>
</g>
<g >
<title>runtime.copystack (2 samples, 0.09%)</title><rect x="890.6" y="341" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="893.59" y="351.5" ></text>
</g>
<g >
<title>syscall.SetsockoptInt (7 samples, 0.31%)</title><rect x="80.6" y="501" width="3.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="83.57" y="511.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollSetDeadline (9 samples, 0.40%)</title><rect x="383.6" y="533" width="4.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="386.61" y="543.5" ></text>
</g>
<g >
<title>runtime.convTslice (3 samples, 0.13%)</title><rect x="742.2" y="325" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="745.18" y="335.5" ></text>
</g>
<g >
<title>time.when (1 samples, 0.04%)</title><rect x="626.5" y="277" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="629.46" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).close (31 samples, 1.36%)</title><rect x="236.8" y="501" width="16.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="239.76" y="511.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (1 samples, 0.04%)</title><rect x="144.9" y="389" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="147.92" y="399.5" ></text>
</g>
<g >
<title>runtime.netpollBreak (1 samples, 0.04%)</title><rect x="1055.6" y="549" width="0.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1058.60" y="559.5" ></text>
</g>
<g >
<title>runtime.sysUnused (2 samples, 0.09%)</title><rect x="980.9" y="517" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="983.88" y="527.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (1 samples, 0.04%)</title><rect x="837.7" y="149" width="0.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="840.66" y="159.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.04%)</title><rect x="625.9" y="213" width="0.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="628.95" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Load (1 samples, 0.04%)</title><rect x="1062.9" y="549" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1065.87" y="559.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.04%)</title><rect x="101.8" y="501" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="104.85" y="511.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (2 samples, 0.09%)</title><rect x="966.9" y="581" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="969.87" y="591.5" ></text>
</g>
<g >
<title>runtime.tracebackPCs (1 samples, 0.04%)</title><rect x="794.1" y="261" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="797.07" y="271.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (23 samples, 1.01%)</title><rect x="715.2" y="133" width="11.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="718.20" y="143.5" ></text>
</g>
<g >
<title>golang.org/x/sync/semaphore.(*Weighted).Release (25 samples, 1.10%)</title><rect x="768.1" y="293" width="13.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="771.13" y="303.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="61.9" y="469" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="64.89" y="479.5" ></text>
</g>
<g >
<title>strings.(*Builder).copyCheck (1 samples, 0.04%)</title><rect x="893.2" y="485" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="896.18" y="495.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.04%)</title><rect x="42.7" y="485" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="45.69" y="495.5" ></text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.04%)</title><rect x="819.0" y="245" width="0.5" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="821.98" y="255.5" ></text>
</g>
<g >
<title>runtime.entersyscall (13 samples, 0.57%)</title><rect x="707.4" y="133" width="6.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="710.41" y="143.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="947.7" y="485" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="950.67" y="495.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).BindJSON (3 samples, 0.13%)</title><rect x="844.4" y="453" width="1.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="847.41" y="463.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).ExecPrepared (3 samples, 0.13%)</title><rect x="840.3" y="325" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="843.26" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (6 samples, 0.26%)</title><rect x="100.3" y="565" width="3.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="103.29" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.04%)</title><rect x="959.6" y="437" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="962.60" y="447.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgconn.(*PgConn).convertRowDescription (1 samples, 0.04%)</title><rect x="576.1" y="277" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="579.13" y="287.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="457.8" y="261" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="460.82" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (13 samples, 0.57%)</title><rect x="439.1" y="165" width="6.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="442.14" y="175.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (9 samples, 0.40%)</title><rect x="68.1" y="453" width="4.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="71.12" y="463.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (3 samples, 0.13%)</title><rect x="704.8" y="165" width="1.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="707.82" y="175.5" ></text>
</g>
<g >
<title>net.(*TCPAddr).String (2 samples, 0.09%)</title><rect x="115.9" y="597" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="118.86" y="607.5" ></text>
</g>
<g >
<title>runtime.readvarint (1 samples, 0.04%)</title><rect x="991.8" y="453" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="994.78" y="463.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.04%)</title><rect x="112.7" y="533" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="115.74" y="543.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.13%)</title><rect x="604.2" y="389" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="607.15" y="399.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (1 samples, 0.04%)</title><rect x="984.5" y="533" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="987.51" y="543.5" ></text>
</g>
<g >
<title>reflect.StructTag.Lookup (1 samples, 0.04%)</title><rect x="843.4" y="309" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="846.37" y="319.5" ></text>
</g>
<g >
<title>net.ipEmptyString (8 samples, 0.35%)</title><rect x="118.5" y="597" width="4.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="121.45" y="607.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/utils.(*SQLTracer).TraceQueryEnd (9 samples, 0.40%)</title><rect x="425.1" y="325" width="4.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="428.13" y="335.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int64).Load (1 samples, 0.04%)</title><rect x="1061.3" y="533" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1064.31" y="543.5" ></text>
</g>
<g >
<title>runtime.mapiternext (2 samples, 0.09%)</title><rect x="278.8" y="517" width="1.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="281.80" y="527.5" ></text>
</g>
<g >
<title>runtime.runqgrab (1 samples, 0.04%)</title><rect x="1029.1" y="517" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1032.14" y="527.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.04%)</title><rect x="144.4" y="437" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="147.40" y="447.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (5 samples, 0.22%)</title><rect x="120.0" y="517" width="2.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="123.01" y="527.5" ></text>
</g>
<g >
<title>runtime.park_m (232 samples, 10.20%)</title><rect x="1065.5" y="597" width="120.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1068.46" y="607.5" >runtime.park_m</text>
</g>
<g >
<title>runtime.dodeltimer0 (1 samples, 0.04%)</title><rect x="1085.2" y="517" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1088.18" y="527.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.04%)</title><rect x="588.1" y="341" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="591.07" y="351.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="64.5" y="453" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="67.49" y="463.5" ></text>
</g>
<g >
<title>runtime.write (5 samples, 0.22%)</title><rect x="459.9" y="213" width="2.6" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="462.89" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.13%)</title><rect x="584.4" y="309" width="1.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="587.43" y="319.5" ></text>
</g>
<g >
<title>github.com/jackc/pgx/v5/pgproto3.(*Frontend).Flush (4 samples, 0.18%)</title><rect x="835.1" y="293" width="2.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="838.07" y="303.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.09%)</title><rect x="584.4" y="213" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="587.43" y="223.5" ></text>
</g>
<g >
<title>net/url.(*URL).EscapedPath (1 samples, 0.04%)</title><rect x="411.6" y="437" width="0.6" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="414.64" y="447.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="591.2" y="277" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="594.18" y="287.5" ></text>
</g>
<g >
<title>strings.TrimSpace (2 samples, 0.09%)</title><rect x="921.7" y="501" width="1.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="924.72" y="511.5" ></text>
</g>
<g >
<title>runtime.schedule (225 samples, 9.89%)</title><rect x="1068.6" y="581" width="116.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1071.58" y="591.5" >runtime.schedule</text>
</g>
<g >
<title>context.(*cancelCtx).propagateCancel (7 samples, 0.31%)</title><rect x="125.7" y="565" width="3.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="128.72" y="575.5" ></text>
</g>
<g >
<title>runtime.closechan.goready.func1 (14 samples, 0.62%)</title><rect x="439.1" y="229" width="7.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="442.14" y="239.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Engine).handleHTTPRequest (1 samples, 0.04%)</title><rect x="960.6" y="565" width="0.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="963.64" y="575.5" ></text>
</g>
<g >
<title>runtime.spanOf (3 samples, 0.13%)</title><rect x="1025.0" y="533" width="1.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1027.99" y="543.5" ></text>
</g>
<g >
<title>runtime.convT (1 samples, 0.04%)</title><rect x="741.7" y="325" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="744.66" y="335.5" ></text>
</g>
<g >
<title>runtime.ready (5 samples, 0.22%)</title><rect x="385.7" y="469" width="2.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="388.69" y="479.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.09%)</title><rect x="1170.3" y="565" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1173.28" y="575.5" ></text>
</g>
<g >
<title>net.setKeepAlivePeriod (14 samples, 0.62%)</title><rect x="72.8" y="517" width="7.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="75.79" y="527.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).putFast (1 samples, 0.04%)</title><rect x="1003.2" y="469" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1006.19" y="479.5" ></text>
</g>
<g >
<title>reflect.Value.Kind (1 samples, 0.04%)</title><rect x="855.8" y="325" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="858.82" y="335.5" ></text>
</g>
<g >
<title>runtime.ready (14 samples, 0.62%)</title><rect x="439.1" y="213" width="7.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="442.14" y="223.5" ></text>
</g>
<g >
<title>github.com/Deimvis/reactionsstorage/src/storages.(*ReactionsStorage).AddUserReaction (11 samples, 0.48%)</title><rect x="834.5" y="421" width="5.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="837.55" y="431.5" ></text>
</g>
<g >
<title>runtime.(*limiterEvent).stop (1 samples, 0.04%)</title><rect x="1155.2" y="533" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1158.23" y="543.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="872.9" y="325" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="875.95" y="335.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (2 samples, 0.09%)</title><rect x="972.1" y="501" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="975.06" y="511.5" ></text>
</g>
<g >
<title>runtime.notesleep (35 samples, 1.54%)</title><rect x="1094.5" y="533" width="18.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1097.52" y="543.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.04%)</title><rect x="713.6" y="53" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="716.64" y="63.5" ></text>
</g>
<g >
<title>syscall.anyToSockaddr (3 samples, 0.13%)</title><rect x="44.2" y="501" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="47.25" y="511.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).initAt (2 samples, 0.09%)</title><rect x="798.2" y="293" width="1.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="801.22" y="303.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.04%)</title><rect x="134.5" y="533" width="0.6" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="137.54" y="543.5" ></text>
</g>
<g >
<title>fmt.parsenum (1 samples, 0.04%)</title><rect x="947.2" y="501" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="950.15" y="511.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (1 samples, 0.04%)</title><rect x="597.9" y="293" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="600.92" y="303.5" ></text>
</g>
</g>
</svg>
