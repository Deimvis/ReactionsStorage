#!/usr/bin/env bash

function log_query() {
    local start=$1  # unix ts in seconds
    local end=$2    # unix ts in seconds
    local query=$3
    echo "INFO: Start prometheus query | [$start, $end] | query: $query" >&2
}

function capture_latency_p95__depr() {
    local start=$1  # unix ts in seconds
    local end=$2    # unix ts in seconds
    local method=$3 # metric's method label
    local path=$4   # metric's path label
    local query="histogram_quantile(0.95, sum(rate(gin_request_duration_seconds_v2_bucket{method=\"$method\",path=\"$path\"}[1m])) by (le))"
    log_query $start $end $query
    local latency=$(curl -s "http://158.160.111.71:9090/api/v1/query_range?start=$start&end=$end&step=15s" --data-urlencode "query=$query" |
                jq '[.data.result[0].values[] | (.[1]|tonumber) ] | add/length')
    echo $latency
}

function capture_latency_p95() {
    local start=$1  # unix ts in seconds
    local end=$2    # unix ts in seconds
    local method=$3 # metric's method label
    local path=$4   # metric's path label
    local interval=$((end-start))
    local query="histogram_quantile(0.95, sum(rate(gin_request_duration_seconds_v2_bucket{method=\"$method\",path=\"$path\"}[${interval}s])) by (le))"
    log_query $start $end $query
    local latency=$(curl -s "http://158.160.111.71:9090/api/v1/query?time=$end" --data-urlencode "query=$query" |
                    jq '.data.result[0].value[1]|tonumber')
    echo $latency
}

function capture_avg_rps() {
    local start=$1  # unix ts in seconds
    local end=$2    # unix ts in seconds
    local interval=$((end-start))
    local query="sum(rate(gin_requests_total[${interval}s]))"
    log_query $start $end $query
    local avg_rps=$(curl -s "http://158.160.111.71:9090/api/v1/query?time=$end" --data-urlencode "query=$query" |
                    jq '.data.result[0].value[1]|tonumber')
    echo $avg_rps
}

function capture_error_avg_rps() {
    local start=$1  # unix ts in seconds
    local end=$2    # unix ts in seconds
    local interval=$((end-start))
    local query="sum((rate(rs_client_requests_total{code=~\"4[0-9]{2}|\"}[${interval}s]) +
                      rate(rs_client_requests_total{code=~\"5[0-9]{2}|\"}[${interval}s]) +
                      rate(rs_client_requests_total{has_error=\"true\"}[${interval}s])))"
    log_query $start $end $query
    local error_avg_rps=$(curl -s "http://158.160.111.71:9090/api/v1/query?time=$end" --data-urlencode "query=$query" |
                          jq '.data.result[0] | if (. == null) then 0 else .value[1]|tonumber end')
    echo $error_avg_rps
}

function capture_metrics() {
    local start=$1  # unix ts in seconds
    local end=$2    # unix ts in seconds
    jq -n \
        --argjson "_meta"             "$(jq -n --arg start_ts $start --arg end_ts $end '$ARGS.named')" \
        --argjson "GET_/reactions"    "$(jq -n --arg latency_p95 $(capture_latency_p95 $start $end GET    /reactions) '$ARGS.named')" \
        --argjson "POST_/reactions"   "$(jq -n --arg latency_p95 $(capture_latency_p95 $start $end POST   /reactions) '$ARGS.named')" \
        --argjson "DELETE_/reactions" "$(jq -n --arg latency_p95 $(capture_latency_p95 $start $end DELETE /reactions) '$ARGS.named')" \
        --argjson "avg_rps"           "$(jq -n --arg total $(capture_avg_rps           $start $end) \
                                               --arg error $(capture_error_avg_rps     $start $end)                   '$ARGS.named')" \
        '$ARGS.named'
}

MEASURE_START_TS=$1
MEASURE_END_TS=$2
capture_metrics $MEASURE_START_TS $MEASURE_END_TS
