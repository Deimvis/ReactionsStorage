version: "3.8"

services:
  reactions_storage:
    image: deimvis/reactions_storage:latest
    build: .
    container_name: reactions_storage
    ports:
      - 8080:8080
    environment:
      - PORT=8080
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      prometheus:
        condition: service_started
  
  db:
    image: postgres:15.2
    container_name: rs_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5433:5432
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbrusenin -d reactions"]
      interval: 2s
      timeout: 2s
      retries: 5

  prometheus:
    image: prom/prometheus
    container_name: rs_prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-admin-api'
    ports:
      - 9090:9090
    volumes:
      - ./deploy/docker-compose/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    restart: unless-stopped

  prometheus_pushgateway:
    image: prom/pushgateway
    container_name: rs_prometheus_pushgateway
    ports:
      - 9091:9091
    volumes:
      - ./deploy/docker-compose/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    restart: unless-stopped
  
  prometheus_node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: rs_prometheus_node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  grafana:
    image: grafana/grafana
    container_name: rs_grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./deploy/docker-compose/grafana:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  nginx:
    image: deimvis/rs_nginx:latest
    build: deploy/docker-compose/nginx
    container_name: rs_nginx
    ports:
      - 80:80
    volumes:
      - ./deploy/docker-compose/nginx:/etc/nginx/conf.d
      - nginx_static_data:/static
    restart: unless-stopped
    depends_on:
      - reactions_storage
  
  simulation:
    image: deimvis/rs_simulation:latest
    build:
      context: .
      dockerfile: tests/simulation/Dockerfile
    container_name: rs_simulation
    volumes:
      - ./deploy/docker-compose/simulation/configs:/app/tests/simulation/configs

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  nginx_static_data:
